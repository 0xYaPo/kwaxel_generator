"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getTransactions_exports = {};
__export(getTransactions_exports, {
  getTransactions: () => getTransactions
});
module.exports = __toCommonJS(getTransactions_exports);
var import_axios = __toESM(require("axios"));
var import_endpoints = require("../../apiCalls/endpoints");
const getTransactions = ({
  apiAddress,
  apiTimeout,
  sender,
  receiver,
  page = 1,
  transactionSize = 15,
  condition = "should",
  withScResults = true,
  after,
  before,
  search,
  status,
  withUsername
}) => {
  const params = {
    sender,
    receiver,
    condition,
    after,
    before,
    search,
    from: (page - 1) * transactionSize,
    ...transactionSize > 0 ? { size: transactionSize } : {},
    withScResults,
    withUsername,
    status
  };
  const timeout = apiTimeout ? { timeout: parseInt(String(apiTimeout)) } : {};
  return import_axios.default.get(
    `${apiAddress}/${import_endpoints.TRANSACTIONS_ENDPOINT}`,
    {
      params,
      ...timeout
    }
  );
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getTransactions
});
//# sourceMappingURL=getTransactions.cjs.map
