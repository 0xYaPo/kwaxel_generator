{
  "version": 3,
  "sources": ["../../../src/apiCalls/configuration/getGasStationMetadata.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport { getCleanApiAddress } from 'apiCalls/configuration/getCleanApiAddress';\nimport { NetworkType } from 'types/network.types';\n\ninterface IGasStationApiResponse {\n  lastBlock: number;\n  fast: number;\n  faster: number;\n}\n\nconst GAS_STATION_ENDPOINT = 'transactions/ppu';\n\nexport async function getGasStationMetadataFromApi(\n  shard: number,\n  customApiAddress?: string\n): Promise<NetworkType['gasStationMetadata'] | null> {\n  const apiAddress = getCleanApiAddress(customApiAddress);\n  const gasStationUrl = `${apiAddress}/${GAS_STATION_ENDPOINT}/${shard}`;\n\n  try {\n    const { data } = await axios.get<IGasStationApiResponse>(gasStationUrl);\n\n    if (data) {\n      return {\n        [shard]: {\n          lastBlock: data.lastBlock,\n          fast: data.fast,\n          faster: data.faster\n        }\n      };\n    }\n    return null;\n  } catch (err) {\n    console.error(\n      'Error fetching gas station metadata from:',\n      gasStationUrl,\n      err\n    );\n    return null;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,gCAAmC;AASnC,MAAM,uBAAuB;AAE7B,eAAsB,6BACpB,OACA,kBACmD;AACnD,QAAM,iBAAa,8CAAmB,gBAAgB;AACtD,QAAM,gBAAgB,GAAG,UAAU,IAAI,oBAAoB,IAAI,KAAK;AAEpE,MAAI;AACF,UAAM,EAAE,KAAK,IAAI,MAAM,aAAAA,QAAM,IAA4B,aAAa;AAEtE,QAAI,MAAM;AACR,aAAO;AAAA,QACL,CAAC,KAAK,GAAG;AAAA,UACP,WAAW,KAAK;AAAA,UAChB,MAAM,KAAK;AAAA,UACX,QAAQ,KAAK;AAAA,QACf;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT,SAAS,KAAK;AACZ,YAAQ;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;",
  "names": ["axios"]
}
