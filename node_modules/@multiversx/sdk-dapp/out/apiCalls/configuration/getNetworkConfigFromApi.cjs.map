{
  "version": 3,
  "sources": ["../../../src/apiCalls/configuration/getNetworkConfigFromApi.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport { ApiNetworkConfigType } from 'types/network.types';\nimport { NETWORK_CONFIG_ENDPOINT } from '../endpoints';\n\nconst urlIsValid = (url: string) => {\n  try {\n    return Boolean(new URL(url));\n  } catch {\n    return false;\n  }\n};\n\nexport async function getNetworkConfigFromApi(apiAddress: string) {\n  if (!urlIsValid(apiAddress)) {\n    return null;\n  }\n\n  const configUrl = `${apiAddress}/${NETWORK_CONFIG_ENDPOINT}`;\n\n  try {\n    const { data } = await axios.get<{\n      data: { config: ApiNetworkConfigType };\n    }>(configUrl);\n\n    if (data != null) {\n      return data?.data?.config;\n    }\n  } catch (_err) {\n    console.error('error fetching configuration for ', configUrl);\n  }\n  return null;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAElB,uBAAwC;AAExC,MAAM,aAAa,CAAC,QAAgB;AAClC,MAAI;AACF,WAAO,QAAQ,IAAI,IAAI,GAAG,CAAC;AAAA,EAC7B,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AAEA,eAAsB,wBAAwB,YAAoB;AAChE,MAAI,CAAC,WAAW,UAAU,GAAG;AAC3B,WAAO;AAAA,EACT;AAEA,QAAM,YAAY,GAAG,UAAU,IAAI,wCAAuB;AAE1D,MAAI;AACF,UAAM,EAAE,KAAK,IAAI,MAAM,aAAAA,QAAM,IAE1B,SAAS;AAEZ,QAAI,QAAQ,MAAM;AAChB,aAAO,MAAM,MAAM;AAAA,IACrB;AAAA,EACF,SAAS,MAAM;AACb,YAAQ,MAAM,qCAAqC,SAAS;AAAA,EAC9D;AACA,SAAO;AACT;",
  "names": ["axios"]
}
