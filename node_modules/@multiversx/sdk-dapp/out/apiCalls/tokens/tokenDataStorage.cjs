"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var tokenDataStorage_exports = {};
__export(tokenDataStorage_exports, {
  setTokenDataStorage: () => setTokenDataStorage,
  tokenDataStorage: () => tokenDataStorage
});
module.exports = __toCommonJS(tokenDataStorage_exports);
let memoryCache = {};
let tokenDataStorage = {
  setItem: async (key, tokenData) => {
    try {
      memoryCache[key] = JSON.stringify(tokenData);
    } catch (e) {
      console.error("tokenDataStorage unable to serialize", e);
    }
  },
  getItem: async (key) => {
    if (!memoryCache[key]) {
      return null;
    }
    try {
      return JSON.parse(memoryCache[key]);
    } catch (e) {
      console.error("tokenDataStorage unable to parse", e);
    }
  },
  clear: async () => {
    memoryCache = {};
  },
  removeItem: async (key) => {
    delete memoryCache[key];
  }
};
const setTokenDataStorage = (tokenDataCacheStorage) => {
  tokenDataStorage = tokenDataCacheStorage;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  setTokenDataStorage,
  tokenDataStorage
});
//# sourceMappingURL=tokenDataStorage.cjs.map
