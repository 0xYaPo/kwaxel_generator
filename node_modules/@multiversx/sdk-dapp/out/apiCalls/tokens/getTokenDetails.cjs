"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getTokenDetails_exports = {};
__export(getTokenDetails_exports, {
  getTokenDetails: () => getTokenDetails
});
module.exports = __toCommonJS(getTokenDetails_exports);
var import_endpoints = require("../../apiCalls/endpoints");
var import_axiosInstance = require("../../apiCalls/utils/axiosInstance");
var import_selectors = require("../../store/selectors");
var import_store = require("../../store/store");
var import_getIdentifierType = require("../../utils/validation/getIdentifierType");
async function getTokenDetails({
  tokenId
}) {
  const network = (0, import_selectors.networkSelector)((0, import_store.getState)());
  const { isNft } = (0, import_getIdentifierType.getIdentifierType)(tokenId);
  const tokenIdentifier = tokenId;
  const tokenEndpoint = isNft ? import_endpoints.NFTS_ENDPOINT : import_endpoints.TOKENS_ENDPOINT;
  if (!tokenIdentifier) {
    return {
      tokenDecimals: Number(network.decimals),
      tokenLabel: "",
      tokenAvatar: ""
    };
  }
  try {
    const { data: selectedToken } = await import_axiosInstance.axiosInstance.get(
      `${network.apiAddress}/${tokenEndpoint}/${tokenIdentifier}`
    );
    const tokenDecimals = selectedToken ? selectedToken?.decimals : Number(network.decimals);
    const tokenLabel = selectedToken ? selectedToken?.name : "";
    const tokenAvatar = selectedToken ? selectedToken?.assets?.svgUrl ?? selectedToken?.media?.[0]?.thumbnailUrl : "";
    return {
      tokenDecimals,
      tokenLabel,
      type: selectedToken?.type,
      tokenAvatar,
      identifier: selectedToken?.identifier,
      assets: selectedToken?.assets,
      esdtPrice: selectedToken?.price,
      ticker: selectedToken?.ticker,
      name: selectedToken?.name
    };
  } catch (error) {
    return {
      error: `Error fetching token ${tokenIdentifier}: ${error.toString()}`,
      tokenDecimals: Number(network.decimals),
      tokenLabel: "",
      tokenAvatar: "",
      identifier: tokenIdentifier
    };
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getTokenDetails
});
//# sourceMappingURL=getTokenDetails.cjs.map
