{
  "version": 3,
  "sources": ["../../../src/apiCalls/tokens/getPersistedToken.ts"],
  "sourcesContent": ["import { axiosInstance } from 'apiCalls/utils/axiosInstance';\nimport { TIMEOUT } from 'constants/network.constants';\nimport { tokenDataStorage } from './tokenDataStorage';\n\nexport async function getPersistedToken<T>(url: string): Promise<T> {\n  const config = {\n    timeout: TIMEOUT\n  };\n\n  const cachedToken: T | null = await tokenDataStorage.getItem(url);\n\n  if (cachedToken) {\n    return cachedToken;\n  }\n\n  const response = await axiosInstance.get<T>(url, config);\n\n  await tokenDataStorage.setItem(url, response.data);\n\n  return response.data;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA8B;AAC9B,qBAAwB;AACxB,8BAAiC;AAEjC,eAAsB,kBAAqB,KAAyB;AAClE,QAAM,SAAS;AAAA,IACb,SAAS;AAAA,EACX;AAEA,QAAM,cAAwB,MAAM,yCAAiB,QAAQ,GAAG;AAEhE,MAAI,aAAa;AACf,WAAO;AAAA,EACT;AAEA,QAAM,WAAW,MAAM,mCAAc,IAAO,KAAK,MAAM;AAEvD,QAAM,yCAAiB,QAAQ,KAAK,SAAS,IAAI;AAEjD,SAAO,SAAS;AAClB;",
  "names": []
}
