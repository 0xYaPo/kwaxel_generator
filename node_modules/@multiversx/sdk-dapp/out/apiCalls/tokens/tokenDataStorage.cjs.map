{
  "version": 3,
  "sources": ["../../../src/apiCalls/tokens/tokenDataStorage.ts"],
  "sourcesContent": ["let memoryCache: Record<string, string> = {};\n\nexport let tokenDataStorage = {\n  setItem: async <T>(key: string, tokenData: T) => {\n    try {\n      memoryCache[key] = JSON.stringify(tokenData);\n    } catch (e) {\n      console.error('tokenDataStorage unable to serialize', e);\n    }\n  },\n  getItem: async (key: string) => {\n    if (!memoryCache[key]) {\n      return null;\n    }\n    try {\n      return JSON.parse(memoryCache[key]);\n    } catch (e) {\n      console.error('tokenDataStorage unable to parse', e);\n    }\n  },\n  clear: async () => {\n    memoryCache = {};\n  },\n  removeItem: async (key: string) => {\n    delete memoryCache[key];\n  }\n};\n\nexport const setTokenDataStorage = (\n  tokenDataCacheStorage: typeof tokenDataStorage\n) => {\n  tokenDataStorage = tokenDataCacheStorage;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAI,cAAsC,CAAC;AAEpC,IAAI,mBAAmB;AAAA,EAC5B,SAAS,OAAU,KAAa,cAAiB;AAC/C,QAAI;AACF,kBAAY,GAAG,IAAI,KAAK,UAAU,SAAS;AAAA,IAC7C,SAAS,GAAG;AACV,cAAQ,MAAM,wCAAwC,CAAC;AAAA,IACzD;AAAA,EACF;AAAA,EACA,SAAS,OAAO,QAAgB;AAC9B,QAAI,CAAC,YAAY,GAAG,GAAG;AACrB,aAAO;AAAA,IACT;AACA,QAAI;AACF,aAAO,KAAK,MAAM,YAAY,GAAG,CAAC;AAAA,IACpC,SAAS,GAAG;AACV,cAAQ,MAAM,oCAAoC,CAAC;AAAA,IACrD;AAAA,EACF;AAAA,EACA,OAAO,YAAY;AACjB,kBAAc,CAAC;AAAA,EACjB;AAAA,EACA,YAAY,OAAO,QAAgB;AACjC,WAAO,YAAY,GAAG;AAAA,EACxB;AACF;AAEO,MAAM,sBAAsB,CACjC,0BACG;AACH,qBAAmB;AACrB;",
  "names": []
}
