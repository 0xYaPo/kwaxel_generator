{
  "version": 3,
  "sources": ["../../src/utils/transactions/getInterpretedTransaction/getTransactionValue/helpers/getTransactionActionNftText.ts"],
  "sourcesContent": ["import { formatAmount } from 'lib/sdkDappUtils';\nimport { TokenArgumentType } from 'types/serverTransactions.types';\nimport { NftEnumType } from 'types/tokens.types';\nimport { explorerUrlBuilder } from '../../../explorerUrlBuilder';\n\nexport interface TransactionActionNftType {\n  token: TokenArgumentType;\n  noValue?: boolean;\n  showLastNonZeroDecimal?: boolean;\n}\nexport interface TransactionActionNftReturnType {\n  badgeText: string | null;\n  tokenFormattedAmount: string | null;\n  tokenExplorerLink: string;\n  tokenLinkText: string;\n  token: TokenArgumentType;\n  showLastNonZeroDecimal?: boolean;\n  noValue?: boolean;\n}\n\nexport function getTransactionActionNftText({\n  token,\n  noValue,\n  showLastNonZeroDecimal\n}: TransactionActionNftType): TransactionActionNftReturnType {\n  const isTokenAmountVisible =\n    !noValue && token.value && token.type !== NftEnumType.NonFungibleESDT;\n\n  const canShowFormattedAmount = token.decimals != null;\n\n  let badgeText = '';\n  if (token.type === NftEnumType.NonFungibleESDT) {\n    badgeText = 'NFT';\n  }\n  if (token.type === NftEnumType.SemiFungibleESDT) {\n    badgeText = 'SFT';\n  }\n  if (token.type === NftEnumType.MetaESDT) {\n    badgeText = 'Meta-ESDT';\n  }\n\n  let tokenFormattedAmount = '';\n  if (isTokenAmountVisible && canShowFormattedAmount) {\n    tokenFormattedAmount = canShowFormattedAmount\n      ? formatAmount({\n          input: token.value,\n          decimals: token.decimals,\n          digits: 2,\n          showLastNonZeroDecimal\n        })\n      : Number(token.value).toLocaleString('en');\n  }\n\n  const tokenExplorerLink = explorerUrlBuilder.nftDetails(\n    String(token.identifier)\n  );\n\n  const tokenLinkText =\n    token.ticker === token.collection\n      ? token.identifier ?? token.ticker\n      : token.ticker;\n\n  return {\n    badgeText,\n    tokenFormattedAmount: isTokenAmountVisible ? tokenFormattedAmount : null,\n    tokenExplorerLink,\n    tokenLinkText,\n    token,\n    noValue,\n    showLastNonZeroDecimal\n  };\n}\n"],
  "mappings": "kFAoBO,SAASA,EAA4B,CAC1C,MAAAC,EACA,QAAAC,EACA,uBAAAC,CACF,EAA6D,CAC3D,IAAMC,EACJ,CAACF,GAAWD,EAAM,OAASA,EAAM,yBAE7BI,EAAyBJ,EAAM,UAAY,KAE7CK,EAAY,GACZL,EAAM,2BACRK,EAAY,OAEVL,EAAM,4BACRK,EAAY,OAEVL,EAAM,oBACRK,EAAY,aAGd,IAAIC,EAAuB,GACvBH,GAAwBC,IAC1BE,EAAuBF,EACnBG,EAAa,CACX,MAAOP,EAAM,MACb,SAAUA,EAAM,SAChB,OAAQ,EACR,uBAAAE,CACF,CAAC,EACD,OAAOF,EAAM,KAAK,EAAE,eAAe,IAAI,GAG7C,IAAMQ,EAAoBC,EAAmB,WAC3C,OAAOT,EAAM,UAAU,CACzB,EAEMU,EACJV,EAAM,SAAWA,EAAM,WACnBA,EAAM,YAAcA,EAAM,OAC1BA,EAAM,OAEZ,MAAO,CACL,UAAAK,EACA,qBAAsBF,EAAuBG,EAAuB,KACpE,kBAAAE,EACA,cAAAE,EACA,MAAAV,EACA,QAAAC,EACA,uBAAAC,CACF,CACF",
  "names": ["getTransactionActionNftText", "token", "noValue", "showLastNonZeroDecimal", "isTokenAmountVisible", "canShowFormattedAmount", "badgeText", "tokenFormattedAmount", "formatAmount", "tokenExplorerLink", "explorerUrlBuilder", "tokenLinkText"]
}
