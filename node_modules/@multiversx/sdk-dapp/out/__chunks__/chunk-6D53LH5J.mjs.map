{
  "version": 3,
  "sources": ["../../src/utils/transactions/getTransactionsHistory/helpers/getAssetAmount.ts"],
  "sourcesContent": ["import BigNumber from 'bignumber.js';\nimport trimEnd from 'lodash.trimend';\nimport { formatAmount, DECIMALS, DIGITS, ZERO } from 'lib/sdkDappUtils';\n\nimport { trimAmountDecimals } from 'utils/operations/trimAmountDecimals';\nimport { isTransferNftOrSft } from './isTransferNftOrSft';\n\nexport const getAssetAmount = (transactionTransfer: Record<string, string>) => {\n  if (isTransferNftOrSft(transactionTransfer)) {\n    return parseFloat(transactionTransfer.value).toLocaleString();\n  }\n\n  const formattedAmount = formatAmount({\n    input: String(transactionTransfer.value ?? ZERO),\n    decimals: Number(transactionTransfer.decimals ?? DECIMALS),\n    showLastNonZeroDecimal: true,\n    addCommas: true\n  });\n\n  const trimmedAmount = trimAmountDecimals({\n    minimumPositiveDecimals: DIGITS,\n    amount: formattedAmount\n  });\n\n  const [price, decimals] = trimmedAmount.split('.');\n  const trimmedDecimals = trimEnd(decimals, ZERO);\n\n  if (decimals && new BigNumber(decimals).isGreaterThan(ZERO)) {\n    return `${price}.${trimmedDecimals}`;\n  }\n\n  return trimmedAmount;\n};\n"],
  "mappings": "gJAAA,OAAOA,MAAe,eACtB,OAAOC,MAAa,iBAMb,IAAMC,EAAkBC,GAAgD,CAC7E,GAAIC,EAAmBD,CAAmB,EACxC,OAAO,WAAWA,EAAoB,KAAK,EAAE,eAAe,EAG9D,IAAME,EAAkBC,EAAa,CACnC,MAAO,OAAOH,EAAoB,OAASI,CAAI,EAC/C,SAAU,OAAOJ,EAAoB,UAAYK,CAAQ,EACzD,uBAAwB,GACxB,UAAW,EACb,CAAC,EAEKC,EAAgBC,EAAmB,CACvC,wBAAyBC,EACzB,OAAQN,CACV,CAAC,EAEK,CAACO,EAAOC,CAAQ,EAAIJ,EAAc,MAAM,GAAG,EAC3CK,EAAkBC,EAAQF,EAAUN,CAAI,EAE9C,OAAIM,GAAY,IAAIG,EAAUH,CAAQ,EAAE,cAAcN,CAAI,EACjD,GAAGK,CAAK,IAAIE,CAAe,GAG7BL,CACT",
  "names": ["BigNumber", "trimEnd", "getAssetAmount", "transactionTransfer", "isTransferNftOrSft", "formattedAmount", "formatAmount", "ZERO", "DECIMALS", "trimmedAmount", "trimAmountDecimals", "DIGITS", "price", "decimals", "trimmedDecimals", "trimEnd", "BigNumber"]
}
