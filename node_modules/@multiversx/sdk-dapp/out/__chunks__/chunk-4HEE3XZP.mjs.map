{
  "version": 3,
  "sources": ["../../src/managers/internal/ToastManager/helpers/getToastDataStateByStatus.ts"],
  "sourcesContent": ["import { TransactionBatchStatusesEnum } from 'types';\nimport {\n  GetToastsOptionsDataPropsType,\n  IToastDataState,\n  TransactionsDefaultTitles\n} from '../types';\n\nexport enum ToastIconsEnum {\n  check = 'check',\n  hourglass = 'hourglass',\n  times = 'times',\n  ban = 'ban'\n}\n\nexport const getToastDataStateByStatus = ({\n  address,\n  sender,\n  status,\n  toastId,\n  transactionsDisplayInfo\n}: GetToastsOptionsDataPropsType) => {\n  const successToastData: IToastDataState = {\n    id: toastId,\n    icon: ToastIconsEnum.check,\n    hasCloseButton: true,\n    title:\n      transactionsDisplayInfo?.successMessage ??\n      TransactionsDefaultTitles.success,\n    iconClassName: 'success'\n  };\n\n  const receivedToastData: IToastDataState = {\n    id: toastId,\n    icon: ToastIconsEnum.check,\n    hasCloseButton: true,\n    title:\n      transactionsDisplayInfo?.receivedMessage ??\n      TransactionsDefaultTitles.received,\n    iconClassName: 'success'\n  };\n\n  const pendingToastData: IToastDataState = {\n    id: toastId,\n    icon: ToastIconsEnum.hourglass,\n    hasCloseButton: false,\n    title:\n      transactionsDisplayInfo?.processingMessage ??\n      TransactionsDefaultTitles.pending,\n    iconClassName: 'warning'\n  };\n\n  const failToastData: IToastDataState = {\n    id: toastId,\n    icon: ToastIconsEnum.times,\n    title:\n      transactionsDisplayInfo?.errorMessage ?? TransactionsDefaultTitles.failed,\n    hasCloseButton: true,\n    iconClassName: 'danger'\n  };\n\n  const invalidToastData: IToastDataState = {\n    id: toastId,\n    icon: ToastIconsEnum.ban,\n    title:\n      transactionsDisplayInfo?.invalidMessage ??\n      TransactionsDefaultTitles.invalid,\n    hasCloseButton: true,\n    iconClassName: 'warning'\n  };\n\n  const timedOutToastData = {\n    id: toastId,\n    icon: ToastIconsEnum.times,\n    title:\n      transactionsDisplayInfo?.timedOutMessage ??\n      TransactionsDefaultTitles.timedOut,\n    hasCloseButton: true,\n    iconClassName: 'warning'\n  };\n\n  switch (status) {\n    case TransactionBatchStatusesEnum.success:\n      return sender !== address ? receivedToastData : successToastData;\n    case TransactionBatchStatusesEnum.cancelled:\n    case TransactionBatchStatusesEnum.fail:\n      return failToastData;\n    case TransactionBatchStatusesEnum.timedOut:\n      return timedOutToastData;\n    case TransactionBatchStatusesEnum.invalid:\n      return invalidToastData;\n\n    case TransactionBatchStatusesEnum.signed:\n    case TransactionBatchStatusesEnum.sent:\n    default:\n      return pendingToastData;\n  }\n};\n"],
  "mappings": "AAOO,IAAKA,OACVA,EAAA,MAAQ,QACRA,EAAA,UAAY,YACZA,EAAA,MAAQ,QACRA,EAAA,IAAM,MAJIA,OAAA,IAOCC,EAA4B,CAAC,CACxC,QAAAC,EACA,OAAAC,EACA,OAAAC,EACA,QAAAC,EACA,wBAAAC,CACF,IAAqC,CACnC,IAAMC,EAAoC,CACxC,GAAIF,EACJ,KAAM,QACN,eAAgB,GAChB,MACEC,GAAyB,yCAE3B,cAAe,SACjB,EAEME,EAAqC,CACzC,GAAIH,EACJ,KAAM,QACN,eAAgB,GAChB,MACEC,GAAyB,wCAE3B,cAAe,SACjB,EAEMG,EAAoC,CACxC,GAAIJ,EACJ,KAAM,YACN,eAAgB,GAChB,MACEC,GAAyB,4CAE3B,cAAe,SACjB,EAEMI,EAAiC,CACrC,GAAIL,EACJ,KAAM,QACN,MACEC,GAAyB,mCAC3B,eAAgB,GAChB,cAAe,QACjB,EAEMK,EAAoC,CACxC,GAAIN,EACJ,KAAM,MACN,MACEC,GAAyB,sCAE3B,eAAgB,GAChB,cAAe,SACjB,EAEMM,EAAoB,CACxB,GAAIP,EACJ,KAAM,QACN,MACEC,GAAyB,yCAE3B,eAAgB,GAChB,cAAe,SACjB,EAEA,OAAQF,EAAQ,CACd,cACE,OAAOD,IAAWD,EAAUM,EAAoBD,EAClD,gBACA,WACE,OAAOG,EACT,eACE,OAAOE,EACT,cACE,OAAOD,EAET,aACA,WACA,QACE,OAAOF,CACX,CACF",
  "names": ["ToastIconsEnum", "getToastDataStateByStatus", "address", "sender", "status", "toastId", "transactionsDisplayInfo", "successToastData", "receivedToastData", "pendingToastData", "failToastData", "invalidToastData", "timedOutToastData"]
}
