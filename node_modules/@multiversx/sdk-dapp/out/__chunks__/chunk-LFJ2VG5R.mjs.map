{
  "version": 3,
  "sources": ["../../src/services/nativeAuth/methods/buildNativeAuthConfig.ts"],
  "sourcesContent": ["import { NativeAuthConfigType } from '../nativeAuth.types';\nimport { getDefaultNativeAuthConfig } from './getDefaultNativeAuthConfig';\n\nexport const buildNativeAuthConfig = (config?: NativeAuthConfigType) => {\n  const defaultNativeAuthConfig = getDefaultNativeAuthConfig();\n\n  return {\n    origin: config?.origin ?? defaultNativeAuthConfig.origin,\n    blockHashShard: config?.blockHashShard,\n    expirySeconds:\n      config?.expirySeconds ?? defaultNativeAuthConfig.expirySeconds,\n    apiAddress: config?.apiAddress ?? defaultNativeAuthConfig.apiAddress,\n    tokenExpirationToastWarningSeconds:\n      config?.tokenExpirationToastWarningSeconds ??\n      defaultNativeAuthConfig.tokenExpirationToastWarningSeconds,\n    extraInfo: config?.extraInfo ?? {},\n    gatewayUrl: config?.gatewayUrl,\n    extraRequestHeaders: config?.extraRequestHeaders ?? {}\n  };\n};\n"],
  "mappings": "oCAGO,IAAMA,EAAyBC,GAAkC,CACtE,IAAMC,EAA0BC,EAA2B,EAE3D,MAAO,CACL,OAAQF,GAAQ,QAAUC,EAAwB,OAClD,eAAgBD,GAAQ,eACxB,cACEA,GAAQ,eAAiBC,EAAwB,cACnD,WAAYD,GAAQ,YAAcC,EAAwB,WAC1D,mCACED,GAAQ,oCACRC,EAAwB,mCAC1B,UAAWD,GAAQ,WAAa,CAAC,EACjC,WAAYA,GAAQ,WACpB,oBAAqBA,GAAQ,qBAAuB,CAAC,CACvD,CACF",
  "names": ["buildNativeAuthConfig", "config", "defaultNativeAuthConfig", "getDefaultNativeAuthConfig"]
}
