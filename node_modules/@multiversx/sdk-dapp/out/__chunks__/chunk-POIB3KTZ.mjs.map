{
  "version": 3,
  "sources": ["../../src/managers/internal/PendingTransactionsStateManager/PendingTransactionsStateManager.ts"],
  "sourcesContent": ["import { UITagsEnum } from 'constants/UITags.enum';\nimport { MvxPendingTransactionsPanel } from 'lib/sdkDappUi';\nimport { IProviderBase } from 'providers/types/providerFactory.types';\nimport { SidePanelBaseManager } from '../SidePanelBaseManager/SidePanelBaseManager';\nimport { PendingTransactionsEventsEnum } from './types/pendingTransactions.types';\n\nexport class PendingTransactionsStateManager extends SidePanelBaseManager<\n  MvxPendingTransactionsPanel,\n  IProviderBase | null,\n  PendingTransactionsEventsEnum\n> {\n  private static instance: PendingTransactionsStateManager;\n\n  protected initialData: IProviderBase | null = null;\n\n  public static getInstance(): PendingTransactionsStateManager {\n    if (!PendingTransactionsStateManager.instance) {\n      PendingTransactionsStateManager.instance =\n        new PendingTransactionsStateManager();\n    }\n\n    return PendingTransactionsStateManager.instance;\n  }\n\n  constructor() {\n    super({\n      uiDataUpdateEvent: PendingTransactionsEventsEnum.DATA_UPDATE,\n      uiTag: UITagsEnum.PENDING_TRANSACTIONS_PANEL\n    });\n    this.data = this.initialData;\n  }\n\n  public isPendingTransactionsOpen(): boolean {\n    return this.isOpen;\n  }\n\n  protected async setupEventListeners() {\n    if (!this.eventBus) {\n      return;\n    }\n\n    this.subscribeToEventBus(\n      PendingTransactionsEventsEnum.CLOSE,\n      this.closeUI.bind(this)\n    );\n  }\n}\n"],
  "mappings": "yCAMO,IAAMA,EAAN,MAAMC,UAAwCC,CAInD,CAcA,aAAc,CACZ,MAAM,CACJ,qDACA,sCACF,CAAC,EAfH,KAAU,YAAoC,KAgB5C,KAAK,KAAO,KAAK,WACnB,CAfA,OAAc,aAA+C,CAC3D,OAAKD,EAAgC,WACnCA,EAAgC,SAC9B,IAAIA,GAGDA,EAAgC,QACzC,CAUO,2BAAqC,CAC1C,OAAO,KAAK,MACd,CAEA,MAAgB,qBAAsB,CAC/B,KAAK,UAIV,KAAK,iDAEH,KAAK,QAAQ,KAAK,IAAI,CACxB,CACF,CACF",
  "names": ["PendingTransactionsStateManager", "_PendingTransactionsStateManager", "SidePanelBaseManager"]
}
