{
  "version": 3,
  "sources": ["../../src/managers/TransactionManager/helpers/getAreTransactionsCorssShards.ts"],
  "sourcesContent": ["import { SignedTransactionType } from 'types/transactions.types';\nimport { getAddressFromDataField } from 'utils';\nimport { isCrossShardTransaction } from './isCrossShardTransaction';\n\nexport const getAreTransactionsCrossShards = (\n  transactions?: SignedTransactionType[],\n  accountShard = 1\n): boolean => {\n  if (!transactions?.length) {\n    return true;\n  }\n\n  return transactions.reduce(\n    (prevTxIsSameShard: boolean, { receiver, data }: SignedTransactionType) => {\n      const receiverAddress = getAddressFromDataField({\n        receiver,\n        data: data ?? ''\n      });\n      if (receiverAddress == null) {\n        return prevTxIsSameShard;\n      }\n      return (\n        prevTxIsSameShard &&\n        isCrossShardTransaction({\n          receiverAddress,\n          senderShard: accountShard\n        })\n      );\n    },\n    true\n  );\n};\n"],
  "mappings": "kFAIO,IAAMA,EAAgC,CAC3CC,EACAC,EAAe,IAEVD,GAAc,OAIZA,EAAa,OAClB,CAACE,EAA4B,CAAE,SAAAC,EAAU,KAAAC,CAAK,IAA6B,CACzE,IAAMC,EAAkBC,EAAwB,CAC9C,SAAAH,EACA,KAAMC,GAAQ,EAChB,CAAC,EACD,OAAIC,GAAmB,KACdH,EAGPA,GACAK,EAAwB,CACtB,gBAAAF,EACA,YAAaJ,CACf,CAAC,CAEL,EACA,EACF,EArBS",
  "names": ["getAreTransactionsCrossShards", "transactions", "accountShard", "prevTxIsSameShard", "receiver", "data", "receiverAddress", "getAddressFromDataField", "isCrossShardTransaction"]
}
