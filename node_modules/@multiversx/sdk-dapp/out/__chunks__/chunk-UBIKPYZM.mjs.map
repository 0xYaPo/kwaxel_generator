{
  "version": 3,
  "sources": ["../../src/utils/account/refreshNativeAuthTokenLogin.ts"],
  "sourcesContent": ["import { Address, Message } from 'lib/sdkCore';\nimport { getAccount } from 'methods/account/getAccount';\nimport { nativeAuth } from 'services/nativeAuth';\nimport { getDefaultNativeAuthConfig } from 'services/nativeAuth/methods/getDefaultNativeAuthConfig';\nimport { NativeAuthConfigType } from 'services/nativeAuth/nativeAuth.types';\nimport { setTokenLogin } from 'store/actions/loginInfo/loginInfoActions';\n\n/**\n * Use this function if you support multiple networks with network switching\n * @returns The native auth token\n */\nexport const refreshNativeAuthTokenLogin = async ({\n  signMessageCallback,\n  nativeAuthClientConfig\n}: {\n  signMessageCallback: (\n    messageToSign: Message,\n    options: Record<any, any>\n  ) => Promise<Message>;\n  nativeAuthClientConfig?: NativeAuthConfigType;\n}): Promise<string | null> => {\n  const { address } = getAccount();\n  const defaultNativeAuthConfig = getDefaultNativeAuthConfig();\n\n  const nativeAuthClient = nativeAuth(\n    nativeAuthClientConfig || defaultNativeAuthConfig\n  );\n\n  const loginToken = await nativeAuthClient.initialize({\n    noCache: Boolean(nativeAuthClientConfig)\n  });\n\n  if (!loginToken) {\n    return null;\n  }\n\n  const messageToSign = new Message({\n    address: new Address(address),\n    data: Buffer.from(`${address}${loginToken}`)\n  });\n\n  const signedMessage = await signMessageCallback(messageToSign, {});\n\n  if (!signedMessage?.signature) {\n    throw 'Message not signed';\n  }\n\n  setTokenLogin({\n    loginToken,\n    signature: Buffer.from(signedMessage.signature).toString('hex')\n  });\n\n  return nativeAuthClient.getToken({\n    address,\n    token: loginToken,\n    signature: Buffer.from(signedMessage.signature).toString('hex')\n  });\n};\n"],
  "mappings": "oNAWO,IAAMA,EAA8B,MAAO,CAChD,oBAAAC,EACA,uBAAAC,CACF,IAM8B,CAC5B,GAAM,CAAE,QAAAC,CAAQ,EAAIC,EAAW,EACzBC,EAA0BC,EAA2B,EAErDC,EAAmBC,EACvBN,GAA0BG,CAC5B,EAEMI,EAAa,MAAMF,EAAiB,WAAW,CACnD,QAAS,EAAQL,CACnB,CAAC,EAED,GAAI,CAACO,EACH,OAAO,KAGT,IAAMC,EAAgB,IAAIC,EAAQ,CAChC,QAAS,IAAIC,EAAQT,CAAO,EAC5B,KAAM,OAAO,KAAK,GAAGA,CAAO,GAAGM,CAAU,EAAE,CAC7C,CAAC,EAEKI,EAAgB,MAAMZ,EAAoBS,EAAe,CAAC,CAAC,EAEjE,GAAI,CAACG,GAAe,UAClB,KAAM,qBAGR,OAAAC,EAAc,CACZ,WAAAL,EACA,UAAW,OAAO,KAAKI,EAAc,SAAS,EAAE,SAAS,KAAK,CAChE,CAAC,EAEMN,EAAiB,SAAS,CAC/B,QAAAJ,EACA,MAAOM,EACP,UAAW,OAAO,KAAKI,EAAc,SAAS,EAAE,SAAS,KAAK,CAChE,CAAC,CACH",
  "names": ["refreshNativeAuthTokenLogin", "signMessageCallback", "nativeAuthClientConfig", "address", "getAccount", "defaultNativeAuthConfig", "getDefaultNativeAuthConfig", "nativeAuthClient", "nativeAuth", "loginToken", "messageToSign", "Message", "Address", "signedMessage", "setTokenLogin"]
}
