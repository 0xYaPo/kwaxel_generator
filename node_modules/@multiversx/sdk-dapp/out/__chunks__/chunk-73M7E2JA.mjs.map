{
  "version": 3,
  "sources": ["../../src/providers/strategies/helpers/getPendingTransactionsHandlers.ts"],
  "sourcesContent": ["import { PendingTransactionsStateManager } from 'managers/internal/PendingTransactionsStateManager/PendingTransactionsStateManager';\n\nexport async function getPendingTransactionsHandlers<T>(props?: {\n  cancelAction?: () => Promise<T> | undefined;\n}) {\n  const pendingTransactionsStateManager =\n    PendingTransactionsStateManager.getInstance();\n  await pendingTransactionsStateManager.openUI();\n\n  const onClose = async ({\n    shouldCancelAction = true\n  }: { shouldCancelAction?: boolean } = {}) => {\n    pendingTransactionsStateManager.closeUI();\n\n    if (shouldCancelAction && props?.cancelAction) {\n      await props.cancelAction();\n    }\n  };\n\n  return { manager: pendingTransactionsStateManager, onClose };\n}\n"],
  "mappings": "yCAEA,eAAsBA,EAAkCC,EAErD,CACD,IAAMC,EACJC,EAAgC,YAAY,EAC9C,aAAMD,EAAgC,OAAO,EAYtC,CAAE,QAASA,EAAiC,QAVnC,MAAO,CACrB,mBAAAE,EAAqB,EACvB,EAAsC,CAAC,IAAM,CAC3CF,EAAgC,QAAQ,EAEpCE,GAAsBH,GAAO,cAC/B,MAAMA,EAAM,aAAa,CAE7B,CAE2D,CAC7D",
  "names": ["getPendingTransactionsHandlers", "props", "pendingTransactionsStateManager", "PendingTransactionsStateManager", "shouldCancelAction"]
}
