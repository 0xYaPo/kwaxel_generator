{
  "version": 3,
  "sources": ["../../src/methods/initApp/gastStationMetadata/setGasStationMetadata.ts"],
  "sourcesContent": ["import { getGasStationMetadataFromApi } from 'apiCalls/configuration/getGasStationMetadata';\nimport { initializeNetworkConfig } from 'store/actions/network/networkActions';\nimport { networkSelector } from 'store/selectors/networkSelectors';\nimport { getState } from 'store/store';\n\ninterface ISetGasStationMetadataParams {\n  shard: number;\n  apiAddress: string;\n}\n\nexport async function setGasStationMetadata({\n  shard,\n  apiAddress\n}: ISetGasStationMetadataParams) {\n  if (shard == null) {\n    return;\n  }\n\n  try {\n    const fetchedGasMetadata = await getGasStationMetadataFromApi(\n      shard,\n      apiAddress\n    );\n\n    if (!fetchedGasMetadata?.[shard]?.lastBlock) {\n      return;\n    }\n\n    const network = networkSelector(getState());\n\n    const hasDifferentGasStationMetadata =\n      !network.gasStationMetadata ||\n      !network.gasStationMetadata[shard] ||\n      network.gasStationMetadata[shard].lastBlock !==\n        fetchedGasMetadata[shard].lastBlock;\n\n    if (hasDifferentGasStationMetadata) {\n      initializeNetworkConfig({\n        ...network,\n        gasStationMetadata: {\n          ...network.gasStationMetadata,\n          ...fetchedGasMetadata\n        }\n      });\n    }\n  } catch (err) {\n    console.error('Error fetching gas station metadata:', err);\n  }\n}\n"],
  "mappings": "oKAUA,eAAsBA,EAAsB,CAC1C,MAAAC,EACA,WAAAC,CACF,EAAiC,CAC/B,GAAID,GAAS,KAIb,GAAI,CACF,IAAME,EAAqB,MAAMC,EAC/BH,EACAC,CACF,EAEA,GAAI,CAACC,IAAqBF,CAAK,GAAG,UAChC,OAGF,IAAMI,EAAUC,EAAgBC,EAAS,CAAC,GAGxC,CAACF,EAAQ,oBACT,CAACA,EAAQ,mBAAmBJ,CAAK,GACjCI,EAAQ,mBAAmBJ,CAAK,EAAE,YAChCE,EAAmBF,CAAK,EAAE,YAG5BO,EAAwB,CACtB,GAAGH,EACH,mBAAoB,CAClB,GAAGA,EAAQ,mBACX,GAAGF,CACL,CACF,CAAC,CAEL,OAASM,EAAK,CACZ,QAAQ,MAAM,uCAAwCA,CAAG,CAC3D,CACF",
  "names": ["setGasStationMetadata", "shard", "apiAddress", "fetchedGasMetadata", "getGasStationMetadataFromApi", "network", "networkSelector", "getState", "initializeNetworkConfig", "err"]
}
