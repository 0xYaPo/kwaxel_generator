{
  "version": 3,
  "sources": ["../../src/providers/DappProvider/helpers/login/helpers/getModifiedLoginToken.ts"],
  "sourcesContent": ["import { decodeLoginToken } from 'services/nativeAuth/helpers/decodeLoginToken';\nimport { LatestBlockHashType } from 'services/nativeAuth/helpers/getLatestBlockHash';\nimport { nativeAuth } from 'services/nativeAuth/nativeAuth';\n\nexport interface GetMultiSigLoginTokenType {\n  loginToken?: string;\n  extraInfoData: {\n    multisig?: string;\n    impersonate?: string;\n  };\n}\n\nexport async function getModifiedLoginToken({\n  loginToken,\n  extraInfoData\n}: GetMultiSigLoginTokenType) {\n  if (loginToken == null || Object.keys(extraInfoData).length === 0) {\n    return null;\n  }\n\n  const data = decodeLoginToken(String(loginToken));\n  const { timestamp, ...rest } = data?.extraInfo || {};\n\n  const isValidData = data && timestamp != null;\n\n  if (!isValidData) {\n    return null;\n  }\n  const latestBlockInfo: LatestBlockHashType = {\n    hash: String(data?.blockHash),\n    timestamp: Number(timestamp)\n  };\n\n  const tokenLogin = await nativeAuth({\n    extraInfo: { ...rest, ...extraInfoData },\n    expirySeconds: data?.ttl,\n    origin: data?.origin\n  }).initialize({\n    latestBlockInfo\n  });\n\n  return tokenLogin;\n}\n"],
  "mappings": "kFAYA,eAAsBA,EAAsB,CAC1C,WAAAC,EACA,cAAAC,CACF,EAA8B,CAC5B,GAAID,GAAc,MAAQ,OAAO,KAAKC,CAAa,EAAE,SAAW,EAC9D,OAAO,KAGT,IAAMC,EAAOC,EAAiB,OAAOH,CAAU,CAAC,EAC1C,CAAE,UAAAI,EAAW,GAAGC,CAAK,EAAIH,GAAM,WAAa,CAAC,EAInD,GAAI,EAFgBA,GAAQE,GAAa,MAGvC,OAAO,KAET,IAAME,EAAuC,CAC3C,KAAM,OAAOJ,GAAM,SAAS,EAC5B,UAAW,OAAOE,CAAS,CAC7B,EAUA,OARmB,MAAMG,EAAW,CAClC,UAAW,CAAE,GAAGF,EAAM,GAAGJ,CAAc,EACvC,cAAeC,GAAM,IACrB,OAAQA,GAAM,MAChB,CAAC,EAAE,WAAW,CACZ,gBAAAI,CACF,CAAC,CAGH",
  "names": ["getModifiedLoginToken", "loginToken", "extraInfoData", "data", "decodeLoginToken", "timestamp", "rest", "latestBlockInfo", "nativeAuth"]
}
