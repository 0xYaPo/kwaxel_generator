{
  "version": 3,
  "sources": ["../../src/providers/strategies/helpers/signTransactions/helpers/getCommonData/helpers/getPpuOptions.ts"],
  "sourcesContent": ["import BigNumber from 'bignumber.js';\nimport { EMPTY_PPU } from 'constants/placeholders.constants';\nimport { IPlainTransactionObject } from 'lib/sdkCore';\nimport { NetworkType } from 'types/network.types';\nimport { getRecommendedGasPrice } from './getRecommendedGasPrice';\n\ntype GetGasPriceDetailsParamsType = {\n  shard?: number;\n  gasStationMetadata: NetworkType['gasStationMetadata'];\n  transaction: IPlainTransactionObject;\n  initialGasPrice?: number;\n};\n\nexport const getPpuOptions = ({\n  shard,\n  gasStationMetadata,\n  transaction,\n  initialGasPrice = 0\n}: GetGasPriceDetailsParamsType) => {\n  const fastPpu = gasStationMetadata\n    ? gasStationMetadata[Number(shard)]?.fast\n    : EMPTY_PPU;\n\n  const fasterPpu = gasStationMetadata\n    ? gasStationMetadata[Number(shard)]?.faster\n    : EMPTY_PPU;\n\n  const fastGasPrice = getRecommendedGasPrice({\n    transaction,\n    gasPriceData: {\n      initialGasPrice,\n      ppu: fastPpu\n    }\n  });\n\n  const fasterGasPrice = getRecommendedGasPrice({\n    transaction,\n    gasPriceData: {\n      initialGasPrice,\n      ppu: fasterPpu\n    }\n  });\n\n  const isFastGasPrice = new BigNumber(fastGasPrice).isGreaterThan(\n    initialGasPrice || 0\n  );\n\n  const isFasterGasPrice = new BigNumber(fasterGasPrice).isGreaterThan(\n    initialGasPrice || 0\n  );\n  const isEditingGasPriceEnabled = isFastGasPrice || isFasterGasPrice;\n\n  if (!isEditingGasPriceEnabled) {\n    return [];\n  }\n\n  const ppuOptions = [\n    {\n      label: 'Standard',\n      value: EMPTY_PPU\n    }\n  ];\n\n  if (isFastGasPrice) {\n    ppuOptions.push({\n      label: 'Fast',\n      value: fastPpu\n    });\n  }\n\n  if (isFasterGasPrice) {\n    ppuOptions.push({\n      label: 'Faster',\n      value: fasterPpu\n    });\n  }\n\n  return ppuOptions;\n};\n"],
  "mappings": "6EAAA,OAAOA,MAAe,eAaf,IAAMC,EAAgB,CAAC,CAC5B,MAAAC,EACA,mBAAAC,EACA,YAAAC,EACA,gBAAAC,EAAkB,CACpB,IAAoC,CAClC,IAAMC,EAAUH,EACZA,EAAmB,OAAOD,CAAK,CAAC,GAAG,KACnC,EAEEK,EAAYJ,EACdA,EAAmB,OAAOD,CAAK,CAAC,GAAG,OACnC,EAEEM,EAAeC,EAAuB,CAC1C,YAAAL,EACA,aAAc,CACZ,gBAAAC,EACA,IAAKC,CACP,CACF,CAAC,EAEKI,EAAiBD,EAAuB,CAC5C,YAAAL,EACA,aAAc,CACZ,gBAAAC,EACA,IAAKE,CACP,CACF,CAAC,EAEKI,EAAiB,IAAIC,EAAUJ,CAAY,EAAE,cACjDH,GAAmB,CACrB,EAEMQ,EAAmB,IAAID,EAAUF,CAAc,EAAE,cACrDL,GAAmB,CACrB,EAGA,GAAI,EAF6BM,GAAkBE,GAGjD,MAAO,CAAC,EAGV,IAAMC,EAAa,CACjB,CACE,MAAO,WACP,MAAO,CACT,CACF,EAEA,OAAIH,GACFG,EAAW,KAAK,CACd,MAAO,OACP,MAAOR,CACT,CAAC,EAGCO,GACFC,EAAW,KAAK,CACd,MAAO,SACP,MAAOP,CACT,CAAC,EAGIO,CACT",
  "names": ["BigNumber", "getPpuOptions", "shard", "gasStationMetadata", "transaction", "initialGasPrice", "fastPpu", "fasterPpu", "fastGasPrice", "getRecommendedGasPrice", "fasterGasPrice", "isFastGasPrice", "BigNumber", "isFasterGasPrice", "ppuOptions"]
}
