{
  "version": 3,
  "sources": ["../../src/utils/operations/trimAmountDecimals.ts"],
  "sourcesContent": ["import BigNumber from 'bignumber.js';\n\nimport { ZERO } from 'lib/sdkDappUtils';\n\ninterface TrimPriceAmountType {\n  amount: string;\n  minimumPositiveDecimals: number;\n}\n\nexport const trimAmountDecimals = ({\n  amount,\n  minimumPositiveDecimals\n}: TrimPriceAmountType): string => {\n  const [mainPrice, decimalPrice] = amount.split('.');\n\n  const decimalPriceArray = decimalPrice ? decimalPrice.split('') : [];\n  const trimmedDecimals = decimalPriceArray.reduce((total, decimal, index) => {\n    const decimalAboveZero = new BigNumber(total).isGreaterThan(ZERO);\n    const minimumDecimalsReached = index > minimumPositiveDecimals - 1;\n\n    const shouldReturnTotal =\n      decimalAboveZero && minimumDecimalsReached && minimumPositiveDecimals > 0;\n\n    if (shouldReturnTotal) {\n      return total;\n    }\n\n    return total.concat(decimal);\n  }, '');\n\n  if (!trimmedDecimals) {\n    return mainPrice;\n  }\n\n  return `${mainPrice}.${trimmedDecimals}`;\n};\n"],
  "mappings": "yCAAA,OAAOA,MAAe,eASf,IAAMC,EAAqB,CAAC,CACjC,OAAAC,EACA,wBAAAC,CACF,IAAmC,CACjC,GAAM,CAACC,EAAWC,CAAY,EAAIH,EAAO,MAAM,GAAG,EAG5CI,GADoBD,EAAeA,EAAa,MAAM,EAAE,EAAI,CAAC,GACzB,OAAO,CAACE,EAAOC,EAASC,IAAU,CAC1E,IAAMC,EAAmB,IAAIC,EAAUJ,CAAK,EAAE,cAAcK,CAAI,EAC1DC,EAAyBJ,EAAQN,EAA0B,EAKjE,OAFEO,GAAoBG,GAA0BV,EAA0B,EAGjEI,EAGFA,EAAM,OAAOC,CAAO,CAC7B,EAAG,EAAE,EAEL,OAAKF,EAIE,GAAGF,CAAS,IAAIE,CAAe,GAH7BF,CAIX",
  "names": ["BigNumber", "trimAmountDecimals", "amount", "minimumPositiveDecimals", "mainPrice", "decimalPrice", "trimmedDecimals", "total", "decimal", "index", "decimalAboveZero", "BigNumber", "ZERO", "minimumDecimalsReached"]
}
