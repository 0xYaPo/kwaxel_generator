{
  "version": 3,
  "sources": ["../../src/utils/transactions/getTransactionsHistory/helpers/getTransactionAssets.ts"],
  "sourcesContent": ["import { DECIMALS } from 'lib/sdkDappUtils';\nimport { ServerTransactionType } from 'types/serverTransactions.types';\n\nimport { getAssetAmount } from './getAssetAmount';\nimport { getAssetPrice } from './getAssetPrice';\n\ninterface IGetTransactionAssetsParams {\n  transaction: ServerTransactionType;\n  userIsReceiver: boolean;\n  egldLabel?: string;\n}\n\nexport interface ITransactionAsset {\n  assetPrefix: string;\n  assetTicker: string;\n  assetAmount: string;\n  assetImage?: string;\n  assetPrice?: string;\n  type: string;\n}\n\nexport const getTransactionAssets = ({\n  transaction,\n  userIsReceiver,\n  egldLabel\n}: IGetTransactionAssetsParams): ITransactionAsset[] => {\n  const transactionAction = transaction.action;\n  const transactionArguments = transactionAction && transactionAction.arguments;\n\n  const transactionTransfers: Record<string, string>[] =\n    transactionArguments && Array.isArray(transactionArguments.transfers)\n      ? transactionArguments.transfers\n      : [];\n\n  const isEgldTransfer = transactionTransfers.length === 0;\n  const processedEgldLabel = egldLabel ?? 'EGLD';\n  const assetPrefix = userIsReceiver ? '+' : '-';\n\n  const egldTransferAsset: ITransactionAsset = {\n    assetPrefix,\n    type: processedEgldLabel,\n    assetTicker: processedEgldLabel,\n    assetAmount: getAssetAmount({\n      value: transaction.value,\n      decimals: String(DECIMALS)\n    })\n  };\n\n  const transfersAssets = transactionTransfers.map(\n    (transactionTransfer): ITransactionAsset => ({\n      assetPrefix,\n      type: transactionTransfer.type,\n      assetTicker: transactionTransfer.ticker,\n      assetImage: transactionTransfer.svgUrl,\n      assetAmount: getAssetAmount(transactionTransfer),\n      assetPrice: getAssetPrice(transactionTransfer)\n    })\n  );\n\n  if (isEgldTransfer) {\n    return [egldTransferAsset];\n  }\n\n  return transfersAssets;\n};\n"],
  "mappings": "sHAqBO,IAAMA,EAAuB,CAAC,CACnC,YAAAC,EACA,eAAAC,EACA,UAAAC,CACF,IAAwD,CACtD,IAAMC,EAAoBH,EAAY,OAChCI,EAAuBD,GAAqBA,EAAkB,UAE9DE,EACJD,GAAwB,MAAM,QAAQA,EAAqB,SAAS,EAChEA,EAAqB,UACrB,CAAC,EAEDE,EAAiBD,EAAqB,SAAW,EACjDE,EAAqBL,GAAa,OAClCM,EAAcP,EAAiB,IAAM,IAErCQ,EAAuC,CAC3C,YAAAD,EACA,KAAMD,EACN,YAAaA,EACb,YAAaG,EAAe,CAC1B,MAAOV,EAAY,MACnB,SAAU,OAAOW,CAAQ,CAC3B,CAAC,CACH,EAEMC,EAAkBP,EAAqB,IAC1CQ,IAA4C,CAC3C,YAAAL,EACA,KAAMK,EAAoB,KAC1B,YAAaA,EAAoB,OACjC,WAAYA,EAAoB,OAChC,YAAaH,EAAeG,CAAmB,EAC/C,WAAYC,EAAcD,CAAmB,CAC/C,EACF,EAEA,OAAIP,EACK,CAACG,CAAiB,EAGpBG,CACT",
  "names": ["getTransactionAssets", "transaction", "userIsReceiver", "egldLabel", "transactionAction", "transactionArguments", "transactionTransfers", "isEgldTransfer", "processedEgldLabel", "assetPrefix", "egldTransferAsset", "getAssetAmount", "DECIMALS", "transfersAssets", "transactionTransfer", "getAssetPrice"]
}
