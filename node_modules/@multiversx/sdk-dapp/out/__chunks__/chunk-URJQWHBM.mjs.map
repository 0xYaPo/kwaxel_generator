{
  "version": 3,
  "sources": ["../../src/providers/strategies/helpers/signTransactions/helpers/getFeeData.ts"],
  "sourcesContent": ["import { GAS_PER_DATA_BYTE, GAS_PRICE_MODIFIER } from 'constants/mvx.constants';\nimport { Transaction } from 'lib/sdkCore';\nimport { formatAmount } from 'lib/sdkDappUtils';\nimport { calculateFeeInFiat } from './calculateFeeInFiat';\nimport { calculateFeeLimit } from './calculateFeeLimit';\n\nexport const getFeeData = ({\n  transaction,\n  price\n}: {\n  transaction: Transaction;\n  price?: number;\n}) => {\n  const feeLimit = calculateFeeLimit({\n    from: transaction.sender.toBech32(),\n    to: transaction.receiver.toBech32(),\n    gasPerDataByte: String(GAS_PER_DATA_BYTE),\n    gasPriceModifier: String(GAS_PRICE_MODIFIER),\n    gasLimit: transaction.gasLimit.valueOf().toString(),\n    gasPrice: transaction.gasPrice.valueOf().toString(),\n    data: transaction.data.toString(),\n    chainId: transaction.chainID.valueOf().toString()\n  });\n\n  const feeLimitFormatted = formatAmount({\n    input: feeLimit,\n    showLastNonZeroDecimal: true\n  });\n\n  const feeInFiatLimit = price\n    ? calculateFeeInFiat({\n        feeLimit,\n        egldPriceInUsd: price,\n        hideEqualSign: true\n      })\n    : null;\n\n  return { feeLimitFormatted, feeInFiatLimit, feeLimit };\n};\n"],
  "mappings": "2KAMO,IAAMA,EAAa,CAAC,CACzB,YAAAC,EACA,MAAAC,CACF,IAGM,CACJ,IAAMC,EAAWC,EAAkB,CACjC,KAAMH,EAAY,OAAO,SAAS,EAClC,GAAIA,EAAY,SAAS,SAAS,EAClC,eAAgB,OAAO,IAAiB,EACxC,iBAAkB,OAAO,GAAkB,EAC3C,SAAUA,EAAY,SAAS,QAAQ,EAAE,SAAS,EAClD,SAAUA,EAAY,SAAS,QAAQ,EAAE,SAAS,EAClD,KAAMA,EAAY,KAAK,SAAS,EAChC,QAASA,EAAY,QAAQ,QAAQ,EAAE,SAAS,CAClD,CAAC,EAEKI,EAAoBC,EAAa,CACrC,MAAOH,EACP,uBAAwB,EAC1B,CAAC,EAEKI,EAAiBL,EACnBM,EAAmB,CACjB,SAAAL,EACA,eAAgBD,EAChB,cAAe,EACjB,CAAC,EACD,KAEJ,MAAO,CAAE,kBAAAG,EAAmB,eAAAE,EAAgB,SAAAJ,CAAS,CACvD",
  "names": ["getFeeData", "transaction", "price", "feeLimit", "calculateFeeLimit", "feeLimitFormatted", "formatAmount", "feeInFiatLimit", "calculateFeeInFiat"]
}
