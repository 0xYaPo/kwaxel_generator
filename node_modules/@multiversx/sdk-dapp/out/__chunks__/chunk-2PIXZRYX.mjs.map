{
  "version": 3,
  "sources": ["../../src/providers/DappProvider/helpers/signMessage/signMessageWithProvider.ts"],
  "sourcesContent": ["import { Message, Address } from 'lib/sdkCore';\nimport { getAddress } from 'methods/account/getAddress';\nimport { IProvider } from 'providers/types/providerFactory.types';\n\nexport type SignMessageType = {\n  provider: IProvider;\n  message: Message;\n  options?: {\n    hasConsentPopup?: boolean;\n  };\n};\n\nexport async function signMessageWithProvider({\n  message,\n  provider,\n  options\n}: SignMessageType): Promise<Message | null> {\n  const address = getAddress();\n\n  const messageToSign = new Message({\n    address: new Address(address),\n    data: message.data\n  });\n\n  const signedMessage = await provider.signMessage(messageToSign, options);\n\n  return signedMessage;\n}\n"],
  "mappings": "yFAYA,eAAsBA,EAAwB,CAC5C,QAAAC,EACA,SAAAC,EACA,QAAAC,CACF,EAA6C,CAC3C,IAAMC,EAAUC,EAAW,EAErBC,EAAgB,IAAIC,EAAQ,CAChC,QAAS,IAAIC,EAAQJ,CAAO,EAC5B,KAAMH,EAAQ,IAChB,CAAC,EAID,OAFsB,MAAMC,EAAS,YAAYI,EAAeH,CAAO,CAGzE",
  "names": ["signMessageWithProvider", "message", "provider", "options", "address", "getAddress", "messageToSign", "Message", "Address"]
}
