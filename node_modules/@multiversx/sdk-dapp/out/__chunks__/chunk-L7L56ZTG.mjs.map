{
  "version": 3,
  "sources": ["../../src/utils/operations/timeRemaining.ts"],
  "sourcesContent": ["export function getRemainingTime(ms: number) {\n  const days = Math.floor(ms / (24 * 60 * 60 * 1000));\n  const daysms = ms % (24 * 60 * 60 * 1000);\n  const hrs = Math.floor(daysms / (60 * 60 * 1000));\n  const hrsms = daysms % (60 * 60 * 1000);\n  const mins = Math.floor(hrsms / (60 * 1000));\n  const minsms = hrsms % (60 * 1000);\n  const secs = Math.floor(minsms / 1000);\n\n  let secsString = secs + ' sec';\n  let minsString = mins + ' min';\n  let hrsString = hrs + ' hr';\n  let daysString = days + ' day';\n\n  if (secs > 1) {\n    secsString = secs + ' sec';\n  }\n  if (mins > 1) {\n    minsString = mins + ' min';\n  }\n  if (hrs > 1) {\n    hrsString = hrs + ' hrs';\n  }\n  if (days > 1) {\n    daysString = days + ' days';\n  }\n\n  if (days >= 1) {\n    return daysString + ' ' + hrsString;\n  }\n  if (hrs >= 1) {\n    const minutesString = mins === 0 ? '' : ' ' + minsString;\n    return hrsString + minutesString;\n  }\n  if (mins >= 1) {\n    const secString = secs === 0 ? '' : ' ' + secsString;\n    return minsString + secString;\n  }\n\n  return secsString;\n}\n\nfunction getShortDateTimeFormat(datetime: string) {\n  const parts = datetime.split(' ');\n  if (parts.length > 1) {\n    return `${parts[0]} ${parts[1]}`;\n  }\n  return datetime;\n}\n\nconst getUTCDateNow = (date = new Date(), extendedSeconds = 0) =>\n  Date.UTC(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds() + extendedSeconds,\n    date.getUTCMilliseconds()\n  );\n\nfunction getUTCdiffInMs(duration: number) {\n  const date = new Date();\n  const startDate = getUTCDateNow(date);\n  const endDate = getUTCDateNow(date, duration);\n  const diffInMs = Math.max(endDate - startDate, 0);\n  return diffInMs;\n}\n\nexport function timeRemaining(duration: number, short = true) {\n  const diffInMs = getUTCdiffInMs(duration);\n  const remaining = getRemainingTime(diffInMs);\n  return short ? getShortDateTimeFormat(remaining) : remaining;\n}\n\nexport function getDifferenceInMs(timestamp: number) {\n  const dateNow = new Date().getTime();\n  const difference = dateNow - timestamp;\n  const diffInMs = Math.max(difference, 0);\n\n  return diffInMs;\n}\n\nexport function timeAgo(timestamp: number, short = true) {\n  const diffInMs = getDifferenceInMs(timestamp);\n  const remaining = getRemainingTime(diffInMs);\n\n  return short ? getShortDateTimeFormat(remaining) : remaining;\n}\n"],
  "mappings": "AAAO,SAASA,EAAiBC,EAAY,CAC3C,IAAMC,EAAO,KAAK,MAAMD,EAAM,KAAoB,EAC5CE,EAASF,GAAM,GAAK,GAAK,GAAK,KAC9BG,EAAM,KAAK,MAAMD,GAAU,GAAK,GAAK,IAAK,EAC1CE,EAAQF,GAAU,GAAK,GAAK,KAC5BG,EAAO,KAAK,MAAMD,GAAS,GAAK,IAAK,EACrCE,EAASF,GAAS,GAAK,KACvBG,EAAO,KAAK,MAAMD,EAAS,GAAI,EAEjCE,EAAaD,EAAO,OACpBE,EAAaJ,EAAO,OACpBK,EAAYP,EAAM,MAClBQ,EAAaV,EAAO,OAexB,GAbIM,EAAO,IACTC,EAAaD,EAAO,QAElBF,EAAO,IACTI,EAAaJ,EAAO,QAElBF,EAAM,IACRO,EAAYP,EAAM,QAEhBF,EAAO,IACTU,EAAaV,EAAO,SAGlBA,GAAQ,EACV,OAAOU,EAAa,IAAMD,EAE5B,GAAIP,GAAO,EAAG,CACZ,IAAMS,EAAgBP,IAAS,EAAI,GAAK,IAAMI,EAC9C,OAAOC,EAAYE,CACrB,CACA,GAAIP,GAAQ,EAAG,CACb,IAAMQ,EAAYN,IAAS,EAAI,GAAK,IAAMC,EAC1C,OAAOC,EAAaI,CACtB,CAEA,OAAOL,CACT,CAEA,SAASM,EAAuBC,EAAkB,CAChD,IAAMC,EAAQD,EAAS,MAAM,GAAG,EAChC,OAAIC,EAAM,OAAS,EACV,GAAGA,EAAM,CAAC,CAAC,IAAIA,EAAM,CAAC,CAAC,GAEzBD,CACT,CAEA,IAAME,EAAgB,CAACC,EAAO,IAAI,KAAQC,EAAkB,IAC1D,KAAK,IACHD,EAAK,eAAe,EACpBA,EAAK,YAAY,EACjBA,EAAK,WAAW,EAChBA,EAAK,YAAY,EACjBA,EAAK,cAAc,EACnBA,EAAK,cAAc,EAAIC,EACvBD,EAAK,mBAAmB,CAC1B,EAEF,SAASE,EAAeC,EAAkB,CACxC,IAAMH,EAAO,IAAI,KACXI,EAAYL,EAAcC,CAAI,EAC9BK,EAAUN,EAAcC,EAAMG,CAAQ,EAE5C,OADiB,KAAK,IAAIE,EAAUD,EAAW,CAAC,CAElD,CAEO,SAASE,EAAcH,EAAkBI,EAAQ,GAAM,CAC5D,IAAMC,EAAWN,EAAeC,CAAQ,EAClCM,EAAY5B,EAAiB2B,CAAQ,EAC3C,OAAOD,EAAQX,EAAuBa,CAAS,EAAIA,CACrD,CAEO,SAASC,EAAkBC,EAAmB,CAEnD,IAAMC,EADU,IAAI,KAAK,EAAE,QAAQ,EACND,EAG7B,OAFiB,KAAK,IAAIC,EAAY,CAAC,CAGzC,CAEO,SAASC,EAAQF,EAAmBJ,EAAQ,GAAM,CACvD,IAAMC,EAAWE,EAAkBC,CAAS,EACtCF,EAAY5B,EAAiB2B,CAAQ,EAE3C,OAAOD,EAAQX,EAAuBa,CAAS,EAAIA,CACrD",
  "names": ["getRemainingTime", "ms", "days", "daysms", "hrs", "hrsms", "mins", "minsms", "secs", "secsString", "minsString", "hrsString", "daysString", "minutesString", "secString", "getShortDateTimeFormat", "datetime", "parts", "getUTCDateNow", "date", "extendedSeconds", "getUTCdiffInMs", "duration", "startDate", "endDate", "timeRemaining", "short", "diffInMs", "remaining", "getDifferenceInMs", "timestamp", "difference", "timeAgo"]
}
