{
  "version": 3,
  "sources": ["../../src/apiCalls/transactions/getServerTransactionsByHashes.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport { TRANSACTIONS_ENDPOINT } from 'apiCalls/endpoints';\nimport { networkSelector } from 'store/selectors/networkSelectors';\nimport { getState } from 'store/store';\nimport { ServerTransactionType } from 'types/serverTransactions.types';\n\nexport const getServerTransactionsByHashes = async (\n  hashes: string[]\n): Promise<ServerTransactionType[]> => {\n  const { apiAddress } = networkSelector(getState());\n  const { data } = await axios.get<ServerTransactionType[]>(\n    `${apiAddress}/${TRANSACTIONS_ENDPOINT}`,\n    {\n      params: {\n        hashes: hashes.join(','),\n        withScResults: true\n      }\n    }\n  );\n\n  return data;\n};\n"],
  "mappings": "2HAAA,OAAOA,MAAW,QAMX,IAAMC,EAAgC,MAC3CC,GACqC,CACrC,GAAM,CAAE,WAAAC,CAAW,EAAIC,EAAgBC,EAAS,CAAC,EAC3C,CAAE,KAAAC,CAAK,EAAI,MAAMC,EAAM,IAC3B,GAAGJ,CAAU,IAAIK,CAAqB,GACtC,CACE,OAAQ,CACN,OAAQN,EAAO,KAAK,GAAG,EACvB,cAAe,EACjB,CACF,CACF,EAEA,OAAOI,CACT",
  "names": ["axios", "getServerTransactionsByHashes", "hashes", "apiAddress", "networkSelector", "getState", "data", "axios", "TRANSACTIONS_ENDPOINT"]
}
