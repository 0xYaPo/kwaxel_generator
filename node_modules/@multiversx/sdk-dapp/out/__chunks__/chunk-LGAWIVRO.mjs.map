{
  "version": 3,
  "sources": ["../../src/apiCalls/tokens/getPersistedToken.ts"],
  "sourcesContent": ["import { axiosInstance } from 'apiCalls/utils/axiosInstance';\nimport { TIMEOUT } from 'constants/network.constants';\nimport { tokenDataStorage } from './tokenDataStorage';\n\nexport async function getPersistedToken<T>(url: string): Promise<T> {\n  const config = {\n    timeout: TIMEOUT\n  };\n\n  const cachedToken: T | null = await tokenDataStorage.getItem(url);\n\n  if (cachedToken) {\n    return cachedToken;\n  }\n\n  const response = await axiosInstance.get<T>(url, config);\n\n  await tokenDataStorage.setItem(url, response.data);\n\n  return response.data;\n}\n"],
  "mappings": "2HAIA,eAAsBA,EAAqBC,EAAyB,CAClE,IAAMC,EAAS,CACb,QAASC,CACX,EAEMC,EAAwB,MAAMC,EAAiB,QAAQJ,CAAG,EAEhE,GAAIG,EACF,OAAOA,EAGT,IAAME,EAAW,MAAMC,EAAc,IAAON,EAAKC,CAAM,EAEvD,aAAMG,EAAiB,QAAQJ,EAAKK,EAAS,IAAI,EAE1CA,EAAS,IAClB",
  "names": ["getPersistedToken", "url", "config", "TIMEOUT", "cachedToken", "tokenDataStorage", "response", "axiosInstance"]
}
