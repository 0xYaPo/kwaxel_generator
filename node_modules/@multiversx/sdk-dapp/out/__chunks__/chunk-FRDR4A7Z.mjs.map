{
  "version": 3,
  "sources": ["../../src/providers/strategies/LedgerProviderStrategy/helpers/getLedgerConfiguration.ts"],
  "sourcesContent": ["import { HWProvider } from '@multiversx/sdk-hw-provider';\nimport { IHWWalletApp } from '@multiversx/sdk-hw-provider/out/interface';\n\nimport { LEDGER_CONTRACT_DATA_ENABLED_VALUE } from 'constants/index';\n\nexport async function getLedgerConfiguration(initializedHwWalletP: HWProvider) {\n  if (!initializedHwWalletP.isInitialized()) {\n    throw new Error('Unable to get version. Provider not initialized');\n  }\n  const hwApp: IHWWalletApp = (initializedHwWalletP as any).hwApp;\n  const { contractData, version } = await hwApp.getAppConfiguration();\n  const dataEnabled = contractData === LEDGER_CONTRACT_DATA_ENABLED_VALUE;\n  return { version, dataEnabled };\n}\n"],
  "mappings": "yCAKA,eAAsBA,EAAuBC,EAAkC,CAC7E,GAAI,CAACA,EAAqB,cAAc,EACtC,MAAM,IAAI,MAAM,iDAAiD,EAEnE,IAAMC,EAAuBD,EAA6B,MACpD,CAAE,aAAAE,EAAc,QAAAC,CAAQ,EAAI,MAAMF,EAAM,oBAAoB,EAElE,MAAO,CAAE,QAAAE,EAAS,YADED,IAAiB,CACP,CAChC",
  "names": ["getLedgerConfiguration", "initializedHwWalletP", "hwApp", "contractData", "version"]
}
