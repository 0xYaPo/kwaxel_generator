{
  "version": 3,
  "sources": ["../../src/store/actions/transactions/transactionStateByStatus.ts"],
  "sourcesContent": ["import {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums.types';\n\nexport const pendingBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.sent\n];\n\nexport const successBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.success\n];\n\nexport const failBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.fail,\n  TransactionBatchStatusesEnum.cancelled,\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const invalidBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.invalid\n];\n\nexport const timedOutBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const pendingServerTransactionsStatuses = [\n  TransactionServerStatusesEnum.pending\n];\n\nexport const successServerTransactionsStates = [\n  TransactionServerStatusesEnum.success\n];\n\nexport const failServerTransactionsStates = [\n  TransactionServerStatusesEnum.fail,\n  TransactionServerStatusesEnum.invalid\n];\n\nexport const notExecutedServerTransactionsStates = [\n  TransactionServerStatusesEnum.notExecuted\n];\n\nexport function getIsTransactionPending(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionPending(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionPending(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionSuccessful(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionSuccessful(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionSuccessful(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionFailed(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionFailed(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionFailed(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionNotExecuted(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionInvalid(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionNotExecuted(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionTimedOut(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    isBatchTransactionTimedOut(status as TransactionBatchStatusesEnum)\n  );\n}\n\nexport function isBatchTransactionPending(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && pendingBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionSuccessful(\n  status: TransactionBatchStatusesEnum\n) {\n  return status != null && successBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionFailed(status: TransactionBatchStatusesEnum) {\n  return status != null && failBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionInvalid(\n  status: TransactionBatchStatusesEnum\n) {\n  return status != null && invalidBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionTimedOut(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && timedOutBatchTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionPending(\n  status?: TransactionServerStatusesEnum\n) {\n  return status != null && pendingServerTransactionsStatuses.includes(status);\n}\nexport function isServerTransactionSuccessful(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && successServerTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionFailed(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && failServerTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionNotExecuted(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && notExecutedServerTransactionsStates.includes(status);\n}\n"],
  "mappings": "AAKO,IAAMA,EAAiC,OAE9C,EAEaC,EAAiC,UAE9C,EAEaC,EAA8B,8BAI3C,EAEaC,EAAiC,UAE9C,EAEaC,EAAkC,WAE/C,EAEaC,EAAoC,UAEjD,EAEaC,EAAkC,UAE/C,EAEaC,EAA+B,iBAG5C,EAEaC,EAAsC,eAEnD,EAEO,SAASC,EACdC,EACA,CACA,OACEA,GAAU,OACTC,EAA0BD,CAAsC,GAC/DE,EAA2BF,CAAuC,EAExE,CAEO,SAASG,EACdH,EACA,CACA,OACEA,GAAU,OACTI,EAA6BJ,CAAsC,GAClEK,EAA8BL,CAAuC,EAE3E,CAEO,SAASM,EACdN,EACA,CACA,OACEA,GAAU,OACTO,EAAyBP,CAAsC,GAC9DQ,EAA0BR,CAAuC,EAEvE,CAEO,SAASS,EACdT,EACA,CACA,OACEA,GAAU,OACTU,EAA0BV,CAAsC,GAC/DW,EAA+BX,CAAuC,EAE5E,CAEO,SAASY,EACdZ,EACA,CACA,OACEA,GAAU,MACVa,EAA2Bb,CAAsC,CAErE,CAEO,SAASC,EACdD,EACA,CACA,OAAOA,GAAU,MAAQV,EAA+B,SAASU,CAAM,CACzE,CAEO,SAASI,EACdJ,EACA,CACA,OAAOA,GAAU,MAAQT,EAA+B,SAASS,CAAM,CACzE,CAEO,SAASO,EAAyBP,EAAsC,CAC7E,OAAOA,GAAU,MAAQR,EAA4B,SAASQ,CAAM,CACtE,CAEO,SAASU,EACdV,EACA,CACA,OAAOA,GAAU,MAAQP,EAA+B,SAASO,CAAM,CACzE,CAEO,SAASa,EACdb,EACA,CACA,OAAOA,GAAU,MAAQN,EAAgC,SAASM,CAAM,CAC1E,CAEO,SAASE,EACdF,EACA,CACA,OAAOA,GAAU,MAAQL,EAAkC,SAASK,CAAM,CAC5E,CACO,SAASK,EACdL,EACA,CACA,OAAOA,GAAU,MAAQJ,EAAgC,SAASI,CAAM,CAC1E,CAEO,SAASQ,EACdR,EACA,CACA,OAAOA,GAAU,MAAQH,EAA6B,SAASG,CAAM,CACvE,CAEO,SAASW,EACdX,EACA,CACA,OAAOA,GAAU,MAAQF,EAAoC,SAASE,CAAM,CAC9E",
  "names": ["pendingBatchTransactionsStates", "successBatchTransactionsStates", "failBatchTransactionsStates", "invalidBatchTransactionsStates", "timedOutBatchTransactionsStates", "pendingServerTransactionsStatuses", "successServerTransactionsStates", "failServerTransactionsStates", "notExecutedServerTransactionsStates", "getIsTransactionPending", "status", "isBatchTransactionPending", "isServerTransactionPending", "getIsTransactionSuccessful", "isBatchTransactionSuccessful", "isServerTransactionSuccessful", "getIsTransactionFailed", "isBatchTransactionFailed", "isServerTransactionFailed", "getIsTransactionNotExecuted", "isBatchTransactionInvalid", "isServerTransactionNotExecuted", "getIsTransactionTimedOut", "isBatchTransactionTimedOut"]
}
