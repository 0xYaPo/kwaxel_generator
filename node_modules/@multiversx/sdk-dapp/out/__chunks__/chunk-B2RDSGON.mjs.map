{
  "version": 3,
  "sources": ["../../src/providers/strategies/LedgerProviderStrategy/helpers/getAuthTokenText.ts"],
  "sourcesContent": ["import { decodeLoginToken } from 'services/nativeAuth/helpers/decodeLoginToken';\nimport getLedgerVersionOptions from './getLedgerVersionOptions';\nimport { secondsToTimeString } from './secondsToTimeString';\n\nexport const getAuthTokenText = ({\n  loginToken,\n  version\n}: {\n  loginToken?: string;\n  version?: string;\n}) => {\n  if (!loginToken || !version) {\n    return null;\n  }\n\n  const { ledgerWithUsernames } = getLedgerVersionOptions(version);\n  const nativeAuthInfo = decodeLoginToken(loginToken);\n  if (nativeAuthInfo == null) {\n    return null;\n  }\n\n  const confirmAddressText = 'Confirm Ledger Address';\n  const authText = 'Authorise Authentication Token';\n\n  if (ledgerWithUsernames) {\n    const time = secondsToTimeString(nativeAuthInfo.ttl);\n\n    return {\n      data: `${nativeAuthInfo.origin} for ${time}.`,\n      confirmAddressText,\n      authText\n    };\n  }\n\n  return {\n    data: loginToken,\n    confirmAddressText,\n    authText\n  };\n};\n"],
  "mappings": "2HAIO,IAAMA,EAAmB,CAAC,CAC/B,WAAAC,EACA,QAAAC,CACF,IAGM,CACJ,GAAI,CAACD,GAAc,CAACC,EAClB,OAAO,KAGT,GAAM,CAAE,oBAAAC,CAAoB,EAAIC,EAAwBF,CAAO,EACzDG,EAAiBC,EAAiBL,CAAU,EAClD,GAAII,GAAkB,KACpB,OAAO,KAGT,IAAME,EAAqB,yBACrBC,EAAW,iCAEjB,GAAIL,EAAqB,CACvB,IAAMM,EAAOC,EAAoBL,EAAe,GAAG,EAEnD,MAAO,CACL,KAAM,GAAGA,EAAe,MAAM,QAAQI,CAAI,IAC1C,mBAAAF,EACA,SAAAC,CACF,CACF,CAEA,MAAO,CACL,KAAMP,EACN,mBAAAM,EACA,SAAAC,CACF,CACF",
  "names": ["getAuthTokenText", "loginToken", "version", "ledgerWithUsernames", "getLedgerVersionOptions_default", "nativeAuthInfo", "decodeLoginToken", "confirmAddressText", "authText", "time", "secondsToTimeString"]
}
