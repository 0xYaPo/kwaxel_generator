{
  "version": 3,
  "sources": ["../../src/types/enums.types.ts"],
  "sourcesContent": ["export enum EnvironmentsEnum {\n  testnet = 'testnet',\n  devnet = 'devnet',\n  mainnet = 'mainnet'\n}\n\nexport enum TransactionServerStatusesEnum {\n  pending = 'pending',\n  fail = 'fail',\n  invalid = 'invalid',\n  success = 'success',\n  executed = 'executed',\n  notExecuted = 'not executed',\n  rewardReverted = 'reward-reverted'\n}\n\nexport enum TransactionTypesEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTTransfer = 'ESDTTransfer',\n  ESDTNFTBurn = 'ESDTNFTBurn',\n  ESDTNFTTransfer = 'ESDTNFTTransfer',\n  esdtTransaction = 'esdtTransaction',\n  nftTransaction = 'nftTransaction',\n  scCall = 'scCall'\n}\n\nexport enum TransactionBatchStatusesEnum {\n  signed = 'signed',\n  cancelled = 'cancelled',\n  success = 'success',\n  sent = 'sent',\n  fail = 'fail',\n  timedOut = 'timedOut',\n  invalid = 'invalid'\n}\n\nexport enum TypesOfSmartContractCallsEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer'\n}\n\nexport enum ESDTTransferTypesEnum {\n  ESDTNFTTransfer = 'ESDTNFTTransfer',\n  ESDTNFTBurn = 'ESDTNFTBurn',\n  ESDTNFTAddQuantity = 'ESDTNFTAddQuantity',\n  ESDTNFTCreate = 'ESDTNFTCreate',\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTTransfer = 'ESDTTransfer',\n  ESDTBurn = 'ESDTBurn',\n  ESDTLocalMint = 'ESDTLocalMint',\n  ESDTLocalBurn = 'ESDTLocalBurn',\n  ESDTWipe = 'ESDTWipe',\n  ESDTFreeze = 'ESDTFreeze'\n}\n\nexport enum GuardianActionsEnum {\n  SetGuardian = 'SetGuardian',\n  GuardAccount = 'GuardAccount',\n  UnGuardAccount = 'UnGuardAccount'\n}\n\nexport enum SigningErrorsEnum {\n  notInitialized = 'Provider not initialized',\n  errorSigning = 'Error when signing',\n  errorSigningTx = 'Error signing transaction',\n  missingProviderMessage = 'You need a signer/valid signer to send a transaction, use either WalletProvider, LedgerProvider or WalletConnect',\n  defaultTransactionStatusMessage = 'Undefined transaction status',\n  secondLoginAttemptError = 'Action not allowed. User is logged in. Call logout() first',\n  senderDifferentThanLoggedInAddress = 'You cannot sign transactions from a different account'\n}\nexport enum SigningWarningsEnum {\n  cancelled = 'Signing canceled',\n  transactionCancelled = 'Transaction canceled'\n}\n"],
  "mappings": "AAAO,IAAKA,OACVA,EAAA,QAAU,UACVA,EAAA,OAAS,SACTA,EAAA,QAAU,UAHAA,OAAA,IAMAC,OACVA,EAAA,QAAU,UACVA,EAAA,KAAO,OACPA,EAAA,QAAU,UACVA,EAAA,QAAU,UACVA,EAAA,SAAW,WACXA,EAAA,YAAc,eACdA,EAAA,eAAiB,kBAPPA,OAAA,IAUAC,OACVA,EAAA,qBAAuB,uBACvBA,EAAA,aAAe,eACfA,EAAA,YAAc,cACdA,EAAA,gBAAkB,kBAClBA,EAAA,gBAAkB,kBAClBA,EAAA,eAAiB,iBACjBA,EAAA,OAAS,SAPCA,OAAA,IAUAC,OACVA,EAAA,OAAS,SACTA,EAAA,UAAY,YACZA,EAAA,QAAU,UACVA,EAAA,KAAO,OACPA,EAAA,KAAO,OACPA,EAAA,SAAW,WACXA,EAAA,QAAU,UAPAA,OAAA,IAUAC,OACVA,EAAA,qBAAuB,uBACvBA,EAAA,gBAAkB,kBAFRA,OAAA,IAKAC,OACVA,EAAA,gBAAkB,kBAClBA,EAAA,YAAc,cACdA,EAAA,mBAAqB,qBACrBA,EAAA,cAAgB,gBAChBA,EAAA,qBAAuB,uBACvBA,EAAA,aAAe,eACfA,EAAA,SAAW,WACXA,EAAA,cAAgB,gBAChBA,EAAA,cAAgB,gBAChBA,EAAA,SAAW,WACXA,EAAA,WAAa,aAXHA,OAAA,IAcAC,OACVA,EAAA,YAAc,cACdA,EAAA,aAAe,eACfA,EAAA,eAAiB,iBAHPA,OAAA,IAMAC,OACVA,EAAA,eAAiB,2BACjBA,EAAA,aAAe,qBACfA,EAAA,eAAiB,4BACjBA,EAAA,uBAAyB,mHACzBA,EAAA,gCAAkC,+BAClCA,EAAA,wBAA0B,6DAC1BA,EAAA,mCAAqC,wDAP3BA,OAAA,IASAC,OACVA,EAAA,UAAY,mBACZA,EAAA,qBAAuB,uBAFbA,OAAA",
  "names": ["EnvironmentsEnum", "TransactionServerStatusesEnum", "TransactionTypesEnum", "TransactionBatchStatusesEnum", "TypesOfSmartContractCallsEnum", "ESDTTransferTypesEnum", "GuardianActionsEnum", "SigningErrorsEnum", "SigningWarningsEnum"]
}
