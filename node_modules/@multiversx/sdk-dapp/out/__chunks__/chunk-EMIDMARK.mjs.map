{
  "version": 3,
  "sources": ["../../src/react/store/createBoundedStore.ts"],
  "sourcesContent": ["import { useStore } from 'zustand';\nimport { StoreApi } from 'zustand/vanilla';\n\ntype ExtractState<S> = S extends { getState: () => infer X } ? X : never;\n\n/**\n *\n * @param store\n * @returns a hook that can be used to access the store in ReactJS context\n * */\nexport const createBoundedUseStore = ((store) => (selector) =>\n  useStore(store, selector)) as <S extends StoreApi<unknown>>(\n  store: S\n) => {\n  (): ExtractState<S>;\n  <T>(selector: (state: ExtractState<S>) => T): T;\n};\n"],
  "mappings": "AAAA,OAAS,YAAAA,MAAgB,UAUlB,IAAMC,EAA0BC,GAAWC,GAChDH,EAASE,EAAOC,CAAQ",
  "names": ["useStore", "createBoundedUseStore", "store", "selector"]
}
