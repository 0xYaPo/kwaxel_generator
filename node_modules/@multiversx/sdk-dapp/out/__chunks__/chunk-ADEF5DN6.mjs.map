{
  "version": 3,
  "sources": ["../../src/providers/strategies/helpers/signTransactions/helpers/guardTransactions/guardTransactions.ts"],
  "sourcesContent": ["import { Transaction } from 'lib/sdkCore';\nimport { getAccount } from 'methods/account/getAccount';\nimport { networkSelector } from 'store/selectors';\nimport { getState } from 'store/store';\nimport { getCrossWindowProvider } from './getCrossWindowProvider';\nimport { getTransactionsNeedGuardianSigning } from './getTransactionsNeedGuardianSigning';\n\n/*\n  Performs guard transactions if needed\n*/\nexport const guardTransactions = async (transactions: Transaction[]) => {\n  const { isGuarded } = getAccount();\n\n  const needs2FAsigning = getTransactionsNeedGuardianSigning({\n    isGuarded,\n    transactions\n  });\n\n  if (!needs2FAsigning) {\n    return transactions;\n  }\n\n  const sender = transactions[0].sender.toBech32();\n  const { walletAddress } = networkSelector(getState());\n\n  const provider = await getCrossWindowProvider({\n    address: sender,\n    walletUrl: walletAddress\n  });\n\n  const guardedTransactions = await provider?.guardTransactions(transactions);\n  return guardedTransactions || [];\n};\n"],
  "mappings": "6MAUO,IAAMA,EAAoB,MAAOC,GAAgC,CACtE,GAAM,CAAE,UAAAC,CAAU,EAAIC,EAAW,EAOjC,GAAI,CALoBC,EAAmC,CACzD,UAAAF,EACA,aAAAD,CACF,CAAC,EAGC,OAAOA,EAGT,IAAMI,EAASJ,EAAa,CAAC,EAAE,OAAO,SAAS,EACzC,CAAE,cAAAK,CAAc,EAAIC,EAAgBC,EAAS,CAAC,EAQpD,OAD4B,MALX,MAAMC,EAAuB,CAC5C,QAASJ,EACT,UAAWC,CACb,CAAC,IAE2C,kBAAkBL,CAAY,GAC5C,CAAC,CACjC",
  "names": ["guardTransactions", "transactions", "isGuarded", "getAccount", "getTransactionsNeedGuardianSigning", "sender", "walletAddress", "networkSelector", "getState", "getCrossWindowProvider"]
}
