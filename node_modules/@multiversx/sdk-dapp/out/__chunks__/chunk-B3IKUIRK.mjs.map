{
  "version": 3,
  "sources": ["../../src/utils/transactions/getHumanReadableTimeFormat.ts"],
  "sourcesContent": ["export interface GetHumanReadableTimeFormatType {\n  value: number;\n  noSeconds?: boolean;\n  utc?: boolean;\n  meridiem?: boolean;\n}\n\n/**\n * @param value - UNIX timestamp\n * */\nexport function getHumanReadableTimeFormat({\n  value,\n  noSeconds,\n  utc,\n  meridiem = true\n}: GetHumanReadableTimeFormatType) {\n  const utcDate = new Date(value * 1000);\n  const [, AmPm] = utcDate\n    .toLocaleString('en-US', { hour: 'numeric', hour12: meridiem })\n    .split(' ');\n  const formatted = utcDate.toUTCString();\n  const [, date] = formatted.split(',');\n  const [day, month, year, time] = date.trim().split(' ');\n  const [hours, minutes, sec] = time.split(':');\n  const seconds = `:${sec}`;\n  const timeFormatted = `${hours}:${minutes}${noSeconds ? '' : seconds}`;\n  const utcSuffix = utc ? 'UTC' : '';\n  const meridiemSuffix = meridiem ? AmPm : '';\n  const suffix = `${meridiemSuffix} ${utcSuffix}`.trim();\n\n  return `${month} ${day}, ${year} ${timeFormatted} ${suffix}`.trim();\n}\n"],
  "mappings": "AAUO,SAASA,EAA2B,CACzC,MAAAC,EACA,UAAAC,EACA,IAAAC,EACA,SAAAC,EAAW,EACb,EAAmC,CACjC,IAAMC,EAAU,IAAI,KAAKJ,EAAQ,GAAI,EAC/B,CAAC,CAAEK,CAAI,EAAID,EACd,eAAe,QAAS,CAAE,KAAM,UAAW,OAAQD,CAAS,CAAC,EAC7D,MAAM,GAAG,EACNG,EAAYF,EAAQ,YAAY,EAChC,CAAC,CAAEG,CAAI,EAAID,EAAU,MAAM,GAAG,EAC9B,CAACE,EAAKC,EAAOC,EAAMC,CAAI,EAAIJ,EAAK,KAAK,EAAE,MAAM,GAAG,EAChD,CAACK,EAAOC,EAASC,CAAG,EAAIH,EAAK,MAAM,GAAG,EACtCI,EAAU,IAAID,CAAG,GACjBE,EAAgB,GAAGJ,CAAK,IAAIC,CAAO,GAAGZ,EAAY,GAAKc,CAAO,GAG9DE,EAAS,GADQd,EAAWE,EAAO,EACT,IAFdH,EAAM,MAAQ,EAEa,GAAG,KAAK,EAErD,MAAO,GAAGO,CAAK,IAAID,CAAG,KAAKE,CAAI,IAAIM,CAAa,IAAIC,CAAM,GAAG,KAAK,CACpE",
  "names": ["getHumanReadableTimeFormat", "value", "noSeconds", "utc", "meridiem", "utcDate", "AmPm", "formatted", "date", "day", "month", "year", "time", "hours", "minutes", "sec", "seconds", "timeFormatted", "suffix"]
}
