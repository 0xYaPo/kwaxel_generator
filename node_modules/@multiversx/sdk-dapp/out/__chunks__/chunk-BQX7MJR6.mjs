import{a as m}from"./chunk-AXUYY4T7.mjs";import{a as l}from"./chunk-3KUTPB2M.mjs";import{a as p}from"./chunk-OMT62YRR.mjs";import{a as I}from"./chunk-S5XV2COC.mjs";import{b as T}from"./chunk-SLOQOCEU.mjs";import{c as g}from"./chunk-TI37DKBT.mjs";var r={};function M({egldLabel:y,apiAddress:s,sender:t,address:e,parsedTransactionsByDataField:u}){return async o=>{if(o==null)return;let S=!t||t===e?null:await T({address:t,baseURL:s}),{transaction:a,multiTxData:A,transactionIndex:D}=o,c=g(a.data.toString()??""),d=p({data:c,multiTransactionData:A,parsedTransactionsByDataField:u}),{tokenId:f}=d,n=a.receiver.toBech32();if(t&&t!==e&&!l(S,e))throw console.error("You cannot sign transactions from a different account"),"You cannot sign transactions from a different account";let k=e!==n,x=n in r;if(n&&k&&!x){let i=await m({addressToVerify:n,baseURL:s});r={...r,...i?.scamInfo?{[n]:i.scamInfo}:{}}}let V=!!(f&&I({tokenId:f,egldLabel:y}));return{transaction:a,receiverScamInfo:r[n]?.info||null,transactionTokenInfo:d,isTokenTransaction:V,dataField:c,transactionIndex:D,needsSigning:o.needsSigning}}}export{M as a};
//# sourceMappingURL=chunk-BQX7MJR6.mjs.map
