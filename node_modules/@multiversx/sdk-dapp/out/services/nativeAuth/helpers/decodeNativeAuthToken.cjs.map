{
  "version": 3,
  "sources": ["../../../../src/services/nativeAuth/helpers/decodeNativeAuthToken.ts"],
  "sourcesContent": ["import { decodeBase64 } from 'utils/decoders/base64Utils';\nimport { DecodedLoginTokenType, decodeLoginToken } from './decodeLoginToken';\n\nfunction isString(x: any) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\ninterface DecodedNativeAuthTokenType extends DecodedLoginTokenType {\n  address: string;\n  body: string;\n  signature: string;\n}\n\nexport const decodeNativeAuthToken = (\n  accessToken?: string\n): DecodedNativeAuthTokenType | null => {\n  if (!accessToken || !isString(accessToken)) {\n    return null;\n  }\n\n  const parts = accessToken.split('.');\n\n  if (parts.length !== 3) {\n    console.error(\n      'Invalid nativeAuthToken. You may be trying to decode a loginToken. Try using decodeLoginToken method instead'\n    );\n    return null;\n  }\n\n  try {\n    const [address, body, signature] = parts;\n    const parsedAddress = decodeBase64(address);\n    const parsedBody = decodeBase64(body);\n    const parsedInitToken = decodeLoginToken(parsedBody);\n\n    if (!parsedInitToken) {\n      return {\n        address: parsedAddress,\n        body: parsedBody,\n        signature,\n        blockHash: '',\n        origin: '',\n        ttl: 0\n      };\n    }\n\n    const result = {\n      ...parsedInitToken,\n      address: parsedAddress,\n      body: parsedBody,\n      signature\n    };\n\n    // if empty object, delete extraInfo\n    if (!parsedInitToken.extraInfo?.timestamp) {\n      delete result.extraInfo;\n    }\n\n    return result;\n  } catch (_err) {\n    return null;\n  }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6B;AAC7B,8BAAwD;AAExD,SAAS,SAAS,GAAQ;AACxB,SAAO,OAAO,UAAU,SAAS,KAAK,CAAC,MAAM;AAC/C;AAQO,MAAM,wBAAwB,CACnC,gBACsC;AACtC,MAAI,CAAC,eAAe,CAAC,SAAS,WAAW,GAAG;AAC1C,WAAO;AAAA,EACT;AAEA,QAAM,QAAQ,YAAY,MAAM,GAAG;AAEnC,MAAI,MAAM,WAAW,GAAG;AACtB,YAAQ;AAAA,MACN;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAEA,MAAI;AACF,UAAM,CAAC,SAAS,MAAM,SAAS,IAAI;AACnC,UAAM,oBAAgB,iCAAa,OAAO;AAC1C,UAAM,iBAAa,iCAAa,IAAI;AACpC,UAAM,sBAAkB,0CAAiB,UAAU;AAEnD,QAAI,CAAC,iBAAiB;AACpB,aAAO;AAAA,QACL,SAAS;AAAA,QACT,MAAM;AAAA,QACN;AAAA,QACA,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,KAAK;AAAA,MACP;AAAA,IACF;AAEA,UAAM,SAAS;AAAA,MACb,GAAG;AAAA,MACH,SAAS;AAAA,MACT,MAAM;AAAA,MACN;AAAA,IACF;AAGA,QAAI,CAAC,gBAAgB,WAAW,WAAW;AACzC,aAAO,OAAO;AAAA,IAChB;AAEA,WAAO;AAAA,EACT,SAAS,MAAM;AACb,WAAO;AAAA,EACT;AACF;",
  "names": []
}
