{
  "version": 3,
  "sources": ["../../../../src/services/nativeAuth/methods/buildNativeAuthConfig.ts"],
  "sourcesContent": ["import { NativeAuthConfigType } from '../nativeAuth.types';\nimport { getDefaultNativeAuthConfig } from './getDefaultNativeAuthConfig';\n\nexport const buildNativeAuthConfig = (config?: NativeAuthConfigType) => {\n  const defaultNativeAuthConfig = getDefaultNativeAuthConfig();\n\n  return {\n    origin: config?.origin ?? defaultNativeAuthConfig.origin,\n    blockHashShard: config?.blockHashShard,\n    expirySeconds:\n      config?.expirySeconds ?? defaultNativeAuthConfig.expirySeconds,\n    apiAddress: config?.apiAddress ?? defaultNativeAuthConfig.apiAddress,\n    tokenExpirationToastWarningSeconds:\n      config?.tokenExpirationToastWarningSeconds ??\n      defaultNativeAuthConfig.tokenExpirationToastWarningSeconds,\n    extraInfo: config?.extraInfo ?? {},\n    gatewayUrl: config?.gatewayUrl,\n    extraRequestHeaders: config?.extraRequestHeaders ?? {}\n  };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wCAA2C;AAEpC,MAAM,wBAAwB,CAAC,WAAkC;AACtE,QAAM,8BAA0B,8DAA2B;AAE3D,SAAO;AAAA,IACL,QAAQ,QAAQ,UAAU,wBAAwB;AAAA,IAClD,gBAAgB,QAAQ;AAAA,IACxB,eACE,QAAQ,iBAAiB,wBAAwB;AAAA,IACnD,YAAY,QAAQ,cAAc,wBAAwB;AAAA,IAC1D,oCACE,QAAQ,sCACR,wBAAwB;AAAA,IAC1B,WAAW,QAAQ,aAAa,CAAC;AAAA,IACjC,YAAY,QAAQ;AAAA,IACpB,qBAAqB,QAAQ,uBAAuB,CAAC;AAAA,EACvD;AACF;",
  "names": []
}
