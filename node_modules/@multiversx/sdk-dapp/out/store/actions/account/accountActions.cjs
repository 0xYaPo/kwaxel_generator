"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var accountActions_exports = {};
__export(accountActions_exports, {
  setAccount: () => setAccount,
  setAccountNonce: () => setAccountNonce,
  setLedgerAccount: () => setLedgerAccount,
  setWalletConnectAccount: () => setWalletConnectAccount,
  setWebsocketBatchEvent: () => setWebsocketBatchEvent,
  setWebsocketEvent: () => setWebsocketEvent
});
module.exports = __toCommonJS(accountActions_exports);
var import_emptyAccount = require("../../../store/slices/account/emptyAccount");
var import_store = require("../../../store/store");
const setAccount = (account) => {
  (0, import_store.getStore)().setState(
    ({ account: state }) => {
      const isSameAddress = state.address === account.address;
      state.accounts = {
        [state.address]: isSameAddress ? account : import_emptyAccount.emptyAccount
      };
    },
    false,
    "setAccount"
  );
};
const setLedgerAccount = (ledgerAccount) => (0, import_store.getStore)().setState(
  ({ account: state }) => {
    state.ledgerAccount = ledgerAccount;
  },
  false,
  "setLedgerAccount"
);
const setWalletConnectAccount = (walletConnectAccount) => (0, import_store.getStore)().setState(
  ({ account: state }) => {
    state.walletConnectAccount = walletConnectAccount;
  },
  false,
  "setWalletConnectAccount"
);
const setWebsocketEvent = (message) => (0, import_store.getStore)().setState(
  ({ account: state }) => {
    state.websocketEvent = {
      timestamp: Date.now(),
      message
    };
  },
  false,
  "setWebsocketEvent"
);
const setWebsocketBatchEvent = (data) => (0, import_store.getStore)().setState(
  ({ account: state }) => {
    state.websocketBatchEvent = {
      timestamp: Date.now(),
      data
    };
  },
  false,
  "setWebsocketBatchEvent"
);
const setAccountNonce = (nonce) => {
  (0, import_store.getStore)().setState(
    ({ account: state }) => {
      state.accounts[state.address].nonce = nonce;
    },
    false,
    "setAccountNonce"
  );
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  setAccount,
  setAccountNonce,
  setLedgerAccount,
  setWalletConnectAccount,
  setWebsocketBatchEvent,
  setWebsocketEvent
});
//# sourceMappingURL=accountActions.cjs.map
