"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var loginInfoActions_exports = {};
__export(loginInfoActions_exports, {
  addLoginExpiresAt: () => addLoginExpiresAt,
  removeLoginExpiresAt: () => removeLoginExpiresAt,
  setIsWalletConnectV2Initialized: () => setIsWalletConnectV2Initialized,
  setLedgerLogin: () => setLedgerLogin,
  setLoginToken: () => setLoginToken,
  setProviderType: () => setProviderType,
  setTokenLogin: () => setTokenLogin,
  setTokenLoginSignature: () => setTokenLoginSignature,
  setWalletConnectLogin: () => setWalletConnectLogin
});
module.exports = __toCommonJS(loginInfoActions_exports);
var import_store = require("../../../store/store");
const setProviderType = (providerType) => (0, import_store.getStore)().setState(
  ({ loginInfo: state }) => {
    state.providerType = providerType;
  },
  false,
  "setProviderType"
);
const setTokenLogin = (tokenLogin) => (0, import_store.getStore)().setState(
  ({ loginInfo: state }) => {
    state.tokenLogin = tokenLogin;
  },
  false,
  "setTokenLogin"
);
const setLoginToken = (loginToken) => (0, import_store.getStore)().setState(
  ({ loginInfo: state }) => {
    if (state.tokenLogin != null) {
      state.tokenLogin.loginToken = loginToken;
      return;
    }
    state.tokenLogin = {
      loginToken
    };
  },
  false,
  "setLoginToken"
);
const setTokenLoginSignature = (signature) => (0, import_store.getStore)().setState(
  ({ loginInfo: state }) => {
    if (state?.tokenLogin != null) {
      state.tokenLogin.signature = signature;
    }
  },
  false,
  "setTokenLoginSignature"
);
const setWalletConnectLogin = (walletConnectLogin) => (0, import_store.getStore)().setState(
  ({ loginInfo: state }) => {
    state.walletConnectLogin = walletConnectLogin;
  },
  false,
  "setWalletConnectLogin"
);
const setLedgerLogin = (ledgerLogin) => (0, import_store.getStore)().setState(
  ({ loginInfo: state }) => {
    state.ledgerLogin = ledgerLogin;
  },
  false,
  "setLedgerLogin"
);
const setIsWalletConnectV2Initialized = (isInitialized) => (0, import_store.getStore)().setState(
  ({ loginInfo: state }) => {
    state.isWalletConnectV2Initialized = isInitialized;
  },
  false,
  "setIsWalletConnectV2Initialized"
);
const removeLoginExpiresAt = () => (0, import_store.getStore)().setState(
  ({ loginInfo: state }) => {
    state.loginExpiresAt = null;
  },
  false,
  "removeLoginExpiresAt"
);
const addLoginExpiresAt = (expiresAt) => (0, import_store.getStore)().setState(
  ({ loginInfo: state }) => {
    state.loginExpiresAt = expiresAt;
  },
  false,
  "addLoginExpiresAt"
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  addLoginExpiresAt,
  removeLoginExpiresAt,
  setIsWalletConnectV2Initialized,
  setLedgerLogin,
  setLoginToken,
  setProviderType,
  setTokenLogin,
  setTokenLoginSignature,
  setWalletConnectLogin
});
//# sourceMappingURL=loginInfoActions.cjs.map
