{
  "version": 3,
  "sources": ["../../../../src/store/actions/toasts/toastsActions.ts"],
  "sourcesContent": ["import {\n  CustomToastType,\n  IComponentToast\n} from 'store/slices/toast/toastSlice.types';\nimport { getStore } from 'store/store';\nimport { getUnixTimestamp, getUnixTimestampWithAddedMilliseconds } from 'utils';\n\nexport const customToastComponentDictionary: Record<\n  string,\n  IComponentToast['instantiateToastElement']\n> = {};\nexport const customToastCloseHandlersDictionary: Record<string, () => void> =\n  {};\n\nexport const addCustomToast = (\n  customToast: CustomToastType,\n  currentToastId?: string\n) => {\n  getStore().setState(\n    ({ toasts: state }) => {\n      const lastToastIndex =\n        state.customToasts.length > 0\n          ? Math.max(\n              ...state.customToasts.map((toast) =>\n                parseInt(toast.toastId.split('-').pop() ?? '0')\n              )\n            )\n          : 0;\n      const toastId = currentToastId ?? `custom-toast-${lastToastIndex + 1}`;\n\n      const existingToastIndex = state.customToasts.findIndex(\n        (toast) => toast.toastId === toastId\n      );\n\n      const newToast: CustomToastType = {\n        ...customToast,\n        toastId\n      };\n\n      const isToastFound = existingToastIndex !== -1;\n\n      if (isToastFound) {\n        state.customToasts[existingToastIndex] = newToast;\n        return;\n      }\n\n      state.customToasts.push({\n        ...newToast,\n        toastId\n      });\n    },\n    false,\n    'addCustomToast'\n  );\n};\n\nexport const removeCustomToast = (toastId: string) => {\n  getStore().setState(\n    ({ toasts: state }) => {\n      state.customToasts = state.customToasts.filter(\n        (toast) => toast.toastId !== toastId\n      );\n    },\n    false,\n    'removeCustomToast'\n  );\n};\n\nexport const removeAllCustomToasts = () => {\n  getStore().setState(\n    ({ toasts: state }) => {\n      state.customToasts = [];\n    },\n    false,\n    'removeAllCustomToasts'\n  );\n};\n\nexport const removeAllTransactionToasts = () => {\n  getStore().setState(({ toasts: state }) => {\n    state.transactionToasts = [];\n  });\n};\n\nexport const addTransactionToast = ({\n  toastId,\n  totalDuration\n}: {\n  toastId: string;\n  totalDuration: number;\n}): string => {\n  let newToastId: string = '';\n  getStore().setState(\n    ({ toasts: state }) => {\n      const lastToastIndex =\n        state.transactionToasts.length > 0\n          ? Math.max(\n              ...state.transactionToasts.map((toast) =>\n                parseInt(toast.toastId.split('-').pop() ?? '0')\n              )\n            )\n          : 0;\n      newToastId = toastId ?? `transaction-toast-${lastToastIndex + 1}`;\n\n      state.transactionToasts.push({\n        startTime: getUnixTimestamp(),\n        endTime: getUnixTimestampWithAddedMilliseconds(totalDuration),\n        toastId: newToastId\n      });\n    },\n    false,\n    'addTransactionToast'\n  );\n\n  return newToastId;\n};\n\nexport const removeTransactionToast = (toastId: string) => {\n  getStore().setState(\n    ({ toasts: state }) => {\n      state.transactionToasts = state.transactionToasts.filter((toast) => {\n        return toast.toastId !== toastId;\n      });\n    },\n    false,\n    'removeTransactionToast'\n  );\n\n  delete customToastCloseHandlersDictionary[toastId];\n  delete customToastComponentDictionary[toastId];\n};\n\nexport const createCustomToast = (props: CustomToastType) => {\n  const { toasts } = getStore().getState();\n\n  const lastToastIndex =\n    toasts.customToasts.length > 0\n      ? Math.max(\n          ...toasts.customToasts.map((toast) =>\n            parseInt(toast.toastId.split('-').pop() ?? '0')\n          )\n        )\n      : 0;\n\n  const toastId = props.toastId || `custom-toast-${lastToastIndex + 1}`;\n\n  if (props.onClose) {\n    customToastCloseHandlersDictionary[toastId] = props.onClose;\n  }\n\n  if (props.instantiateToastElement) {\n    customToastComponentDictionary[toastId] = props.instantiateToastElement;\n\n    getStore().setState(\n      ({ toasts: state }) => {\n        const existingToastIndex = state.customToasts.findIndex(\n          (toast) => toast.toastId === toastId\n        );\n\n        const toast: CustomToastType = {\n          ...props,\n          instantiateToastElement: null,\n          toastId\n        };\n\n        const isToastFound = existingToastIndex !== -1;\n\n        if (isToastFound) {\n          state.customToasts[existingToastIndex] = toast;\n        } else {\n          state.customToasts.push(toast);\n        }\n      },\n      false,\n      'createCustomToast'\n    );\n\n    return toastId;\n  }\n\n  addCustomToast(props, toastId);\n  return toastId;\n};\n"],
  "mappings": "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",
  "names": ["toast"]
}
