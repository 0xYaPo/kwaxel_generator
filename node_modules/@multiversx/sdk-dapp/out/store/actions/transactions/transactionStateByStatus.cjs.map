{
  "version": 3,
  "sources": ["../../../../src/store/actions/transactions/transactionStateByStatus.ts"],
  "sourcesContent": ["import {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums.types';\n\nexport const pendingBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.sent\n];\n\nexport const successBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.success\n];\n\nexport const failBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.fail,\n  TransactionBatchStatusesEnum.cancelled,\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const invalidBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.invalid\n];\n\nexport const timedOutBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const pendingServerTransactionsStatuses = [\n  TransactionServerStatusesEnum.pending\n];\n\nexport const successServerTransactionsStates = [\n  TransactionServerStatusesEnum.success\n];\n\nexport const failServerTransactionsStates = [\n  TransactionServerStatusesEnum.fail,\n  TransactionServerStatusesEnum.invalid\n];\n\nexport const notExecutedServerTransactionsStates = [\n  TransactionServerStatusesEnum.notExecuted\n];\n\nexport function getIsTransactionPending(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionPending(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionPending(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionSuccessful(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionSuccessful(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionSuccessful(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionFailed(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionFailed(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionFailed(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionNotExecuted(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionInvalid(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionNotExecuted(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionTimedOut(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    isBatchTransactionTimedOut(status as TransactionBatchStatusesEnum)\n  );\n}\n\nexport function isBatchTransactionPending(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && pendingBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionSuccessful(\n  status: TransactionBatchStatusesEnum\n) {\n  return status != null && successBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionFailed(status: TransactionBatchStatusesEnum) {\n  return status != null && failBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionInvalid(\n  status: TransactionBatchStatusesEnum\n) {\n  return status != null && invalidBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionTimedOut(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && timedOutBatchTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionPending(\n  status?: TransactionServerStatusesEnum\n) {\n  return status != null && pendingServerTransactionsStatuses.includes(status);\n}\nexport function isServerTransactionSuccessful(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && successServerTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionFailed(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && failServerTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionNotExecuted(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && notExecutedServerTransactionsStates.includes(status);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGO;AAEA,MAAM,iCAAiC;AAAA,EAC5C,0CAA6B;AAC/B;AAEO,MAAM,iCAAiC;AAAA,EAC5C,0CAA6B;AAC/B;AAEO,MAAM,8BAA8B;AAAA,EACzC,0CAA6B;AAAA,EAC7B,0CAA6B;AAAA,EAC7B,0CAA6B;AAC/B;AAEO,MAAM,iCAAiC;AAAA,EAC5C,0CAA6B;AAC/B;AAEO,MAAM,kCAAkC;AAAA,EAC7C,0CAA6B;AAC/B;AAEO,MAAM,oCAAoC;AAAA,EAC/C,2CAA8B;AAChC;AAEO,MAAM,kCAAkC;AAAA,EAC7C,2CAA8B;AAChC;AAEO,MAAM,+BAA+B;AAAA,EAC1C,2CAA8B;AAAA,EAC9B,2CAA8B;AAChC;AAEO,MAAM,sCAAsC;AAAA,EACjD,2CAA8B;AAChC;AAEO,SAAS,wBACd,QACA;AACA,SACE,UAAU,SACT,0BAA0B,MAAsC,KAC/D,2BAA2B,MAAuC;AAExE;AAEO,SAAS,2BACd,QACA;AACA,SACE,UAAU,SACT,6BAA6B,MAAsC,KAClE,8BAA8B,MAAuC;AAE3E;AAEO,SAAS,uBACd,QACA;AACA,SACE,UAAU,SACT,yBAAyB,MAAsC,KAC9D,0BAA0B,MAAuC;AAEvE;AAEO,SAAS,4BACd,QACA;AACA,SACE,UAAU,SACT,0BAA0B,MAAsC,KAC/D,+BAA+B,MAAuC;AAE5E;AAEO,SAAS,yBACd,QACA;AACA,SACE,UAAU,QACV,2BAA2B,MAAsC;AAErE;AAEO,SAAS,0BACd,QACA;AACA,SAAO,UAAU,QAAQ,+BAA+B,SAAS,MAAM;AACzE;AAEO,SAAS,6BACd,QACA;AACA,SAAO,UAAU,QAAQ,+BAA+B,SAAS,MAAM;AACzE;AAEO,SAAS,yBAAyB,QAAsC;AAC7E,SAAO,UAAU,QAAQ,4BAA4B,SAAS,MAAM;AACtE;AAEO,SAAS,0BACd,QACA;AACA,SAAO,UAAU,QAAQ,+BAA+B,SAAS,MAAM;AACzE;AAEO,SAAS,2BACd,QACA;AACA,SAAO,UAAU,QAAQ,gCAAgC,SAAS,MAAM;AAC1E;AAEO,SAAS,2BACd,QACA;AACA,SAAO,UAAU,QAAQ,kCAAkC,SAAS,MAAM;AAC5E;AACO,SAAS,8BACd,QACA;AACA,SAAO,UAAU,QAAQ,gCAAgC,SAAS,MAAM;AAC1E;AAEO,SAAS,0BACd,QACA;AACA,SAAO,UAAU,QAAQ,6BAA6B,SAAS,MAAM;AACvE;AAEO,SAAS,+BACd,QACA;AACA,SAAO,UAAU,QAAQ,oCAAoC,SAAS,MAAM;AAC9E;",
  "names": []
}
