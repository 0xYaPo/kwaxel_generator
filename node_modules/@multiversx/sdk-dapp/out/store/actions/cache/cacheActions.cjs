"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var cacheActions_exports = {};
__export(cacheActions_exports, {
  clearCache: () => clearCache,
  removeFromCache: () => removeFromCache,
  saveToCache: () => saveToCache
});
module.exports = __toCommonJS(cacheActions_exports);
var import_store = require("../../../store/store");
const saveToCache = ({ key, value }) => {
  (0, import_store.getStore)().setState(
    ({ cache: state }) => {
      state[key] = value;
    },
    false,
    "saveToCache"
  );
};
const removeFromCache = (key) => {
  (0, import_store.getStore)().setState(
    ({ cache: state }) => {
      delete state[key];
    },
    false,
    "removeFromCache"
  );
};
const clearCache = () => {
  (0, import_store.getStore)().setState(
    ({ cache: state }) => {
      Object.keys(state).forEach((key) => {
        delete state[key];
      });
    },
    false,
    "clearCache"
  );
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  clearCache,
  removeFromCache,
  saveToCache
});
//# sourceMappingURL=cacheActions.cjs.map
