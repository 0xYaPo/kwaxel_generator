{
  "version": 3,
  "sources": ["../../../../src/store/actions/network/initializeNetwork.ts"],
  "sourcesContent": ["import { getNetworkConfigFromApi } from 'apiCalls/configuration/getNetworkConfigFromApi';\nimport { getServerConfiguration } from 'apiCalls/configuration/getServerConfiguration';\nimport { fallbackNetworkConfigurations } from 'constants/network.constants';\nimport { emptyNetwork } from 'store/slices/network/emptyNetwork';\nimport { EnvironmentsEnum } from 'types/enums.types';\nimport { NetworkType, CustomNetworkType } from 'types/network.types';\nimport { initializeNetworkConfig } from './networkActions';\n\nexport type InitializeNetworkPropsType = {\n  customNetworkConfig?: CustomNetworkType;\n  environment?: EnvironmentsEnum;\n};\n\nexport const initializeNetwork = async ({\n  customNetworkConfig = {},\n  environment\n}: InitializeNetworkPropsType) => {\n  const fetchConfigFromServer = !customNetworkConfig?.skipFetchFromServer;\n  const customNetworkApiAddress = customNetworkConfig?.apiAddress;\n\n  const isFoundEnv =\n    environment && environment in fallbackNetworkConfigurations;\n\n  const fallbackConfig: NetworkType | Record<string, string> = isFoundEnv\n    ? fallbackNetworkConfigurations[environment as EnvironmentsEnum]\n    : {};\n\n  const baseConfig = {\n    ...emptyNetwork,\n    ...fallbackConfig,\n    ...customNetworkConfig\n  };\n\n  const localConfig: NetworkType = {\n    ...baseConfig,\n    apiTimeout: String(baseConfig.apiTimeout)\n  };\n\n  const fallbackApiAddress = fallbackConfig?.apiAddress;\n\n  if (!isFoundEnv && fetchConfigFromServer) {\n    const apiAddress = customNetworkApiAddress || fallbackApiAddress;\n    const dappConfig = await getServerConfiguration(apiAddress);\n\n    const networkConfig = !localConfig.roundDuration\n      ? await getNetworkConfigFromApi(apiAddress)\n      : null;\n\n    if (networkConfig != null) {\n      localConfig.roundDuration = networkConfig.erd_round_duration;\n    }\n\n    if (dappConfig != null) {\n      const apiConfig: NetworkType = {\n        ...localConfig,\n        ...dappConfig,\n        ...customNetworkConfig\n      };\n\n      initializeNetworkConfig(apiConfig);\n      return apiConfig;\n    }\n  }\n\n  initializeNetworkConfig(localConfig);\n  return localConfig;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAwC;AACxC,oCAAuC;AACvC,qBAA8C;AAC9C,0BAA6B;AAG7B,4BAAwC;AAOjC,MAAM,oBAAoB,OAAO;AAAA,EACtC,sBAAsB,CAAC;AAAA,EACvB;AACF,MAAkC;AAChC,QAAM,wBAAwB,CAAC,qBAAqB;AACpD,QAAM,0BAA0B,qBAAqB;AAErD,QAAM,aACJ,eAAe,eAAe;AAEhC,QAAM,iBAAuD,aACzD,6CAA8B,WAA+B,IAC7D,CAAC;AAEL,QAAM,aAAa;AAAA,IACjB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAEA,QAAM,cAA2B;AAAA,IAC/B,GAAG;AAAA,IACH,YAAY,OAAO,WAAW,UAAU;AAAA,EAC1C;AAEA,QAAM,qBAAqB,gBAAgB;AAE3C,MAAI,CAAC,cAAc,uBAAuB;AACxC,UAAM,aAAa,2BAA2B;AAC9C,UAAM,aAAa,UAAM,sDAAuB,UAAU;AAE1D,UAAM,gBAAgB,CAAC,YAAY,gBAC/B,UAAM,wDAAwB,UAAU,IACxC;AAEJ,QAAI,iBAAiB,MAAM;AACzB,kBAAY,gBAAgB,cAAc;AAAA,IAC5C;AAEA,QAAI,cAAc,MAAM;AACtB,YAAM,YAAyB;AAAA,QAC7B,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,MACL;AAEA,yDAAwB,SAAS;AACjC,aAAO;AAAA,IACT;AAAA,EACF;AAEA,qDAAwB,WAAW;AACnC,SAAO;AACT;",
  "names": []
}
