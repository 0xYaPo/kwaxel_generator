"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var accountSelectors_exports = {};
__export(accountSelectors_exports, {
  accountInfoSelector: () => accountInfoSelector,
  accountNonceSelector: () => accountNonceSelector,
  accountSelector: () => accountSelector,
  addressSelector: () => addressSelector,
  isLoggedInSelector: () => isLoggedInSelector,
  ledgerAccountSelector: () => ledgerAccountSelector,
  websocketEventSelector: () => websocketEventSelector
});
module.exports = __toCommonJS(accountSelectors_exports);
var import_emptyAccount = require("../../store/slices/account/emptyAccount");
const privateAccountInfoSelector = ({ account }) => account;
const accountSelector = ({ account }) => account.address && account.address in account.accounts ? account.accounts[account.address] : import_emptyAccount.emptyAccount;
const accountInfoSelector = (state) => {
  const { accounts, ...info } = privateAccountInfoSelector(state);
  const account = accountSelector(state);
  return { ...info, address: account.address, account };
};
const addressSelector = ({ account: { address } }) => address;
const websocketEventSelector = ({
  account: { websocketEvent }
}) => websocketEvent;
const accountNonceSelector = (store) => accountSelector(store)?.nonce || 0;
const isLoggedInSelector = (store) => {
  const address = addressSelector(store);
  const account = accountSelector(store);
  return Boolean(address && account?.address === address);
};
const ledgerAccountSelector = ({
  account: { ledgerAccount }
}) => ledgerAccount;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  accountInfoSelector,
  accountNonceSelector,
  accountSelector,
  addressSelector,
  isLoggedInSelector,
  ledgerAccountSelector,
  websocketEventSelector
});
//# sourceMappingURL=accountSelectors.cjs.map
