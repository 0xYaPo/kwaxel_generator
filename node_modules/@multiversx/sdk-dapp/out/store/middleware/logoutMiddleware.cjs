"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var logoutMiddleware_exports = {};
__export(logoutMiddleware_exports, {
  getNewLoginExpiresTimestamp: () => getNewLoginExpiresTimestamp,
  logoutMiddleware: () => logoutMiddleware,
  resetStore: () => resetStore,
  setLoginExpiresAt: () => setLoginExpiresAt
});
module.exports = __toCommonJS(logoutMiddleware_exports);
var import_sdkCore = require("../../lib/sdkCore");
var import_loginInfoActions = require("../../store/actions/loginInfo/loginInfoActions");
var import_selectors = require("../../store/selectors");
var import_accountSlice = require("../../store/slices/account/accountSlice");
var import_loginInfoSlice = require("../../store/slices/loginInfo/loginInfoSlice");
var import_toastSlice = require("../../store/slices/toast/toastSlice");
var import_transactionsSlice = require("../../store/slices/transactions/transactionsSlice");
var import_store = require("../../store/store");
const resetStore = (store) => {
  store.account = import_accountSlice.initialState;
  store.loginInfo = import_loginInfoSlice.initialState;
  store.transactions = import_transactionsSlice.initialState;
  store.toasts = import_toastSlice.initialState;
};
function getNewLoginExpiresTimestamp() {
  return (/* @__PURE__ */ new Date()).setHours((/* @__PURE__ */ new Date()).getHours() + 24);
}
function setLoginExpiresAt(expiresAt) {
  if (expiresAt == null) {
    (0, import_loginInfoActions.removeLoginExpiresAt)();
    return;
  }
  (0, import_loginInfoActions.addLoginExpiresAt)(expiresAt);
}
const logoutMiddleware = (state) => {
  const isLoggedIn = (0, import_selectors.isLoggedInSelector)(state);
  const loginTimestamp = (0, import_selectors.loginExpiresAtSelector)(state);
  const { address, publicKey } = (0, import_selectors.accountInfoSelector)(state);
  if (address && publicKey !== new import_sdkCore.Address(address).toHex()) {
    resetStore(state);
  }
  if (!isLoggedIn) {
    return;
  }
  if (loginTimestamp == null) {
    setLoginExpiresAt(getNewLoginExpiresTimestamp());
    return;
  }
  const now = Date.now();
  const isExpired = loginTimestamp - now < 0;
  if (isExpired) {
    setLoginExpiresAt(null);
    (0, import_store.getStore)().setState(resetStore);
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getNewLoginExpiresTimestamp,
  logoutMiddleware,
  resetStore,
  setLoginExpiresAt
});
//# sourceMappingURL=logoutMiddleware.cjs.map
