"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var network_constants_exports = {};
__export(network_constants_exports, {
  DEVNET_CHAIN_ID: () => DEVNET_CHAIN_ID,
  DEVNET_EGLD_LABEL: () => DEVNET_EGLD_LABEL,
  MAINNET_CHAIN_ID: () => MAINNET_CHAIN_ID,
  MAINNET_EGLD_LABEL: () => MAINNET_EGLD_LABEL,
  MULTIVERSX_ORIGIN: () => MULTIVERSX_ORIGIN,
  TESTNET_CHAIN_ID: () => TESTNET_CHAIN_ID,
  TESTNET_EGLD_LABEL: () => TESTNET_EGLD_LABEL,
  TIMEOUT: () => TIMEOUT,
  chainIdByEnvironment: () => chainIdByEnvironment,
  chainIdToEnvironment: () => chainIdToEnvironment,
  fallbackNetworkConfigurations: () => fallbackNetworkConfigurations
});
module.exports = __toCommonJS(network_constants_exports);
var import_enums = require("../types/enums.types");
const fallbackNetworkConfigurations = {
  devnet: {
    id: "devnet",
    chainId: "D",
    name: "Devnet",
    egldLabel: "xEGLD",
    decimals: "18",
    digits: "4",
    gasPerDataByte: "1500",
    walletAddress: "https://devnet-wallet.multiversx.com",
    iframeWalletAddress: "https://devnet-iframe-wallet.multiversx.com",
    xAliasAddress: "https://devnet.xalias.com",
    apiAddress: "https://devnet-api.multiversx.com",
    explorerAddress: "http://devnet-explorer.multiversx.com",
    apiTimeout: "4000",
    roundDuration: 6e3
  },
  testnet: {
    id: "testnet",
    chainId: "T",
    name: "Testnet",
    egldLabel: "xEGLD",
    decimals: "18",
    digits: "4",
    gasPerDataByte: "1500",
    walletAddress: "https://testnet-wallet.multiversx.com",
    iframeWalletAddress: "https://testnet-iframe-wallet.multiversx.com",
    xAliasAddress: "https://testnet.xalias.com",
    apiAddress: "https://testnet-api.multiversx.com",
    explorerAddress: "http://testnet-explorer.multiversx.com",
    apiTimeout: "4000",
    roundDuration: 6e3
  },
  mainnet: {
    id: "mainnet",
    chainId: "1",
    name: "Mainnet",
    egldLabel: "EGLD",
    decimals: "18",
    digits: "4",
    gasPerDataByte: "1500",
    walletAddress: "https://wallet.multiversx.com",
    iframeWalletAddress: "https://iframe-wallet.multiversx.com",
    xAliasAddress: "https://xalias.com",
    apiAddress: "https://api.multiversx.com",
    explorerAddress: "https://explorer.multiversx.com",
    apiTimeout: "4000",
    roundDuration: 6e3
  }
};
const { chainId: DEVNET_CHAIN_ID, egldLabel: DEVNET_EGLD_LABEL } = fallbackNetworkConfigurations[import_enums.EnvironmentsEnum.devnet];
const { chainId: TESTNET_CHAIN_ID, egldLabel: TESTNET_EGLD_LABEL } = fallbackNetworkConfigurations[import_enums.EnvironmentsEnum.testnet];
const { chainId: MAINNET_CHAIN_ID, egldLabel: MAINNET_EGLD_LABEL } = fallbackNetworkConfigurations[import_enums.EnvironmentsEnum.mainnet];
const chainIdByEnvironment = {
  [import_enums.EnvironmentsEnum.devnet]: DEVNET_CHAIN_ID,
  [import_enums.EnvironmentsEnum.testnet]: TESTNET_CHAIN_ID,
  [import_enums.EnvironmentsEnum.mainnet]: MAINNET_CHAIN_ID
};
const chainIdToEnvironment = {
  [DEVNET_CHAIN_ID]: import_enums.EnvironmentsEnum.devnet,
  [TESTNET_CHAIN_ID]: import_enums.EnvironmentsEnum.testnet,
  [MAINNET_CHAIN_ID]: import_enums.EnvironmentsEnum.mainnet
};
const MULTIVERSX_ORIGIN = "multiversx://";
const TIMEOUT = 6e3;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  DEVNET_CHAIN_ID,
  DEVNET_EGLD_LABEL,
  MAINNET_CHAIN_ID,
  MAINNET_EGLD_LABEL,
  MULTIVERSX_ORIGIN,
  TESTNET_CHAIN_ID,
  TESTNET_EGLD_LABEL,
  TIMEOUT,
  chainIdByEnvironment,
  chainIdToEnvironment,
  fallbackNetworkConfigurations
});
//# sourceMappingURL=network.constants.cjs.map
