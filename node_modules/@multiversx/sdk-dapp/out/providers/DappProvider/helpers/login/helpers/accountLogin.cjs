"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var accountLogin_exports = {};
__export(accountLogin_exports, {
  accountLogin: () => accountLogin
});
module.exports = __toCommonJS(accountLogin_exports);
var import_getLatestNonce = require("../../../../../methods/account/getLatestNonce");
var import_setGasStationMetadata = require("../../../../../methods/initApp/gastStationMetadata/setGasStationMetadata");
var import_registerWebsocket = require("../../../../../methods/initApp/websocket/registerWebsocket");
var import_trackTransactions = require("../../../../../methods/trackTransactions/trackTransactions");
var import_actions = require("../../../../../store/actions");
var import_account = require("../../../../../store/actions/account");
var import_fetchAccount = require("../../../../../utils/account/fetchAccount");
var import_trimUsernameDomain = require("../../../../../utils/account/trimUsernameDomain");
async function accountLogin({
  address,
  provider,
  apiAddress
}) {
  const account = await (0, import_fetchAccount.fetchAccount)({
    address,
    baseURL: apiAddress
  });
  if (!account) {
    throw new Error("Account not found");
  }
  (0, import_actions.loginAction)({
    address,
    providerType: provider.getType()
  });
  const newAccount = {
    ...account,
    username: (0, import_trimUsernameDomain.trimUsernameDomain)(account.username),
    nonce: (0, import_getLatestNonce.getLatestNonce)(account)
  };
  (0, import_account.setAccount)(newAccount);
  await (0, import_registerWebsocket.registerWebsocketListener)(address);
  (0, import_trackTransactions.trackTransactions)();
  if (account.shard != null) {
    await (0, import_setGasStationMetadata.setGasStationMetadata)({
      shard: Number(account.shard),
      apiAddress
    });
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  accountLogin
});
//# sourceMappingURL=accountLogin.cjs.map
