"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var verifyMessage_exports = {};
__export(verifyMessage_exports, {
  verifyMessage: () => verifyMessage
});
module.exports = __toCommonJS(verifyMessage_exports);
var import_sdkCore = require("../../../../lib/sdkCore");
var import_getVerifier = require("./getVerifier");
async function verifyMessage(signedMessage) {
  try {
    const { message, address, signature } = JSON.parse(signedMessage);
    const decodedMessage = Buffer.from(message.replace("0x", ""), "hex");
    const decodedSignature = Buffer.from(signature.replace("0x", ""), "hex");
    const bech32Address = new import_sdkCore.Address(address);
    const verifier = (0, import_getVerifier.getVerifier)(address);
    const messageComputer = new import_sdkCore.MessageComputer();
    const msg = new import_sdkCore.Message({
      address: bech32Address,
      data: decodedMessage,
      signature: decodedSignature
    });
    const serializedMessage = messageComputer.computeBytesForVerifying(msg);
    const isVerified = await verifier.verify(
      serializedMessage,
      decodedSignature
    );
    return {
      isVerified,
      message: decodedMessage.toString(),
      address
    };
  } catch {
    return {
      isVerified: false,
      message: "",
      address: ""
    };
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  verifyMessage
});
//# sourceMappingURL=verifyMessage.cjs.map
