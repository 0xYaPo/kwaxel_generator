{
  "version": 3,
  "sources": ["../../../../../src/providers/DappProvider/helpers/signMessage/verifyMessage.ts"],
  "sourcesContent": ["import { Address, Message, MessageComputer } from 'lib/sdkCore';\nimport { getVerifier } from './getVerifier';\n\nexport type VerifyMessageReturnType = {\n  isVerified: boolean;\n  message: string;\n  address: string;\n};\n\nexport async function verifyMessage(\n  signedMessage: string\n): Promise<VerifyMessageReturnType> {\n  try {\n    const { message, address, signature } = JSON.parse(signedMessage);\n\n    const decodedMessage = Buffer.from(message.replace('0x', ''), 'hex');\n    const decodedSignature = Buffer.from(signature.replace('0x', ''), 'hex');\n    const bech32Address = new Address(address);\n\n    const verifier = getVerifier(address);\n\n    const messageComputer = new MessageComputer();\n\n    const msg = new Message({\n      address: bech32Address,\n      data: decodedMessage,\n      signature: decodedSignature\n    });\n\n    const serializedMessage = messageComputer.computeBytesForVerifying(msg);\n\n    const isVerified = await verifier.verify(\n      serializedMessage,\n      decodedSignature\n    );\n\n    return {\n      isVerified,\n      message: decodedMessage.toString(),\n      address\n    };\n  } catch {\n    return {\n      isVerified: false,\n      message: '',\n      address: ''\n    };\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkD;AAClD,yBAA4B;AAQ5B,eAAsB,cACpB,eACkC;AAClC,MAAI;AACF,UAAM,EAAE,SAAS,SAAS,UAAU,IAAI,KAAK,MAAM,aAAa;AAEhE,UAAM,iBAAiB,OAAO,KAAK,QAAQ,QAAQ,MAAM,EAAE,GAAG,KAAK;AACnE,UAAM,mBAAmB,OAAO,KAAK,UAAU,QAAQ,MAAM,EAAE,GAAG,KAAK;AACvE,UAAM,gBAAgB,IAAI,uBAAQ,OAAO;AAEzC,UAAM,eAAW,gCAAY,OAAO;AAEpC,UAAM,kBAAkB,IAAI,+BAAgB;AAE5C,UAAM,MAAM,IAAI,uBAAQ;AAAA,MACtB,SAAS;AAAA,MACT,MAAM;AAAA,MACN,WAAW;AAAA,IACb,CAAC;AAED,UAAM,oBAAoB,gBAAgB,yBAAyB,GAAG;AAEtE,UAAM,aAAa,MAAM,SAAS;AAAA,MAChC;AAAA,MACA;AAAA,IACF;AAEA,WAAO;AAAA,MACL;AAAA,MACA,SAAS,eAAe,SAAS;AAAA,MACjC;AAAA,IACF;AAAA,EACF,QAAQ;AACN,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,IACX;AAAA,EACF;AACF;",
  "names": []
}
