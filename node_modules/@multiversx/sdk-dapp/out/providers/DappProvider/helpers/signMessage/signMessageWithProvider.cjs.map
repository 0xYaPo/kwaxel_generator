{
  "version": 3,
  "sources": ["../../../../../src/providers/DappProvider/helpers/signMessage/signMessageWithProvider.ts"],
  "sourcesContent": ["import { Message, Address } from 'lib/sdkCore';\nimport { getAddress } from 'methods/account/getAddress';\nimport { IProvider } from 'providers/types/providerFactory.types';\n\nexport type SignMessageType = {\n  provider: IProvider;\n  message: Message;\n  options?: {\n    hasConsentPopup?: boolean;\n  };\n};\n\nexport async function signMessageWithProvider({\n  message,\n  provider,\n  options\n}: SignMessageType): Promise<Message | null> {\n  const address = getAddress();\n\n  const messageToSign = new Message({\n    address: new Address(address),\n    data: message.data\n  });\n\n  const signedMessage = await provider.signMessage(messageToSign, options);\n\n  return signedMessage;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiC;AACjC,wBAA2B;AAW3B,eAAsB,wBAAwB;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AACF,GAA6C;AAC3C,QAAM,cAAU,8BAAW;AAE3B,QAAM,gBAAgB,IAAI,uBAAQ;AAAA,IAChC,SAAS,IAAI,uBAAQ,OAAO;AAAA,IAC5B,MAAM,QAAQ;AAAA,EAChB,CAAC;AAED,QAAM,gBAAgB,MAAM,SAAS,YAAY,eAAe,OAAO;AAEvE,SAAO;AACT;",
  "names": []
}
