{
  "version": 3,
  "sources": ["../../../../src/providers/strategies/helpers/getPendingTransactionsHandlers.ts"],
  "sourcesContent": ["import { PendingTransactionsStateManager } from 'managers/internal/PendingTransactionsStateManager/PendingTransactionsStateManager';\n\nexport async function getPendingTransactionsHandlers<T>(props?: {\n  cancelAction?: () => Promise<T> | undefined;\n}) {\n  const pendingTransactionsStateManager =\n    PendingTransactionsStateManager.getInstance();\n  await pendingTransactionsStateManager.openUI();\n\n  const onClose = async ({\n    shouldCancelAction = true\n  }: { shouldCancelAction?: boolean } = {}) => {\n    pendingTransactionsStateManager.closeUI();\n\n    if (shouldCancelAction && props?.cancelAction) {\n      await props.cancelAction();\n    }\n  };\n\n  return { manager: pendingTransactionsStateManager, onClose };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAgD;AAEhD,eAAsB,+BAAkC,OAErD;AACD,QAAM,kCACJ,uEAAgC,YAAY;AAC9C,QAAM,gCAAgC,OAAO;AAE7C,QAAM,UAAU,OAAO;AAAA,IACrB,qBAAqB;AAAA,EACvB,IAAsC,CAAC,MAAM;AAC3C,oCAAgC,QAAQ;AAExC,QAAI,sBAAsB,OAAO,cAAc;AAC7C,YAAM,MAAM,aAAa;AAAA,IAC3B;AAAA,EACF;AAEA,SAAO,EAAE,SAAS,iCAAiC,QAAQ;AAC7D;",
  "names": []
}
