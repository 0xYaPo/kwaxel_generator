export declare const mockGetCommonDataInput: {
    allTransactions: {
        transaction: {
            nonce: number;
            value: string;
            receiver: string;
            sender: string;
            gasPrice: number;
            gasLimit: number;
            data: string;
            chainID: string;
            version: number;
        };
        transactionIndex: number;
        multiTxData: string;
        needsSigning: boolean;
    }[];
    currentScreenIndex: number;
    egldLabel: string;
    network: {
        id: string;
        chainId: string;
        name: string;
        egldLabel: string;
        decimals: string;
        digits: string;
        gasPerDataByte: string;
        walletAddress: string;
        apiAddress: string;
        explorerAddress: string;
        apiTimeout: string;
        roundDuration: number;
        iframeWalletAddress: string;
        xAliasAddress: string;
    };
    gasPriceData: {
        ppu: number;
        initialGasPrice: number;
    };
    price: number;
    address: string;
    shard: number;
    signedIndexes: never[];
    parsedTransactionsByDataField: {
        '5745474c442d613238633539@@0de0b6b3a7640000': {
            tokenId: string;
            amount: string;
            type: string;
            nonce: string;
            multiTxData: string;
            receiver: string;
        };
        '4d45582d613635396430@@e177704bc43f9bee3106': {
            tokenId: string;
            amount: string;
            type: string;
            nonce: string;
            multiTxData: string;
            receiver: string;
        };
        '6164644c6971756964697479@0dbd2fc137a30000@df363e8872ed0d9235a7': {
            tokenId: string;
            amount: string;
            type: string;
            nonce: string;
            multiTxData: string;
            receiver: string;
        };
    };
};
