{
  "version": 3,
  "sources": ["../../../../../../../src/providers/strategies/helpers/signTransactions/helpers/guardTransactions/guardTransactions.ts"],
  "sourcesContent": ["import { Transaction } from 'lib/sdkCore';\nimport { getAccount } from 'methods/account/getAccount';\nimport { networkSelector } from 'store/selectors';\nimport { getState } from 'store/store';\nimport { getCrossWindowProvider } from './getCrossWindowProvider';\nimport { getTransactionsNeedGuardianSigning } from './getTransactionsNeedGuardianSigning';\n\n/*\n  Performs guard transactions if needed\n*/\nexport const guardTransactions = async (transactions: Transaction[]) => {\n  const { isGuarded } = getAccount();\n\n  const needs2FAsigning = getTransactionsNeedGuardianSigning({\n    isGuarded,\n    transactions\n  });\n\n  if (!needs2FAsigning) {\n    return transactions;\n  }\n\n  const sender = transactions[0].sender.toBech32();\n  const { walletAddress } = networkSelector(getState());\n\n  const provider = await getCrossWindowProvider({\n    address: sender,\n    walletUrl: walletAddress\n  });\n\n  const guardedTransactions = await provider?.guardTransactions(transactions);\n  return guardedTransactions || [];\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAA2B;AAC3B,uBAAgC;AAChC,mBAAyB;AACzB,oCAAuC;AACvC,gDAAmD;AAK5C,MAAM,oBAAoB,OAAO,iBAAgC;AACtE,QAAM,EAAE,UAAU,QAAI,8BAAW;AAEjC,QAAM,sBAAkB,8EAAmC;AAAA,IACzD;AAAA,IACA;AAAA,EACF,CAAC;AAED,MAAI,CAAC,iBAAiB;AACpB,WAAO;AAAA,EACT;AAEA,QAAM,SAAS,aAAa,CAAC,EAAE,OAAO,SAAS;AAC/C,QAAM,EAAE,cAAc,QAAI,sCAAgB,uBAAS,CAAC;AAEpD,QAAM,WAAW,UAAM,sDAAuB;AAAA,IAC5C,SAAS;AAAA,IACT,WAAW;AAAA,EACb,CAAC;AAED,QAAM,sBAAsB,MAAM,UAAU,kBAAkB,YAAY;AAC1E,SAAO,uBAAuB,CAAC;AACjC;",
  "names": []
}
