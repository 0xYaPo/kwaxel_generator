{
  "version": 3,
  "sources": ["../../../../../../src/providers/strategies/helpers/signTransactions/helpers/getFeeData.ts"],
  "sourcesContent": ["import { GAS_PER_DATA_BYTE, GAS_PRICE_MODIFIER } from 'constants/mvx.constants';\nimport { Transaction } from 'lib/sdkCore';\nimport { formatAmount } from 'lib/sdkDappUtils';\nimport { calculateFeeInFiat } from './calculateFeeInFiat';\nimport { calculateFeeLimit } from './calculateFeeLimit';\n\nexport const getFeeData = ({\n  transaction,\n  price\n}: {\n  transaction: Transaction;\n  price?: number;\n}) => {\n  const feeLimit = calculateFeeLimit({\n    from: transaction.sender.toBech32(),\n    to: transaction.receiver.toBech32(),\n    gasPerDataByte: String(GAS_PER_DATA_BYTE),\n    gasPriceModifier: String(GAS_PRICE_MODIFIER),\n    gasLimit: transaction.gasLimit.valueOf().toString(),\n    gasPrice: transaction.gasPrice.valueOf().toString(),\n    data: transaction.data.toString(),\n    chainId: transaction.chainID.valueOf().toString()\n  });\n\n  const feeLimitFormatted = formatAmount({\n    input: feeLimit,\n    showLastNonZeroDecimal: true\n  });\n\n  const feeInFiatLimit = price\n    ? calculateFeeInFiat({\n        feeLimit,\n        egldPriceInUsd: price,\n        hideEqualSign: true\n      })\n    : null;\n\n  return { feeLimitFormatted, feeInFiatLimit, feeLimit };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsD;AAEtD,0BAA6B;AAC7B,gCAAmC;AACnC,+BAAkC;AAE3B,MAAM,aAAa,CAAC;AAAA,EACzB;AAAA,EACA;AACF,MAGM;AACJ,QAAM,eAAW,4CAAkB;AAAA,IACjC,MAAM,YAAY,OAAO,SAAS;AAAA,IAClC,IAAI,YAAY,SAAS,SAAS;AAAA,IAClC,gBAAgB,OAAO,4BAAiB;AAAA,IACxC,kBAAkB,OAAO,6BAAkB;AAAA,IAC3C,UAAU,YAAY,SAAS,QAAQ,EAAE,SAAS;AAAA,IAClD,UAAU,YAAY,SAAS,QAAQ,EAAE,SAAS;AAAA,IAClD,MAAM,YAAY,KAAK,SAAS;AAAA,IAChC,SAAS,YAAY,QAAQ,QAAQ,EAAE,SAAS;AAAA,EAClD,CAAC;AAED,QAAM,wBAAoB,kCAAa;AAAA,IACrC,OAAO;AAAA,IACP,wBAAwB;AAAA,EAC1B,CAAC;AAED,QAAM,iBAAiB,YACnB,8CAAmB;AAAA,IACjB;AAAA,IACA,gBAAgB;AAAA,IAChB,eAAe;AAAA,EACjB,CAAC,IACD;AAEJ,SAAO,EAAE,mBAAmB,gBAAgB,SAAS;AACvD;",
  "names": []
}
