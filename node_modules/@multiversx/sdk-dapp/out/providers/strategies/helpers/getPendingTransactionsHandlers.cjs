"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getPendingTransactionsHandlers_exports = {};
__export(getPendingTransactionsHandlers_exports, {
  getPendingTransactionsHandlers: () => getPendingTransactionsHandlers
});
module.exports = __toCommonJS(getPendingTransactionsHandlers_exports);
var import_PendingTransactionsStateManager = require("../../../managers/internal/PendingTransactionsStateManager/PendingTransactionsStateManager");
async function getPendingTransactionsHandlers(props) {
  const pendingTransactionsStateManager = import_PendingTransactionsStateManager.PendingTransactionsStateManager.getInstance();
  await pendingTransactionsStateManager.openUI();
  const onClose = async ({
    shouldCancelAction = true
  } = {}) => {
    pendingTransactionsStateManager.closeUI();
    if (shouldCancelAction && props?.cancelAction) {
      await props.cancelAction();
    }
  };
  return { manager: pendingTransactionsStateManager, onClose };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getPendingTransactionsHandlers
});
//# sourceMappingURL=getPendingTransactionsHandlers.cjs.map
