"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var walletConnect_types_exports = {};
__export(walletConnect_types_exports, {
  WalletConnectEventsEnum: () => WalletConnectEventsEnum,
  WalletConnectV2Error: () => WalletConnectV2Error
});
module.exports = __toCommonJS(walletConnect_types_exports);
var WalletConnectV2Error = /* @__PURE__ */ ((WalletConnectV2Error2) => {
  WalletConnectV2Error2["invalidAddress"] = "Invalid address";
  WalletConnectV2Error2["invalidConfig"] = "Invalid WalletConnect setup";
  WalletConnectV2Error2["invalidTopic"] = "Expired connection";
  WalletConnectV2Error2["sessionExpired"] = "Unable to connect to existing session";
  WalletConnectV2Error2["connectError"] = "Unable to connect";
  WalletConnectV2Error2["userRejected"] = "User rejected connection proposal";
  WalletConnectV2Error2["userRejectedExisting"] = "User rejected existing connection proposal";
  WalletConnectV2Error2["errorLogout"] = "Unable to remove existing pairing";
  WalletConnectV2Error2["invalidChainID"] = "Invalid chainID";
  WalletConnectV2Error2["actionError"] = "Unable to send event";
  return WalletConnectV2Error2;
})(WalletConnectV2Error || {});
var WalletConnectEventsEnum = /* @__PURE__ */ ((WalletConnectEventsEnum2) => {
  WalletConnectEventsEnum2["CLOSE"] = "CLOSE";
  WalletConnectEventsEnum2["DATA_UPDATE"] = "DATA_UPDATE";
  WalletConnectEventsEnum2["UI_DISCONNECTED"] = "UI_DISCONNECTED";
  return WalletConnectEventsEnum2;
})(WalletConnectEventsEnum || {});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  WalletConnectEventsEnum,
  WalletConnectV2Error
});
//# sourceMappingURL=walletConnect.types.cjs.map
