"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getLedgerErrorCodes_exports = {};
__export(getLedgerErrorCodes_exports, {
  getLedgerErrorCodes: () => getLedgerErrorCodes
});
module.exports = __toCommonJS(getLedgerErrorCodes_exports);
var import_ledger = require("../../../../constants/ledger.constants");
const ledgerAppErrorText = "Check if the MultiversX app is open on Ledger";
const notConnectedCode = 28161;
const wrongClaCode = 28160;
const inactiveAppCodes = [notConnectedCode, wrongClaCode];
function getLedgerErrorCodes(err) {
  let errorMessage = null;
  if (err?.statusCode in import_ledger.ledgerErrorCodes) {
    const statusCode = err?.statusCode;
    const { message } = import_ledger.ledgerErrorCodes[statusCode];
    errorMessage = inactiveAppCodes.includes(statusCode) ? ledgerAppErrorText : message;
  }
  if (!errorMessage && String(err).includes("The device was disconnected.")) {
    errorMessage = "The device was disconnected";
  }
  return {
    errorMessage,
    defaultErrorMessage: ledgerAppErrorText
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getLedgerErrorCodes
});
//# sourceMappingURL=getLedgerErrorCodes.cjs.map
