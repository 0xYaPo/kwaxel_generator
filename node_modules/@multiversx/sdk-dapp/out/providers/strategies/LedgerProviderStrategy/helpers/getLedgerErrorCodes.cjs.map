{
  "version": 3,
  "sources": ["../../../../../src/providers/strategies/LedgerProviderStrategy/helpers/getLedgerErrorCodes.ts"],
  "sourcesContent": ["import { ledgerErrorCodes } from 'constants/ledger.constants';\n\nconst ledgerAppErrorText = 'Check if the MultiversX app is open on Ledger';\nconst notConnectedCode = 0x6e01;\nconst wrongClaCode = 0x6e00;\nconst inactiveAppCodes = [notConnectedCode, wrongClaCode];\n\nexport function getLedgerErrorCodes(err?: any) {\n  let errorMessage: string | null = null;\n  if (err?.statusCode in ledgerErrorCodes) {\n    const statusCode: keyof typeof ledgerErrorCodes = err?.statusCode;\n    const { message } = ledgerErrorCodes[statusCode];\n    errorMessage = inactiveAppCodes.includes(statusCode)\n      ? ledgerAppErrorText\n      : message;\n  }\n\n  if (!errorMessage && String(err).includes('The device was disconnected.')) {\n    errorMessage = 'The device was disconnected';\n  }\n\n  return {\n    errorMessage,\n    defaultErrorMessage: ledgerAppErrorText\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiC;AAEjC,MAAM,qBAAqB;AAC3B,MAAM,mBAAmB;AACzB,MAAM,eAAe;AACrB,MAAM,mBAAmB,CAAC,kBAAkB,YAAY;AAEjD,SAAS,oBAAoB,KAAW;AAC7C,MAAI,eAA8B;AAClC,MAAI,KAAK,cAAc,gCAAkB;AACvC,UAAM,aAA4C,KAAK;AACvD,UAAM,EAAE,QAAQ,IAAI,+BAAiB,UAAU;AAC/C,mBAAe,iBAAiB,SAAS,UAAU,IAC/C,qBACA;AAAA,EACN;AAEA,MAAI,CAAC,gBAAgB,OAAO,GAAG,EAAE,SAAS,8BAA8B,GAAG;AACzE,mBAAe;AAAA,EACjB;AAEA,SAAO;AAAA,IACL;AAAA,IACA,qBAAqB;AAAA,EACvB;AACF;",
  "names": []
}
