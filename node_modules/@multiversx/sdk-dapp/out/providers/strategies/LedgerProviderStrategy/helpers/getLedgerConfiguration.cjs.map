{
  "version": 3,
  "sources": ["../../../../../src/providers/strategies/LedgerProviderStrategy/helpers/getLedgerConfiguration.ts"],
  "sourcesContent": ["import { HWProvider } from '@multiversx/sdk-hw-provider';\nimport { IHWWalletApp } from '@multiversx/sdk-hw-provider/out/interface';\n\nimport { LEDGER_CONTRACT_DATA_ENABLED_VALUE } from 'constants/index';\n\nexport async function getLedgerConfiguration(initializedHwWalletP: HWProvider) {\n  if (!initializedHwWalletP.isInitialized()) {\n    throw new Error('Unable to get version. Provider not initialized');\n  }\n  const hwApp: IHWWalletApp = (initializedHwWalletP as any).hwApp;\n  const { contractData, version } = await hwApp.getAppConfiguration();\n  const dataEnabled = contractData === LEDGER_CONTRACT_DATA_ENABLED_VALUE;\n  return { version, dataEnabled };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,uBAAmD;AAEnD,eAAsB,uBAAuB,sBAAkC;AAC7E,MAAI,CAAC,qBAAqB,cAAc,GAAG;AACzC,UAAM,IAAI,MAAM,iDAAiD;AAAA,EACnE;AACA,QAAM,QAAuB,qBAA6B;AAC1D,QAAM,EAAE,cAAc,QAAQ,IAAI,MAAM,MAAM,oBAAoB;AAClE,QAAM,cAAc,iBAAiB;AACrC,SAAO,EAAE,SAAS,YAAY;AAChC;",
  "names": []
}
