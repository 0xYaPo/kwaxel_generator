"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var restoreProvider_exports = {};
__export(restoreProvider_exports, {
  restoreProvider: () => restoreProvider
});
module.exports = __toCommonJS(restoreProvider_exports);
var import_sdkWebviewProvider = require("../../lib/sdkWebviewProvider");
var import_providerFactory = require("../../providers/types/providerFactory.types");
var import_selectors = require("../../store/selectors");
var import_store = require("../../store/store");
var import_getIsInIframe = require("../../utils/window/getIsInIframe");
var import_accountProvider = require("./accountProvider");
var import_ProviderFactory = require("../ProviderFactory");
async function restoreProvider() {
  const isMobile = (0, import_sdkWebviewProvider.isMobileWebview)();
  const isInIframe = (0, import_getIsInIframe.getIsInIframe)();
  const type = isInIframe || isMobile ? import_providerFactory.ProviderTypeEnum.webview : (0, import_selectors.providerTypeSelector)((0, import_store.getState)());
  if (!type) {
    return;
  }
  const provider = await import_ProviderFactory.ProviderFactory.create({
    type
  });
  if (!provider) {
    throw new Error("Provider not found");
  }
  if (isMobile || type === import_providerFactory.ProviderTypeEnum.webview && provider.isInitialized()) {
    await provider.login();
  }
  (0, import_accountProvider.setAccountProvider)(provider);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  restoreProvider
});
//# sourceMappingURL=restoreProvider.cjs.map
