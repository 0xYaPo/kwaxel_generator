"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var server_exports = {};
__export(server_exports, {
  mockResponse: () => mockResponse,
  rest: () => import_msw.rest,
  server: () => server
});
module.exports = __toCommonJS(server_exports);
var import_msw = require("msw");
var import_node = require("msw/node");
var import_accountConfig = require("./accountConfig");
var import_data = require("./data");
var import_wrapEgldContract = require("./data/wrapEgldContract");
const mockResponse = (body) => (_req, res, ctx) => {
  return res(ctx.status(200), ctx.json(body));
};
const handlers = [
  import_msw.rest.get(`${import_accountConfig.testNetwork.apiAddress}/dapp/config`, mockResponse(import_data.dappConfig)),
  import_msw.rest.get(
    `${import_accountConfig.testNetwork.apiAddress}/network/config`,
    mockResponse(import_data.networkConfig)
  ),
  import_msw.rest.get(
    `https://${import_data.websocketConfig.url}/socket.io/`,
    mockResponse(import_data.socketResponse)
  ),
  import_msw.rest.get(
    `${import_accountConfig.testNetwork.apiAddress}/websocket/config`,
    mockResponse(import_data.websocketConfig)
  ),
  import_msw.rest.get(
    `${import_accountConfig.testNetwork.apiAddress}/accounts/${import_accountConfig.testAddress}`,
    mockResponse(import_data.account)
  ),
  import_msw.rest.get(
    `${import_accountConfig.testNetwork.apiAddress}/accounts/${import_wrapEgldContract.wrapEgldContract.address}`,
    mockResponse(import_wrapEgldContract.wrapEgldContract)
  ),
  import_msw.rest.get(`${import_accountConfig.testNetwork.apiAddress}/blocks`, mockResponse(import_data.blocks))
];
const server = (0, import_node.setupServer)(...handlers);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  mockResponse,
  rest,
  server
});
//# sourceMappingURL=server.cjs.map
