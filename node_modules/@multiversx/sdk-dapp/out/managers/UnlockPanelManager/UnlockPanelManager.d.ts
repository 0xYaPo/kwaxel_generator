import { MvxUnlockPanel } from '../../lib/sdkDappUi';
import { IProviderBase } from '../../providers/types/providerFactory.types';
import { UnlockPanelEventsEnum, UnlockPanelManagerInitParamsType } from './UnlockPanelManager.types';
import { SidePanelBaseManager } from '../internal/SidePanelBaseManager';
interface IUnlockPanelManagerData {
    providers: IProviderBase[] | null;
    walletAddress: string | null;
}
export declare class UnlockPanelManager extends SidePanelBaseManager<MvxUnlockPanel, IUnlockPanelManagerData, UnlockPanelEventsEnum> {
    protected initialData: IUnlockPanelManagerData;
    private static instance;
    private static loginHandler;
    private static onClose;
    private static allowedProviders?;
    constructor();
    static getInstance(): UnlockPanelManager;
    static init(params: UnlockPanelManagerInitParamsType): UnlockPanelManager;
    openUnlockPanel: () => Promise<void>;
    protected setupEventListeners: () => Promise<void>;
    private readonly handleCloseUI;
    private readonly handleLogin;
    private readonly handleCancelLogin;
    private readonly isSimpleLoginCallback;
    private getProvidersList;
}
export {};
