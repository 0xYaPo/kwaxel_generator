import { UITagsEnum } from '../../../constants/UITags.enum';
import { CreateEventBusUIElementType } from '../../../utils/ComponentFactory';
import { UIBaseManager } from '../UIBaseManager/UIBaseManager';
interface ISideManagerUIElement extends CreateEventBusUIElementType {
    closeWithAnimation?: () => Promise<unknown>;
}
export declare abstract class SidePanelBaseManager<TElement extends ISideManagerUIElement, TData extends Record<string, any> | null, TEventEnum extends string> extends UIBaseManager<TElement, TData, TEventEnum> {
    protected isOpen: boolean;
    constructor({ uiDataUpdateEvent, uiTag }: {
        uiTag: UITagsEnum;
        uiDataUpdateEvent: TEventEnum;
    });
    openUI(): Promise<void>;
    destroy(): void;
    closeUI(): void;
    private setIsSidePanelOpen;
}
export {};
