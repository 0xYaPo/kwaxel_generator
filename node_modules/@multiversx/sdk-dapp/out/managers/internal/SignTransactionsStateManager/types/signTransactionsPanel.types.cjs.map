{
  "version": 3,
  "sources": ["../../../../../src/managers/internal/SignTransactionsStateManager/types/signTransactionsPanel.types.ts"],
  "sourcesContent": ["// types here need to be synced with the types in sdk-dapp-ui sign-transactions-modal.types.ts\nimport {\n  DecodedDisplayType,\n  DecodeMethodEnum\n} from 'types/serverTransactions.types';\nimport type { EsdtEnumType, NftEnumType } from 'types/tokens.types';\n\nexport interface ITransactionData {\n  receiver?: string;\n  data?: string;\n  value?: string;\n}\n\nexport type FungibleTransactionType = {\n  amount: string;\n  identifier?: string;\n  imageURL: string;\n};\n\nexport type TokenType = EsdtEnumType | NftEnumType;\n\nexport interface ISignTransactionsPanelCommonData {\n  receiver?: string;\n  receiverIcon?: string;\n  data?: string;\n  gasPrice?: string;\n  decodedData?: Partial<Record<DecodeMethodEnum, DecodedDisplayType>>;\n  /**\n   * ppu - Price Per Unit\n   * a constant that is used to calculate the gas price inside `recommendGasPrice`\n   */\n  ppu?: number;\n  ppuOptions: {\n    label: string;\n    value: number;\n  }[];\n  gasLimit?: string;\n  transactionsCount: number;\n  tokenType?: TokenType;\n  egldLabel: string;\n  feeLimit?: string;\n  feeInFiatLimit?: string | null;\n  currentIndex: number;\n  currentIndexToSign: number;\n  needsSigning?: boolean;\n  isEditable?: boolean;\n  highlight?: string | null;\n  scCall?: string | null;\n  nextUnsignedTxIndex?: number;\n  providerName?: string;\n  address?: string;\n  username?: string;\n  origin?: string;\n  explorerLink?: string;\n}\n\nexport interface ISignTransactionsPanelData {\n  shouldClose?: boolean;\n  isLoading?: boolean;\n  commonData: ISignTransactionsPanelCommonData;\n  tokenTransaction: {\n    identifier?: string;\n    amount: string;\n    usdValue: string;\n  } | null;\n  nftTransaction: FungibleTransactionType | null;\n  sftTransaction: FungibleTransactionType | null;\n}\n\nexport enum SignEventsEnum {\n  CONFIRM = 'CONFIRM_SIGN_TRANSACTIONS', // can be sign or next\n  NEXT = 'NEXT_SIGN_TRANSACTIONS',\n  BACK = 'BACK_SIGN_TRANSACTIONS',\n  DATA_UPDATE = 'DATA_UPDATE_SIGN_TRANSACTIONS',\n  SET_PPU = 'SET_PPU_SIGN_TRANSACTIONS',\n  CLOSE = 'CLOSE_SIGN_TRANSACTIONS'\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAqEO,IAAK,iBAAL,kBAAKA,oBAAL;AACL,EAAAA,gBAAA,aAAU;AACV,EAAAA,gBAAA,UAAO;AACP,EAAAA,gBAAA,UAAO;AACP,EAAAA,gBAAA,iBAAc;AACd,EAAAA,gBAAA,aAAU;AACV,EAAAA,gBAAA,WAAQ;AANE,SAAAA;AAAA,GAAA;",
  "names": ["SignEventsEnum"]
}
