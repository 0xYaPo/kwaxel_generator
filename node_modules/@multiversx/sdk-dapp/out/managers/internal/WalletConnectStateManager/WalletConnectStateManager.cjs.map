{
  "version": 3,
  "sources": ["../../../../src/managers/internal/WalletConnectStateManager/WalletConnectStateManager.ts"],
  "sourcesContent": ["import { UITagsEnum } from 'constants/UITags.enum';\nimport { MvxWalletConnect } from 'lib/sdkDappUi';\nimport { UnlockPanelEventsEnum } from 'managers/UnlockPanelManager/UnlockPanelManager.types';\nimport {\n  WalletConnectEventsEnum,\n  IWalletConnectModalData\n} from 'providers/strategies/WalletConnectProviderStrategy/types/walletConnect.types';\nimport { UIBaseManager } from '../UIBaseManager/UIBaseManager';\n\nexport class WalletConnectStateManager extends UIBaseManager<\n  MvxWalletConnect,\n  IWalletConnectModalData,\n  WalletConnectEventsEnum\n> {\n  private static instance: WalletConnectStateManager;\n\n  protected initialData: IWalletConnectModalData = {\n    wcURI: '',\n    walletConnectDeepLink: ''\n  };\n\n  public static getInstance(): WalletConnectStateManager {\n    if (!WalletConnectStateManager.instance) {\n      WalletConnectStateManager.instance = new WalletConnectStateManager();\n    }\n    return WalletConnectStateManager.instance;\n  }\n\n  constructor() {\n    super({\n      uiDataUpdateEvent: WalletConnectEventsEnum.DATA_UPDATE,\n      uiTag: UITagsEnum.WALLET_CONNECT\n    });\n    this.data = { ...this.initialData };\n  }\n\n  public handleClose(options?: { isLoginFinished?: boolean }) {\n    if (options?.isLoginFinished) {\n      return;\n    }\n\n    if (this.anchor) {\n      this.anchor.dispatchEvent(\n        new CustomEvent(UnlockPanelEventsEnum.ANCHOR_CLOSE, {\n          composed: false,\n          bubbles: false\n        })\n      );\n    } else {\n      this.destroy();\n    }\n  }\n\n  protected async setupEventListeners() {\n    if (!this.eventBus) {\n      return;\n    }\n\n    this.eventBus.subscribe(\n      WalletConnectEventsEnum.CLOSE,\n      this.handleClose.bind(this)\n    );\n\n    this.eventBus.subscribe(\n      WalletConnectEventsEnum.UI_DISCONNECTED,\n      this.destroy.bind(this)\n    );\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAE3B,gCAAsC;AACtC,2BAGO;AACP,2BAA8B;AAEvB,MAAM,kCAAkC,mCAI7C;AAAA,EAeA,cAAc;AACZ,UAAM;AAAA,MACJ,mBAAmB,6CAAwB;AAAA,MAC3C,OAAO,yBAAW;AAAA,IACpB,CAAC;AAhBH,SAAU,cAAuC;AAAA,MAC/C,OAAO;AAAA,MACP,uBAAuB;AAAA,IACzB;AAcE,SAAK,OAAO,EAAE,GAAG,KAAK,YAAY;AAAA,EACpC;AAAA,EAbA,OAAc,cAAyC;AACrD,QAAI,CAAC,0BAA0B,UAAU;AACvC,gCAA0B,WAAW,IAAI,0BAA0B;AAAA,IACrE;AACA,WAAO,0BAA0B;AAAA,EACnC;AAAA,EAUO,YAAY,SAAyC;AAC1D,QAAI,SAAS,iBAAiB;AAC5B;AAAA,IACF;AAEA,QAAI,KAAK,QAAQ;AACf,WAAK,OAAO;AAAA,QACV,IAAI,YAAY,gDAAsB,cAAc;AAAA,UAClD,UAAU;AAAA,UACV,SAAS;AAAA,QACX,CAAC;AAAA,MACH;AAAA,IACF,OAAO;AACL,WAAK,QAAQ;AAAA,IACf;AAAA,EACF;AAAA,EAEA,MAAgB,sBAAsB;AACpC,QAAI,CAAC,KAAK,UAAU;AAClB;AAAA,IACF;AAEA,SAAK,SAAS;AAAA,MACZ,6CAAwB;AAAA,MACxB,KAAK,YAAY,KAAK,IAAI;AAAA,IAC5B;AAEA,SAAK,SAAS;AAAA,MACZ,6CAAwB;AAAA,MACxB,KAAK,QAAQ,KAAK,IAAI;AAAA,IACxB;AAAA,EACF;AACF;",
  "names": []
}
