{
  "version": 3,
  "sources": ["../../../../../src/managers/internal/ToastManager/helpers/LifetimeManager.ts"],
  "sourcesContent": ["import {\n  customToastCloseHandlersDictionary,\n  removeCustomToast,\n  removeTransactionToast\n} from 'store/actions/toasts/toastsActions';\n\ninterface IToastProgressManagerParams {\n  successfulToastLifetime?: number;\n}\n\nconst DEFAULT_SUCCESSFUL_TOAST_LIFETIME = 10_000;\n\nexport class LifetimeManager {\n  private timeoutIntervals: Map<string, ReturnType<typeof setTimeout>> =\n    new Map();\n  private successfulToastLifetime: number = DEFAULT_SUCCESSFUL_TOAST_LIFETIME;\n\n  constructor() {}\n\n  public init({ successfulToastLifetime }: IToastProgressManagerParams) {\n    this.successfulToastLifetime =\n      successfulToastLifetime || DEFAULT_SUCCESSFUL_TOAST_LIFETIME;\n  }\n\n  public start = (toastId: string) => {\n    this.stop(toastId);\n\n    if (this.successfulToastLifetime <= 0) {\n      return;\n    }\n\n    const timeout = setTimeout(() => {\n      removeTransactionToast(toastId);\n    }, this.successfulToastLifetime);\n\n    this.timeoutIntervals.set(toastId, timeout);\n  };\n\n  public startWithCustomDuration = (toastId: string, duration: number) => {\n    this.stop(toastId);\n\n    if (duration <= 0) {\n      return;\n    }\n\n    const timeout = setTimeout(() => {\n      removeCustomToast(toastId);\n      const handleClose = customToastCloseHandlersDictionary[toastId];\n      handleClose?.();\n    }, duration);\n\n    this.timeoutIntervals.set(toastId, timeout);\n  };\n\n  public stop = (toastId: string) => {\n    const timeout = this.timeoutIntervals.get(toastId);\n    if (timeout) {\n      clearTimeout(timeout);\n      this.timeoutIntervals.delete(toastId);\n    }\n  };\n\n  public destroy() {\n    this.timeoutIntervals.forEach((interval) => clearTimeout(interval));\n    this.timeoutIntervals.clear();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAIO;AAMP,MAAM,oCAAoC;AAEnC,MAAM,gBAAgB;AAAA,EAK3B,cAAc;AAJd,SAAQ,mBACN,oBAAI,IAAI;AACV,SAAQ,0BAAkC;AAS1C,SAAO,QAAQ,CAAC,YAAoB;AAClC,WAAK,KAAK,OAAO;AAEjB,UAAI,KAAK,2BAA2B,GAAG;AACrC;AAAA,MACF;AAEA,YAAM,UAAU,WAAW,MAAM;AAC/B,yDAAuB,OAAO;AAAA,MAChC,GAAG,KAAK,uBAAuB;AAE/B,WAAK,iBAAiB,IAAI,SAAS,OAAO;AAAA,IAC5C;AAEA,SAAO,0BAA0B,CAAC,SAAiB,aAAqB;AACtE,WAAK,KAAK,OAAO;AAEjB,UAAI,YAAY,GAAG;AACjB;AAAA,MACF;AAEA,YAAM,UAAU,WAAW,MAAM;AAC/B,oDAAkB,OAAO;AACzB,cAAM,cAAc,wDAAmC,OAAO;AAC9D,sBAAc;AAAA,MAChB,GAAG,QAAQ;AAEX,WAAK,iBAAiB,IAAI,SAAS,OAAO;AAAA,IAC5C;AAEA,SAAO,OAAO,CAAC,YAAoB;AACjC,YAAM,UAAU,KAAK,iBAAiB,IAAI,OAAO;AACjD,UAAI,SAAS;AACX,qBAAa,OAAO;AACpB,aAAK,iBAAiB,OAAO,OAAO;AAAA,MACtC;AAAA,IACF;AAAA,EA3Ce;AAAA,EAER,KAAK,EAAE,wBAAwB,GAAgC;AACpE,SAAK,0BACH,2BAA2B;AAAA,EAC/B;AAAA,EAwCO,UAAU;AACf,SAAK,iBAAiB,QAAQ,CAAC,aAAa,aAAa,QAAQ,CAAC;AAClE,SAAK,iBAAiB,MAAM;AAAA,EAC9B;AACF;",
  "names": []
}
