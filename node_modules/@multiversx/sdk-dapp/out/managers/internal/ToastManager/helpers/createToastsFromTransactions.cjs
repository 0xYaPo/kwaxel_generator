"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var createToastsFromTransactions_exports = {};
__export(createToastsFromTransactions_exports, {
  createToastsFromTransactions: () => createToastsFromTransactions
});
module.exports = __toCommonJS(createToastsFromTransactions_exports);
var import_getEgldLabel = require("../../../../methods/network/getEgldLabel");
var import_getExplorerAddress = require("../../../../methods/network/getExplorerAddress");
var import_transactionStateByStatus = require("../../../../store/actions/transactions/transactionStateByStatus");
var import_helpers = require("../../../../utils/transactions/getTransactionsHistory/helpers");
var import_createTransactionToast = require("./createTransactionToast");
const createToastsFromTransactions = async ({
  toastList,
  transactionsSessions,
  account,
  existingCompletedTransactions = []
}) => {
  const pendingTransactionToasts = [];
  const completedTransactionToasts = [
    ...existingCompletedTransactions
  ];
  const explorerAddress = (0, import_getExplorerAddress.getExplorerAddress)();
  const egldLabel = (0, import_getEgldLabel.getEgldLabel)();
  for (const toast of toastList.transactionToasts) {
    const transactionSession = transactionsSessions[toast.toastId];
    if (!transactionSession?.status) {
      continue;
    }
    const { status, transactions, transactionsDisplayInfo } = transactionSession;
    const interprettedTransactions = await (0, import_helpers.mapServerTransactionsToListItems)({
      transactions,
      address: account.address,
      explorerAddress,
      egldLabel
    });
    const isTimedOut = (0, import_transactionStateByStatus.getIsTransactionTimedOut)(status);
    const isFailed = (0, import_transactionStateByStatus.getIsTransactionFailed)(status);
    const isSuccessful = (0, import_transactionStateByStatus.getIsTransactionSuccessful)(status);
    const isCompleted = isTimedOut || isFailed || isSuccessful;
    const isPending = (0, import_transactionStateByStatus.getIsTransactionPending)(status);
    const { startTime, endTime } = toast;
    if (isCompleted && completedTransactionToasts.some((t) => t.toastId === toast.toastId)) {
      continue;
    }
    const transactionToast = (0, import_createTransactionToast.createTransactionToast)({
      toastId: toast.toastId,
      address: account.address,
      status,
      transactions: interprettedTransactions,
      transactionsDisplayInfo,
      explorerAddress,
      startTime,
      endTime
    });
    if (isCompleted) {
      completedTransactionToasts.push(transactionToast);
    }
    if (isPending) {
      pendingTransactionToasts.push(transactionToast);
    }
  }
  return {
    pendingTransactionToasts,
    completedTransactionToasts
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createToastsFromTransactions
});
//# sourceMappingURL=createToastsFromTransactions.cjs.map
