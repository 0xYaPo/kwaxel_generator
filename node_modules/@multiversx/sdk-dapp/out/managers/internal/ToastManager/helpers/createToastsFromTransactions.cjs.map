{
  "version": 3,
  "sources": ["../../../../../src/managers/internal/ToastManager/helpers/createToastsFromTransactions.ts"],
  "sourcesContent": ["import { getEgldLabel } from 'methods/network/getEgldLabel';\nimport { getExplorerAddress } from 'methods/network/getExplorerAddress';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'store/actions/transactions/transactionStateByStatus';\nimport { AccountSliceType } from 'store/slices/account/account.types';\nimport { ToastsSliceType } from 'store/slices/toast/toastSlice.types';\nimport { TransactionServerStatusesEnum } from 'types/enums.types';\nimport { SessionTransactionType } from 'types/transactions.types';\nimport { mapServerTransactionsToListItems } from 'utils/transactions/getTransactionsHistory/helpers';\nimport { createTransactionToast } from './createTransactionToast';\nimport { ITransactionToast } from '../types/toast.types';\ninterface CreateToastsFromTransactionsReturnType {\n  pendingTransactionToasts: ITransactionToast[];\n  completedTransactionToasts: ITransactionToast[];\n}\n\ninterface CreateToastsFromTransactionsParamsType {\n  toastList: ToastsSliceType;\n  transactionsSessions: Record<string, SessionTransactionType>;\n  account: AccountSliceType;\n  existingCompletedTransactions?: ITransactionToast[];\n}\n\nexport const createToastsFromTransactions = async ({\n  toastList,\n  transactionsSessions,\n  account,\n  existingCompletedTransactions = []\n}: CreateToastsFromTransactionsParamsType): Promise<CreateToastsFromTransactionsReturnType> => {\n  const pendingTransactionToasts: ITransactionToast[] = [];\n  const completedTransactionToasts: ITransactionToast[] = [\n    ...existingCompletedTransactions\n  ];\n  const explorerAddress = getExplorerAddress();\n  const egldLabel = getEgldLabel();\n\n  for (const toast of toastList.transactionToasts) {\n    const transactionSession = transactionsSessions[toast.toastId];\n    if (!transactionSession?.status) {\n      continue;\n    }\n\n    const { status, transactions, transactionsDisplayInfo } =\n      transactionSession;\n\n    const interprettedTransactions = await mapServerTransactionsToListItems({\n      transactions,\n      address: account.address,\n      explorerAddress,\n      egldLabel\n    });\n\n    const isTimedOut = getIsTransactionTimedOut(status);\n    const isFailed = getIsTransactionFailed(status);\n    const isSuccessful = getIsTransactionSuccessful(status);\n    const isCompleted = isTimedOut || isFailed || isSuccessful;\n    const isPending = getIsTransactionPending(status);\n    const { startTime, endTime } = toast;\n\n    if (\n      isCompleted &&\n      completedTransactionToasts.some((t) => t.toastId === toast.toastId)\n    ) {\n      continue;\n    }\n\n    const transactionToast = createTransactionToast({\n      toastId: toast.toastId,\n      address: account.address,\n      status: status as TransactionServerStatusesEnum,\n      transactions: interprettedTransactions,\n      transactionsDisplayInfo,\n      explorerAddress,\n      startTime,\n      endTime\n    });\n\n    if (isCompleted) {\n      completedTransactionToasts.push(transactionToast);\n    }\n\n    if (isPending) {\n      pendingTransactionToasts.push(transactionToast);\n    }\n  }\n\n  return {\n    pendingTransactionToasts,\n    completedTransactionToasts\n  };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA6B;AAC7B,gCAAmC;AACnC,sCAKO;AAKP,qBAAiD;AACjD,oCAAuC;AAchC,MAAM,+BAA+B,OAAO;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AAAA,EACA,gCAAgC,CAAC;AACnC,MAA+F;AAC7F,QAAM,2BAAgD,CAAC;AACvD,QAAM,6BAAkD;AAAA,IACtD,GAAG;AAAA,EACL;AACA,QAAM,sBAAkB,8CAAmB;AAC3C,QAAM,gBAAY,kCAAa;AAE/B,aAAW,SAAS,UAAU,mBAAmB;AAC/C,UAAM,qBAAqB,qBAAqB,MAAM,OAAO;AAC7D,QAAI,CAAC,oBAAoB,QAAQ;AAC/B;AAAA,IACF;AAEA,UAAM,EAAE,QAAQ,cAAc,wBAAwB,IACpD;AAEF,UAAM,2BAA2B,UAAM,iDAAiC;AAAA,MACtE;AAAA,MACA,SAAS,QAAQ;AAAA,MACjB;AAAA,MACA;AAAA,IACF,CAAC;AAED,UAAM,iBAAa,0DAAyB,MAAM;AAClD,UAAM,eAAW,wDAAuB,MAAM;AAC9C,UAAM,mBAAe,4DAA2B,MAAM;AACtD,UAAM,cAAc,cAAc,YAAY;AAC9C,UAAM,gBAAY,yDAAwB,MAAM;AAChD,UAAM,EAAE,WAAW,QAAQ,IAAI;AAE/B,QACE,eACA,2BAA2B,KAAK,CAAC,MAAM,EAAE,YAAY,MAAM,OAAO,GAClE;AACA;AAAA,IACF;AAEA,UAAM,uBAAmB,sDAAuB;AAAA,MAC9C,SAAS,MAAM;AAAA,MACf,SAAS,QAAQ;AAAA,MACjB;AAAA,MACA,cAAc;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,QAAI,aAAa;AACf,iCAA2B,KAAK,gBAAgB;AAAA,IAClD;AAEA,QAAI,WAAW;AACb,+BAAyB,KAAK,gBAAgB;AAAA,IAChD;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;",
  "names": []
}
