"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getToastDataStateByStatus_exports = {};
__export(getToastDataStateByStatus_exports, {
  ToastIconsEnum: () => ToastIconsEnum,
  getToastDataStateByStatus: () => getToastDataStateByStatus
});
module.exports = __toCommonJS(getToastDataStateByStatus_exports);
var import_types = require("../../../../types");
var import_types2 = require("../types");
var ToastIconsEnum = /* @__PURE__ */ ((ToastIconsEnum2) => {
  ToastIconsEnum2["check"] = "check";
  ToastIconsEnum2["hourglass"] = "hourglass";
  ToastIconsEnum2["times"] = "times";
  ToastIconsEnum2["ban"] = "ban";
  return ToastIconsEnum2;
})(ToastIconsEnum || {});
const getToastDataStateByStatus = ({
  address,
  sender,
  status,
  toastId,
  transactionsDisplayInfo
}) => {
  const successToastData = {
    id: toastId,
    icon: "check" /* check */,
    hasCloseButton: true,
    title: transactionsDisplayInfo?.successMessage ?? import_types2.TransactionsDefaultTitles.success,
    iconClassName: "success"
  };
  const receivedToastData = {
    id: toastId,
    icon: "check" /* check */,
    hasCloseButton: true,
    title: transactionsDisplayInfo?.receivedMessage ?? import_types2.TransactionsDefaultTitles.received,
    iconClassName: "success"
  };
  const pendingToastData = {
    id: toastId,
    icon: "hourglass" /* hourglass */,
    hasCloseButton: false,
    title: transactionsDisplayInfo?.processingMessage ?? import_types2.TransactionsDefaultTitles.pending,
    iconClassName: "warning"
  };
  const failToastData = {
    id: toastId,
    icon: "times" /* times */,
    title: transactionsDisplayInfo?.errorMessage ?? import_types2.TransactionsDefaultTitles.failed,
    hasCloseButton: true,
    iconClassName: "danger"
  };
  const invalidToastData = {
    id: toastId,
    icon: "ban" /* ban */,
    title: transactionsDisplayInfo?.invalidMessage ?? import_types2.TransactionsDefaultTitles.invalid,
    hasCloseButton: true,
    iconClassName: "warning"
  };
  const timedOutToastData = {
    id: toastId,
    icon: "times" /* times */,
    title: transactionsDisplayInfo?.timedOutMessage ?? import_types2.TransactionsDefaultTitles.timedOut,
    hasCloseButton: true,
    iconClassName: "warning"
  };
  switch (status) {
    case import_types.TransactionBatchStatusesEnum.success:
      return sender !== address ? receivedToastData : successToastData;
    case import_types.TransactionBatchStatusesEnum.cancelled:
    case import_types.TransactionBatchStatusesEnum.fail:
      return failToastData;
    case import_types.TransactionBatchStatusesEnum.timedOut:
      return timedOutToastData;
    case import_types.TransactionBatchStatusesEnum.invalid:
      return invalidToastData;
    case import_types.TransactionBatchStatusesEnum.signed:
    case import_types.TransactionBatchStatusesEnum.sent:
    default:
      return pendingToastData;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ToastIconsEnum,
  getToastDataStateByStatus
});
//# sourceMappingURL=getToastDataStateByStatus.cjs.map
