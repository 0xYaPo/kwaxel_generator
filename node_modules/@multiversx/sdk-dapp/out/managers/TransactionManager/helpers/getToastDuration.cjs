"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getToastDuration_exports = {};
__export(getToastDuration_exports, {
  getToastDuration: () => getToastDuration
});
module.exports = __toCommonJS(getToastDuration_exports);
var import_transactions = require("../../../constants/transactions.constants");
var import_selectors = require("../../../store/selectors");
var import_store = require("../../../store/store");
var import_getAreTransactionsCorssShards = require("./getAreTransactionsCorssShards");
var import_isBatchTransaction = require("./isBatchTransaction");
const getToastDuration = (transactions) => {
  let totalDuration = 0;
  const accountShard = (0, import_selectors.accountSelector)((0, import_store.getState)())?.shard;
  if ((0, import_isBatchTransaction.isBatchTransaction)(transactions)) {
    transactions.forEach((transactionGroup) => {
      const isCrossShard2 = (0, import_getAreTransactionsCorssShards.getAreTransactionsCrossShards)(
        transactionGroup,
        accountShard
      );
      totalDuration += isCrossShard2 ? import_transactions.CROSS_SHARD_ROUNDS * import_transactions.AVERAGE_TX_DURATION_MS : import_transactions.AVERAGE_TX_DURATION_MS;
    });
    return totalDuration;
  }
  const isCrossShard = (0, import_getAreTransactionsCorssShards.getAreTransactionsCrossShards)(
    transactions,
    accountShard
  );
  totalDuration = isCrossShard ? import_transactions.CROSS_SHARD_ROUNDS * import_transactions.AVERAGE_TX_DURATION_MS : import_transactions.AVERAGE_TX_DURATION_MS;
  return totalDuration;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getToastDuration
});
//# sourceMappingURL=getToastDuration.cjs.map
