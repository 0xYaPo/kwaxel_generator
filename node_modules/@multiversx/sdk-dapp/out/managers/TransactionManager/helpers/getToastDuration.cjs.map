{
  "version": 3,
  "sources": ["../../../../src/managers/TransactionManager/helpers/getToastDuration.ts"],
  "sourcesContent": ["import {\n  AVERAGE_TX_DURATION_MS,\n  CROSS_SHARD_ROUNDS\n} from 'constants/transactions.constants';\nimport { accountSelector } from 'store/selectors';\nimport { getState } from 'store/store';\nimport { SignedTransactionType } from 'types/transactions.types';\nimport { getAreTransactionsCrossShards } from './getAreTransactionsCorssShards';\nimport { isBatchTransaction } from './isBatchTransaction';\n\nexport const getToastDuration = (\n  transactions: SignedTransactionType[] | SignedTransactionType[][]\n) => {\n  let totalDuration = 0;\n  const accountShard = accountSelector(getState())?.shard;\n\n  if (isBatchTransaction(transactions)) {\n    transactions.forEach((transactionGroup) => {\n      const isCrossShard = getAreTransactionsCrossShards(\n        transactionGroup,\n        accountShard\n      );\n      totalDuration += isCrossShard\n        ? CROSS_SHARD_ROUNDS * AVERAGE_TX_DURATION_MS\n        : AVERAGE_TX_DURATION_MS;\n    });\n    return totalDuration;\n  }\n\n  const isCrossShard = getAreTransactionsCrossShards(\n    transactions,\n    accountShard\n  );\n  totalDuration = isCrossShard\n    ? CROSS_SHARD_ROUNDS * AVERAGE_TX_DURATION_MS\n    : AVERAGE_TX_DURATION_MS;\n\n  return totalDuration;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAGO;AACP,uBAAgC;AAChC,mBAAyB;AAEzB,2CAA8C;AAC9C,gCAAmC;AAE5B,MAAM,mBAAmB,CAC9B,iBACG;AACH,MAAI,gBAAgB;AACpB,QAAM,mBAAe,sCAAgB,uBAAS,CAAC,GAAG;AAElD,UAAI,8CAAmB,YAAY,GAAG;AACpC,iBAAa,QAAQ,CAAC,qBAAqB;AACzC,YAAMA,oBAAe;AAAA,QACnB;AAAA,QACA;AAAA,MACF;AACA,uBAAiBA,gBACb,yCAAqB,6CACrB;AAAA,IACN,CAAC;AACD,WAAO;AAAA,EACT;AAEA,QAAM,mBAAe;AAAA,IACnB;AAAA,IACA;AAAA,EACF;AACA,kBAAgB,eACZ,yCAAqB,6CACrB;AAEJ,SAAO;AACT;",
  "names": ["isCrossShard"]
}
