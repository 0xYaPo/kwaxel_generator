"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var isCrossShardTransaction_exports = {};
__export(isCrossShardTransaction_exports, {
  isCrossShardTransaction: () => isCrossShardTransaction
});
module.exports = __toCommonJS(isCrossShardTransaction_exports);
var import_sdkCore = require("../../../lib/sdkCore");
function isCrossShardTransaction({
  receiverAddress,
  senderShard,
  senderAddress
}) {
  const addressComputer = new import_sdkCore.AddressComputer();
  try {
    const receiver = new import_sdkCore.Address(receiverAddress);
    const computedReceiverShard = addressComputer.getShardOfAddress(receiver);
    if (senderShard == null && senderAddress != null) {
      const sender = new import_sdkCore.Address(senderAddress);
      const computedSenderShard = addressComputer.getShardOfAddress(sender);
      return computedSenderShard !== computedReceiverShard;
    }
    return computedReceiverShard !== senderShard;
  } catch (_err) {
    return false;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isCrossShardTransaction
});
//# sourceMappingURL=isCrossShardTransaction.cjs.map
