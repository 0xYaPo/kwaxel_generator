"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getHumanReadableTokenExpirationTime_exports = {};
__export(getHumanReadableTokenExpirationTime_exports, {
  getHumanReadableTokenExpirationTime: () => getHumanReadableTokenExpirationTime
});
module.exports = __toCommonJS(getHumanReadableTokenExpirationTime_exports);
var import_bignumber = __toESM(require("bignumber.js"));
const getHumanReadableTokenExpirationTime = (milliseconds) => {
  const seconds = new import_bignumber.default(milliseconds).dividedBy(1e3).integerValue(import_bignumber.default.ROUND_FLOOR);
  const minutes = new import_bignumber.default(seconds).dividedBy(60).integerValue(import_bignumber.default.ROUND_FLOOR);
  const hours = new import_bignumber.default(minutes).dividedBy(60).integerValue(import_bignumber.default.ROUND_FLOOR);
  const overOneHour = hours.modulo(60).isGreaterThan(1);
  const overOneMinute = minutes.modulo(60).isGreaterThan(1);
  const underOneMinute = minutes.modulo(60).isLessThan(1);
  if (overOneHour) {
    return `${hours} hours`;
  }
  if (overOneMinute) {
    return `${minutes} minutes`;
  }
  if (underOneMinute) {
    return "less than 1 minute";
  }
  return `${minutes} minute`;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getHumanReadableTokenExpirationTime
});
//# sourceMappingURL=getHumanReadableTokenExpirationTime.cjs.map
