import { ITransactionListItem, MvxNotificationsFeed } from '../../lib/sdkDappUi';
import { NotificationsFeedEventsEnum } from './types';
import { SidePanelBaseManager } from '../internal/SidePanelBaseManager/SidePanelBaseManager';
import { ITransactionToast } from '../internal/ToastManager/types';
interface INotificationsFeedManagerData {
    pendingTransactions: ITransactionToast[];
    historicTransactions: ITransactionListItem[];
}
declare const NOTIFICATIONS_FEED_STORE_SUBSCRIBE = "NOTIFICATIONS_FEED_STORE_SUBSCRIBE";
export declare class NotificationsFeedManager extends SidePanelBaseManager<MvxNotificationsFeed, INotificationsFeedManagerData, NotificationsFeedEventsEnum | typeof NOTIFICATIONS_FEED_STORE_SUBSCRIBE> {
    private static instance;
    private readonly store;
    protected initialData: INotificationsFeedManagerData;
    static getInstance(): NotificationsFeedManager;
    constructor();
    isNotificationsFeedOpen(): boolean;
    /**
     * Open the notifications feed and toggle off the toast manager.
     */
    openNotificationsFeed(): Promise<void>;
    /**
     * Close the notifications feed and toggle on the toast manager.
     */
    protected handleCloseUI(): Promise<void>;
    protected setupEventListeners(): Promise<void>;
    protected updateDataAndNotifications(): Promise<void>;
    private handleClearNotificationsFeedHistory;
    private updateNotificationsFeed;
}
export {};
