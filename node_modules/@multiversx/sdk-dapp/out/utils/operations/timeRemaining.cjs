"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var timeRemaining_exports = {};
__export(timeRemaining_exports, {
  getDifferenceInMs: () => getDifferenceInMs,
  getRemainingTime: () => getRemainingTime,
  timeAgo: () => timeAgo,
  timeRemaining: () => timeRemaining
});
module.exports = __toCommonJS(timeRemaining_exports);
function getRemainingTime(ms) {
  const days = Math.floor(ms / (24 * 60 * 60 * 1e3));
  const daysms = ms % (24 * 60 * 60 * 1e3);
  const hrs = Math.floor(daysms / (60 * 60 * 1e3));
  const hrsms = daysms % (60 * 60 * 1e3);
  const mins = Math.floor(hrsms / (60 * 1e3));
  const minsms = hrsms % (60 * 1e3);
  const secs = Math.floor(minsms / 1e3);
  let secsString = secs + " sec";
  let minsString = mins + " min";
  let hrsString = hrs + " hr";
  let daysString = days + " day";
  if (secs > 1) {
    secsString = secs + " sec";
  }
  if (mins > 1) {
    minsString = mins + " min";
  }
  if (hrs > 1) {
    hrsString = hrs + " hrs";
  }
  if (days > 1) {
    daysString = days + " days";
  }
  if (days >= 1) {
    return daysString + " " + hrsString;
  }
  if (hrs >= 1) {
    const minutesString = mins === 0 ? "" : " " + minsString;
    return hrsString + minutesString;
  }
  if (mins >= 1) {
    const secString = secs === 0 ? "" : " " + secsString;
    return minsString + secString;
  }
  return secsString;
}
function getShortDateTimeFormat(datetime) {
  const parts = datetime.split(" ");
  if (parts.length > 1) {
    return `${parts[0]} ${parts[1]}`;
  }
  return datetime;
}
const getUTCDateNow = (date = /* @__PURE__ */ new Date(), extendedSeconds = 0) => Date.UTC(
  date.getUTCFullYear(),
  date.getUTCMonth(),
  date.getUTCDate(),
  date.getUTCHours(),
  date.getUTCMinutes(),
  date.getUTCSeconds() + extendedSeconds,
  date.getUTCMilliseconds()
);
function getUTCdiffInMs(duration) {
  const date = /* @__PURE__ */ new Date();
  const startDate = getUTCDateNow(date);
  const endDate = getUTCDateNow(date, duration);
  const diffInMs = Math.max(endDate - startDate, 0);
  return diffInMs;
}
function timeRemaining(duration, short = true) {
  const diffInMs = getUTCdiffInMs(duration);
  const remaining = getRemainingTime(diffInMs);
  return short ? getShortDateTimeFormat(remaining) : remaining;
}
function getDifferenceInMs(timestamp) {
  const dateNow = (/* @__PURE__ */ new Date()).getTime();
  const difference = dateNow - timestamp;
  const diffInMs = Math.max(difference, 0);
  return diffInMs;
}
function timeAgo(timestamp, short = true) {
  const diffInMs = getDifferenceInMs(timestamp);
  const remaining = getRemainingTime(diffInMs);
  return short ? getShortDateTimeFormat(remaining) : remaining;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getDifferenceInMs,
  getRemainingTime,
  timeAgo,
  timeRemaining
});
//# sourceMappingURL=timeRemaining.cjs.map
