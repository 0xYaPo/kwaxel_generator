"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getUsdValue_exports = {};
__export(getUsdValue_exports, {
  getUsdValue: () => getUsdValue
});
module.exports = __toCommonJS(getUsdValue_exports);
const getUsdValue = ({
  amount,
  usd,
  decimals = 2,
  addEqualSign
}) => {
  let sum = (parseFloat(amount) * usd).toFixed(decimals);
  if (isNaN(Number(sum))) {
    sum = "0";
  }
  const formattedValue = parseFloat(sum).toLocaleString("en", {
    maximumFractionDigits: decimals,
    minimumFractionDigits: decimals
  });
  const equalSign = parseFloat(amount) > 0 ? "\u2248" : "=";
  const equalSignPrefix = addEqualSign ? `${equalSign} ` : "";
  return `${equalSignPrefix}$${formattedValue}`;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getUsdValue
});
//# sourceMappingURL=getUsdValue.cjs.map
