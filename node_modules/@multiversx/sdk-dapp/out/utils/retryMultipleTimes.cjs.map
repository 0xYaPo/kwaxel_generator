{
  "version": 3,
  "sources": ["../../src/utils/retryMultipleTimes.ts"],
  "sourcesContent": ["import { sleep } from './asyncActions';\n\ninterface Options {\n  retries: number;\n  delay?: number;\n}\n\nconst executeAsyncCall = async (\n  cb: (..._args: any[]) => any,\n  options: Options,\n  args: any[],\n  retries = 0\n): Promise<any | null> => {\n  try {\n    return await cb(...args);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  } catch (error) {\n    if (retries < options.retries) {\n      if (options?.delay != null) {\n        await sleep(options.delay);\n      }\n\n      return await executeAsyncCall(cb, options, args, retries + 1);\n    }\n\n    return null;\n  }\n};\n\nexport const retryMultipleTimes =\n  (\n    cb: (..._args: any[]) => any,\n    options: Options = { retries: 5, delay: 500 }\n  ) =>\n  async (...args: any[]) => {\n    return await executeAsyncCall(cb, options, args);\n  };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsB;AAOtB,MAAM,mBAAmB,OACvB,IACA,SACA,MACA,UAAU,MACc;AACxB,MAAI;AACF,WAAO,MAAM,GAAG,GAAG,IAAI;AAAA,EAEzB,SAAS,OAAO;AACd,QAAI,UAAU,QAAQ,SAAS;AAC7B,UAAI,SAAS,SAAS,MAAM;AAC1B,kBAAM,2BAAM,QAAQ,KAAK;AAAA,MAC3B;AAEA,aAAO,MAAM,iBAAiB,IAAI,SAAS,MAAM,UAAU,CAAC;AAAA,IAC9D;AAEA,WAAO;AAAA,EACT;AACF;AAEO,MAAM,qBACX,CACE,IACA,UAAmB,EAAE,SAAS,GAAG,OAAO,IAAI,MAE9C,UAAU,SAAgB;AACxB,SAAO,MAAM,iBAAiB,IAAI,SAAS,IAAI;AACjD;",
  "names": []
}
