"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getHumanReadableTimeFormat_exports = {};
__export(getHumanReadableTimeFormat_exports, {
  getHumanReadableTimeFormat: () => getHumanReadableTimeFormat
});
module.exports = __toCommonJS(getHumanReadableTimeFormat_exports);
function getHumanReadableTimeFormat({
  value,
  noSeconds,
  utc,
  meridiem = true
}) {
  const utcDate = new Date(value * 1e3);
  const [, AmPm] = utcDate.toLocaleString("en-US", { hour: "numeric", hour12: meridiem }).split(" ");
  const formatted = utcDate.toUTCString();
  const [, date] = formatted.split(",");
  const [day, month, year, time] = date.trim().split(" ");
  const [hours, minutes, sec] = time.split(":");
  const seconds = `:${sec}`;
  const timeFormatted = `${hours}:${minutes}${noSeconds ? "" : seconds}`;
  const utcSuffix = utc ? "UTC" : "";
  const meridiemSuffix = meridiem ? AmPm : "";
  const suffix = `${meridiemSuffix} ${utcSuffix}`.trim();
  return `${month} ${day}, ${year} ${timeFormatted} ${suffix}`.trim();
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getHumanReadableTimeFormat
});
//# sourceMappingURL=getHumanReadableTimeFormat.cjs.map
