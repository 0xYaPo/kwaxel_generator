{
  "version": 3,
  "sources": ["../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getReceiptMessage.ts"],
  "sourcesContent": ["import BigNumber from 'bignumber.js';\nimport { REFUNDED_GAS } from 'constants/index';\nimport { DECIMALS, DIGITS, formatAmount } from 'lib/sdkDappUtils';\nimport { ServerTransactionType } from 'types/serverTransactions.types';\n\nconst getReceiptValue = (transaction: ServerTransactionType) => {\n  if (!transaction.receipt?.value) {\n    return '';\n  }\n\n  if (transaction.receipt?.data === REFUNDED_GAS) {\n    const formattedGas = formatAmount({\n      input: transaction.receipt.value,\n      decimals: DECIMALS,\n      digits: DIGITS,\n      showLastNonZeroDecimal: true\n    });\n\n    const gasRefunded = new BigNumber(formattedGas)\n      .times(transaction.gasPrice)\n      .times(100);\n\n    return gasRefunded.toFixed();\n  }\n\n  return transaction.receipt.value;\n};\n\nexport function getReceiptMessage(transaction: ServerTransactionType) {\n  const message = transaction.receipt?.data;\n\n  if (!message) {\n    return '';\n  }\n\n  const receiptValue = getReceiptValue(transaction);\n  const value = receiptValue ? `: ${receiptValue}` : '';\n\n  return `${message}${value}`;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAsB;AACtB,uBAA6B;AAC7B,0BAA+C;AAG/C,MAAM,kBAAkB,CAAC,gBAAuC;AAC9D,MAAI,CAAC,YAAY,SAAS,OAAO;AAC/B,WAAO;AAAA,EACT;AAEA,MAAI,YAAY,SAAS,SAAS,+BAAc;AAC9C,UAAM,mBAAe,kCAAa;AAAA,MAChC,OAAO,YAAY,QAAQ;AAAA,MAC3B,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,wBAAwB;AAAA,IAC1B,CAAC;AAED,UAAM,cAAc,IAAI,iBAAAA,QAAU,YAAY,EAC3C,MAAM,YAAY,QAAQ,EAC1B,MAAM,GAAG;AAEZ,WAAO,YAAY,QAAQ;AAAA,EAC7B;AAEA,SAAO,YAAY,QAAQ;AAC7B;AAEO,SAAS,kBAAkB,aAAoC;AACpE,QAAM,UAAU,YAAY,SAAS;AAErC,MAAI,CAAC,SAAS;AACZ,WAAO;AAAA,EACT;AAEA,QAAM,eAAe,gBAAgB,WAAW;AAChD,QAAM,QAAQ,eAAe,KAAK,YAAY,KAAK;AAEnD,SAAO,GAAG,OAAO,GAAG,KAAK;AAC3B;",
  "names": ["BigNumber"]
}
