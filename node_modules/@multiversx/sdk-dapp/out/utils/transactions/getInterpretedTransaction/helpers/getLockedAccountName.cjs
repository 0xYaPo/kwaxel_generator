"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getLockedAccountName_exports = {};
__export(getLockedAccountName_exports, {
  getLockedAccountName: () => getLockedAccountName
});
module.exports = __toCommonJS(getLockedAccountName_exports);
var import_getPersistedTokenDetails = require("../../../../apiCalls/tokens/getPersistedTokenDetails");
var import_validation = require("../../../validation");
const getLockedAccountName = async ({
  receiver,
  sender,
  tokenId
}) => {
  let senderLockedAccount = null, receiverLockedAccount = null;
  if (!tokenId) {
    return {
      senderLockedAccount,
      receiverLockedAccount
    };
  }
  try {
    const tokenDetails = await (0, import_getPersistedTokenDetails.getPersistedTokenDetails)({ tokenId });
    const lockedAccounts = tokenDetails?.assets?.lockedAccounts;
    if (!lockedAccounts) {
      return {
        senderLockedAccount,
        receiverLockedAccount
      };
    }
    for (let account in lockedAccounts) {
      if ((0, import_validation.addressIsValid)(account)) {
        if (sender === account) {
          senderLockedAccount = account;
        }
        if (receiver === account) {
          receiverLockedAccount = account;
        }
      }
      if ((0, import_validation.addressIsValid)(lockedAccounts[account])) {
        if (sender === lockedAccounts[account]) {
          senderLockedAccount = lockedAccounts[account];
        }
        if (receiver === lockedAccounts[account]) {
          receiverLockedAccount = lockedAccounts[account];
        }
      }
      if (senderLockedAccount && receiverLockedAccount) {
        return {
          senderLockedAccount,
          receiverLockedAccount
        };
      }
    }
  } catch (error) {
    console.error("Error getting token details", error);
  }
  return {
    senderLockedAccount,
    receiverLockedAccount
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getLockedAccountName
});
//# sourceMappingURL=getLockedAccountName.cjs.map
