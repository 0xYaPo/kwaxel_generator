"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getTransactionIconInfo_exports = {};
__export(getTransactionIconInfo_exports, {
  getTransactionIconInfo: () => getTransactionIconInfo
});
module.exports = __toCommonJS(getTransactionIconInfo_exports);
var import_capitalize = require("../../../../utils/operations/capitalize");
var import_getTransactionMessages = require("./getTransactionMessages");
var import_getTransactionStatus = require("./getTransactionStatus");
const getTransactionIconInfo = (transaction) => {
  const transactionMessages = (0, import_getTransactionMessages.getTransactionMessages)(transaction);
  const { failed, invalid, pending } = (0, import_getTransactionStatus.getTransactionStatus)(transaction);
  let icon = "";
  if (failed) {
    icon = "faTimes";
  } else if (invalid) {
    icon = "faBan";
  } else if (pending) {
    icon = "faHourglass";
  }
  const showErrorText = (failed || invalid) && transactionMessages.length > 0;
  const errorText = showErrorText ? transactionMessages.join(",") : "";
  const tooltip = `${(0, import_capitalize.capitalize)(transaction.status)} ${errorText}`;
  return { icon, tooltip };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getTransactionIconInfo
});
//# sourceMappingURL=getTransactionIconInfo.cjs.map
