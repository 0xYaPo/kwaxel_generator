{
  "version": 3,
  "sources": ["../../../../src/utils/transactions/getInterpretedTransaction/getInterpretedTransaction.ts"],
  "sourcesContent": ["import {\n  InterpretedTransactionType,\n  ServerTransactionType,\n  TransactionAgeType,\n  TransactionMethodType\n} from 'types/serverTransactions.types';\nimport { TokenArgumentType } from 'types/serverTransactions.types';\nimport { timeAgo } from 'utils/operations/timeRemaining';\nimport { isContract } from 'utils/validation';\nimport { explorerUrlBuilder } from '../explorerUrlBuilder';\nimport { getExplorerLink } from '../getExplorerLink';\nimport { getHumanReadableTimeFormat } from '../getHumanReadableTimeFormat';\nimport { getTokenFromData } from './helpers/getTokenFromData';\nimport { getTransactionIconInfo } from './helpers/getTransactionIconInfo';\nimport { getTransactionMethod } from './helpers/getTransactionMethod';\nimport { getTransactionReceiver } from './helpers/getTransactionReceiver';\nimport { getTransactionReceiverAssets } from './helpers/getTransactionReceiverAssets';\nimport { getTransactionTokens } from './helpers/getTransactionTokens';\nimport { getTransactionTransferType } from './helpers/getTransactionTransferType';\n\nexport interface GetInterpretedTransactionType {\n  address: string;\n  explorerAddress: string;\n  transaction: ServerTransactionType;\n}\n\nexport function getInterpretedTransaction({\n  transaction,\n  address,\n  explorerAddress\n}: GetInterpretedTransactionType): InterpretedTransactionType {\n  const tokenIdentifier =\n    transaction.tokenIdentifier ?? getTokenFromData(transaction.data).tokenId;\n\n  const receiver = getTransactionReceiver(transaction);\n  const receiverAssets = getTransactionReceiverAssets(transaction);\n  const age: TransactionAgeType = {\n    timeAgo: timeAgo(transaction.timestamp * 1000, true),\n    tooltip: getHumanReadableTimeFormat({\n      value: transaction.timestamp,\n      noSeconds: false,\n      utc: true\n    })\n  };\n\n  const direction = getTransactionTransferType({\n    address,\n    transaction,\n    receiver\n  });\n\n  const method: TransactionMethodType = {\n    actionDescription: transaction.action?.description,\n    name: getTransactionMethod(transaction)\n  };\n\n  const transactionTokens: TokenArgumentType[] =\n    getTransactionTokens(transaction);\n\n  const senderLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.accountDetails(transaction.sender)\n  });\n\n  const receiverLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.accountDetails(receiver)\n  });\n\n  const senderShardLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.senderShard(transaction.senderShard)\n  });\n\n  const receiverShardLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.receiverShard(transaction.receiverShard)\n  });\n\n  const transactionHash = transaction.originalTxHash || transaction.txHash;\n\n  const transactionLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.transactionDetails(transactionHash)\n  });\n\n  return {\n    ...transaction,\n    txHash: transactionHash,\n    tokenIdentifier,\n    receiver,\n    receiverAssets,\n    transactionDetails: {\n      age,\n      direction,\n      method,\n      iconInfo: getTransactionIconInfo(transaction),\n      transactionTokens,\n      isContract: isContract(transaction.sender)\n    },\n    links: {\n      senderLink,\n      receiverLink,\n      senderShardLink,\n      receiverShardLink,\n      transactionLink\n    }\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,2BAAwB;AACxB,wBAA2B;AAC3B,gCAAmC;AACnC,6BAAgC;AAChC,wCAA2C;AAC3C,8BAAiC;AACjC,oCAAuC;AACvC,kCAAqC;AACrC,oCAAuC;AACvC,0CAA6C;AAC7C,kCAAqC;AACrC,wCAA2C;AAQpC,SAAS,0BAA0B;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AACF,GAA8D;AAC5D,QAAM,kBACJ,YAAY,uBAAmB,0CAAiB,YAAY,IAAI,EAAE;AAEpE,QAAM,eAAW,sDAAuB,WAAW;AACnD,QAAM,qBAAiB,kEAA6B,WAAW;AAC/D,QAAM,MAA0B;AAAA,IAC9B,aAAS,8BAAQ,YAAY,YAAY,KAAM,IAAI;AAAA,IACnD,aAAS,8DAA2B;AAAA,MAClC,OAAO,YAAY;AAAA,MACnB,WAAW;AAAA,MACX,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,gBAAY,8DAA2B;AAAA,IAC3C;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,QAAM,SAAgC;AAAA,IACpC,mBAAmB,YAAY,QAAQ;AAAA,IACvC,UAAM,kDAAqB,WAAW;AAAA,EACxC;AAEA,QAAM,wBACJ,kDAAqB,WAAW;AAElC,QAAM,iBAAa,wCAAgB;AAAA,IACjC;AAAA,IACA,IAAI,6CAAmB,eAAe,YAAY,MAAM;AAAA,EAC1D,CAAC;AAED,QAAM,mBAAe,wCAAgB;AAAA,IACnC;AAAA,IACA,IAAI,6CAAmB,eAAe,QAAQ;AAAA,EAChD,CAAC;AAED,QAAM,sBAAkB,wCAAgB;AAAA,IACtC;AAAA,IACA,IAAI,6CAAmB,YAAY,YAAY,WAAW;AAAA,EAC5D,CAAC;AAED,QAAM,wBAAoB,wCAAgB;AAAA,IACxC;AAAA,IACA,IAAI,6CAAmB,cAAc,YAAY,aAAa;AAAA,EAChE,CAAC;AAED,QAAM,kBAAkB,YAAY,kBAAkB,YAAY;AAElE,QAAM,sBAAkB,wCAAgB;AAAA,IACtC;AAAA,IACA,IAAI,6CAAmB,mBAAmB,eAAe;AAAA,EAC3D,CAAC;AAED,SAAO;AAAA,IACL,GAAG;AAAA,IACH,QAAQ;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA,oBAAoB;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAU,sDAAuB,WAAW;AAAA,MAC5C;AAAA,MACA,gBAAY,8BAAW,YAAY,MAAM;AAAA,IAC3C;AAAA,IACA,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
