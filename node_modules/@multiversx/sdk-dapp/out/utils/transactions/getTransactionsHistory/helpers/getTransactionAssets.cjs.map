{
  "version": 3,
  "sources": ["../../../../../src/utils/transactions/getTransactionsHistory/helpers/getTransactionAssets.ts"],
  "sourcesContent": ["import { DECIMALS } from 'lib/sdkDappUtils';\nimport { ServerTransactionType } from 'types/serverTransactions.types';\n\nimport { getAssetAmount } from './getAssetAmount';\nimport { getAssetPrice } from './getAssetPrice';\n\ninterface IGetTransactionAssetsParams {\n  transaction: ServerTransactionType;\n  userIsReceiver: boolean;\n  egldLabel?: string;\n}\n\nexport interface ITransactionAsset {\n  assetPrefix: string;\n  assetTicker: string;\n  assetAmount: string;\n  assetImage?: string;\n  assetPrice?: string;\n  type: string;\n}\n\nexport const getTransactionAssets = ({\n  transaction,\n  userIsReceiver,\n  egldLabel\n}: IGetTransactionAssetsParams): ITransactionAsset[] => {\n  const transactionAction = transaction.action;\n  const transactionArguments = transactionAction && transactionAction.arguments;\n\n  const transactionTransfers: Record<string, string>[] =\n    transactionArguments && Array.isArray(transactionArguments.transfers)\n      ? transactionArguments.transfers\n      : [];\n\n  const isEgldTransfer = transactionTransfers.length === 0;\n  const processedEgldLabel = egldLabel ?? 'EGLD';\n  const assetPrefix = userIsReceiver ? '+' : '-';\n\n  const egldTransferAsset: ITransactionAsset = {\n    assetPrefix,\n    type: processedEgldLabel,\n    assetTicker: processedEgldLabel,\n    assetAmount: getAssetAmount({\n      value: transaction.value,\n      decimals: String(DECIMALS)\n    })\n  };\n\n  const transfersAssets = transactionTransfers.map(\n    (transactionTransfer): ITransactionAsset => ({\n      assetPrefix,\n      type: transactionTransfer.type,\n      assetTicker: transactionTransfer.ticker,\n      assetImage: transactionTransfer.svgUrl,\n      assetAmount: getAssetAmount(transactionTransfer),\n      assetPrice: getAssetPrice(transactionTransfer)\n    })\n  );\n\n  if (isEgldTransfer) {\n    return [egldTransferAsset];\n  }\n\n  return transfersAssets;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyB;AAGzB,4BAA+B;AAC/B,2BAA8B;AAiBvB,MAAM,uBAAuB,CAAC;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AACF,MAAwD;AACtD,QAAM,oBAAoB,YAAY;AACtC,QAAM,uBAAuB,qBAAqB,kBAAkB;AAEpE,QAAM,uBACJ,wBAAwB,MAAM,QAAQ,qBAAqB,SAAS,IAChE,qBAAqB,YACrB,CAAC;AAEP,QAAM,iBAAiB,qBAAqB,WAAW;AACvD,QAAM,qBAAqB,aAAa;AACxC,QAAM,cAAc,iBAAiB,MAAM;AAE3C,QAAM,oBAAuC;AAAA,IAC3C;AAAA,IACA,MAAM;AAAA,IACN,aAAa;AAAA,IACb,iBAAa,sCAAe;AAAA,MAC1B,OAAO,YAAY;AAAA,MACnB,UAAU,OAAO,4BAAQ;AAAA,IAC3B,CAAC;AAAA,EACH;AAEA,QAAM,kBAAkB,qBAAqB;AAAA,IAC3C,CAAC,yBAA4C;AAAA,MAC3C;AAAA,MACA,MAAM,oBAAoB;AAAA,MAC1B,aAAa,oBAAoB;AAAA,MACjC,YAAY,oBAAoB;AAAA,MAChC,iBAAa,sCAAe,mBAAmB;AAAA,MAC/C,gBAAY,oCAAc,mBAAmB;AAAA,IAC/C;AAAA,EACF;AAEA,MAAI,gBAAgB;AAClB,WAAO,CAAC,iBAAiB;AAAA,EAC3B;AAEA,SAAO;AACT;",
  "names": []
}
