"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getTransactionActionTransferLabel_exports = {};
__export(getTransactionActionTransferLabel_exports, {
  getTransactionActionTransferLabel: () => getTransactionActionTransferLabel
});
module.exports = __toCommonJS(getTransactionActionTransferLabel_exports);
var import_bignumber = __toESM(require("bignumber.js"));
var import_sdkDappUtils = require("../../../../lib/sdkDappUtils");
var import_sdkDappUtils2 = require("../../../../lib/sdkDappUtils");
var import_tokens = require("../../../../types/tokens.types");
var import_pluralize = require("../../../../utils/operations/pluralize");
const getTransactionActionTransferLabel = ({
  transactionTransfers,
  allTransferTypes,
  transferType
}) => {
  const [firstTransfer] = transactionTransfers;
  const allTransferTickers = transactionTransfers.map(
    (transfer) => transfer.ticker
  );
  const allTransferredItemsAreTheSame = new Set(allTransferTypes).size === 1;
  const allTransferredTickersAreTheSame = new Set(allTransferTickers).size === 1;
  const totalSftBalances = transactionTransfers.map(
    (transactionTransfer) => (0, import_sdkDappUtils.formatAmount)({
      input: String(transactionTransfer.value ?? import_sdkDappUtils2.ZERO),
      decimals: Number(transactionTransfer.decimals ?? import_sdkDappUtils2.ZERO)
    })
  );
  const cumulatedSftUnits = totalSftBalances.reduce(
    (cumulatedUnits, currentSft) => cumulatedUnits.plus(currentSft),
    new import_bignumber.default(transactionTransfers.length - 1)
  );
  if (!allTransferredItemsAreTheSame || !allTransferredTickersAreTheSame) {
    return "Multiple Assets";
  }
  if (transferType === import_tokens.NftEnumType.SemiFungibleESDT) {
    return (0, import_pluralize.pluralize)("SFT", cumulatedSftUnits.toNumber());
  }
  if (transferType === import_tokens.NftEnumType.NonFungibleESDT) {
    return (0, import_pluralize.pluralize)("NFT", transactionTransfers.length);
  }
  return firstTransfer.ticker;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getTransactionActionTransferLabel
});
//# sourceMappingURL=getTransactionActionTransferLabel.cjs.map
