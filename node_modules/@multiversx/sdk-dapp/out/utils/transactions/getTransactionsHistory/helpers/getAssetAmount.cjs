"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getAssetAmount_exports = {};
__export(getAssetAmount_exports, {
  getAssetAmount: () => getAssetAmount
});
module.exports = __toCommonJS(getAssetAmount_exports);
var import_bignumber = __toESM(require("bignumber.js"));
var import_lodash = __toESM(require("lodash.trimend"));
var import_sdkDappUtils = require("../../../../lib/sdkDappUtils");
var import_trimAmountDecimals = require("../../../../utils/operations/trimAmountDecimals");
var import_isTransferNftOrSft = require("./isTransferNftOrSft");
const getAssetAmount = (transactionTransfer) => {
  if ((0, import_isTransferNftOrSft.isTransferNftOrSft)(transactionTransfer)) {
    return parseFloat(transactionTransfer.value).toLocaleString();
  }
  const formattedAmount = (0, import_sdkDappUtils.formatAmount)({
    input: String(transactionTransfer.value ?? import_sdkDappUtils.ZERO),
    decimals: Number(transactionTransfer.decimals ?? import_sdkDappUtils.DECIMALS),
    showLastNonZeroDecimal: true,
    addCommas: true
  });
  const trimmedAmount = (0, import_trimAmountDecimals.trimAmountDecimals)({
    minimumPositiveDecimals: import_sdkDappUtils.DIGITS,
    amount: formattedAmount
  });
  const [price, decimals] = trimmedAmount.split(".");
  const trimmedDecimals = (0, import_lodash.default)(decimals, import_sdkDappUtils.ZERO);
  if (decimals && new import_bignumber.default(decimals).isGreaterThan(import_sdkDappUtils.ZERO)) {
    return `${price}.${trimmedDecimals}`;
  }
  return trimmedAmount;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getAssetAmount
});
//# sourceMappingURL=getAssetAmount.cjs.map
