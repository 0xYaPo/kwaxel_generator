{
  "version": 3,
  "sources": ["../../../../../src/utils/transactions/getTransactionsHistory/helpers/getTransactionActionTransferLabel.ts"],
  "sourcesContent": ["import BigNumber from 'bignumber.js';\nimport { formatAmount } from 'lib/sdkDappUtils';\nimport { ZERO } from 'lib/sdkDappUtils';\nimport { NftEnumType } from 'types/tokens.types';\nimport { pluralize } from 'utils/operations/pluralize';\n\ninterface IGetTransactionActionTransferLabelParams {\n  allTransferTypes: string[];\n  transferType?: string;\n  transactionTransfers: Record<string, string>[];\n}\n\nexport const getTransactionActionTransferLabel = ({\n  transactionTransfers,\n  allTransferTypes,\n  transferType\n}: IGetTransactionActionTransferLabelParams) => {\n  const [firstTransfer] = transactionTransfers;\n\n  const allTransferTickers = transactionTransfers.map(\n    (transfer): string => transfer.ticker\n  );\n\n  const allTransferredItemsAreTheSame = new Set(allTransferTypes).size === 1;\n  const allTransferredTickersAreTheSame =\n    new Set(allTransferTickers).size === 1;\n\n  const totalSftBalances = transactionTransfers.map((transactionTransfer) =>\n    formatAmount({\n      input: String(transactionTransfer.value ?? ZERO),\n      decimals: Number(transactionTransfer.decimals ?? ZERO)\n    })\n  );\n\n  const cumulatedSftUnits = totalSftBalances.reduce(\n    (cumulatedUnits, currentSft) => cumulatedUnits.plus(currentSft),\n    new BigNumber(transactionTransfers.length - 1)\n  );\n\n  if (!allTransferredItemsAreTheSame || !allTransferredTickersAreTheSame) {\n    return 'Multiple Assets';\n  }\n\n  if (transferType === NftEnumType.SemiFungibleESDT) {\n    return pluralize('SFT', cumulatedSftUnits.toNumber());\n  }\n\n  if (transferType === NftEnumType.NonFungibleESDT) {\n    return pluralize('NFT', transactionTransfers.length);\n  }\n\n  return firstTransfer.ticker;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAsB;AACtB,0BAA6B;AAC7B,IAAAA,uBAAqB;AACrB,oBAA4B;AAC5B,uBAA0B;AAQnB,MAAM,oCAAoC,CAAC;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AACF,MAAgD;AAC9C,QAAM,CAAC,aAAa,IAAI;AAExB,QAAM,qBAAqB,qBAAqB;AAAA,IAC9C,CAAC,aAAqB,SAAS;AAAA,EACjC;AAEA,QAAM,gCAAgC,IAAI,IAAI,gBAAgB,EAAE,SAAS;AACzE,QAAM,kCACJ,IAAI,IAAI,kBAAkB,EAAE,SAAS;AAEvC,QAAM,mBAAmB,qBAAqB;AAAA,IAAI,CAAC,4BACjD,kCAAa;AAAA,MACX,OAAO,OAAO,oBAAoB,SAAS,yBAAI;AAAA,MAC/C,UAAU,OAAO,oBAAoB,YAAY,yBAAI;AAAA,IACvD,CAAC;AAAA,EACH;AAEA,QAAM,oBAAoB,iBAAiB;AAAA,IACzC,CAAC,gBAAgB,eAAe,eAAe,KAAK,UAAU;AAAA,IAC9D,IAAI,iBAAAC,QAAU,qBAAqB,SAAS,CAAC;AAAA,EAC/C;AAEA,MAAI,CAAC,iCAAiC,CAAC,iCAAiC;AACtE,WAAO;AAAA,EACT;AAEA,MAAI,iBAAiB,0BAAY,kBAAkB;AACjD,eAAO,4BAAU,OAAO,kBAAkB,SAAS,CAAC;AAAA,EACtD;AAEA,MAAI,iBAAiB,0BAAY,iBAAiB;AAChD,eAAO,4BAAU,OAAO,qBAAqB,MAAM;AAAA,EACrD;AAEA,SAAO,cAAc;AACvB;",
  "names": ["import_sdkDappUtils", "BigNumber"]
}
