"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getTransactionAssets_exports = {};
__export(getTransactionAssets_exports, {
  getTransactionAssets: () => getTransactionAssets
});
module.exports = __toCommonJS(getTransactionAssets_exports);
var import_sdkDappUtils = require("../../../../lib/sdkDappUtils");
var import_getAssetAmount = require("./getAssetAmount");
var import_getAssetPrice = require("./getAssetPrice");
const getTransactionAssets = ({
  transaction,
  userIsReceiver,
  egldLabel
}) => {
  const transactionAction = transaction.action;
  const transactionArguments = transactionAction && transactionAction.arguments;
  const transactionTransfers = transactionArguments && Array.isArray(transactionArguments.transfers) ? transactionArguments.transfers : [];
  const isEgldTransfer = transactionTransfers.length === 0;
  const processedEgldLabel = egldLabel ?? "EGLD";
  const assetPrefix = userIsReceiver ? "+" : "-";
  const egldTransferAsset = {
    assetPrefix,
    type: processedEgldLabel,
    assetTicker: processedEgldLabel,
    assetAmount: (0, import_getAssetAmount.getAssetAmount)({
      value: transaction.value,
      decimals: String(import_sdkDappUtils.DECIMALS)
    })
  };
  const transfersAssets = transactionTransfers.map(
    (transactionTransfer) => ({
      assetPrefix,
      type: transactionTransfer.type,
      assetTicker: transactionTransfer.ticker,
      assetImage: transactionTransfer.svgUrl,
      assetAmount: (0, import_getAssetAmount.getAssetAmount)(transactionTransfer),
      assetPrice: (0, import_getAssetPrice.getAssetPrice)(transactionTransfer)
    })
  );
  if (isEgldTransfer) {
    return [egldTransferAsset];
  }
  return transfersAssets;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getTransactionAssets
});
//# sourceMappingURL=getTransactionAssets.cjs.map
