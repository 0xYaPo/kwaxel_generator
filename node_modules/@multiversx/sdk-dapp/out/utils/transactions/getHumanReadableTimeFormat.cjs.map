{
  "version": 3,
  "sources": ["../../../src/utils/transactions/getHumanReadableTimeFormat.ts"],
  "sourcesContent": ["export interface GetHumanReadableTimeFormatType {\n  value: number;\n  noSeconds?: boolean;\n  utc?: boolean;\n  meridiem?: boolean;\n}\n\n/**\n * @param value - UNIX timestamp\n * */\nexport function getHumanReadableTimeFormat({\n  value,\n  noSeconds,\n  utc,\n  meridiem = true\n}: GetHumanReadableTimeFormatType) {\n  const utcDate = new Date(value * 1000);\n  const [, AmPm] = utcDate\n    .toLocaleString('en-US', { hour: 'numeric', hour12: meridiem })\n    .split(' ');\n  const formatted = utcDate.toUTCString();\n  const [, date] = formatted.split(',');\n  const [day, month, year, time] = date.trim().split(' ');\n  const [hours, minutes, sec] = time.split(':');\n  const seconds = `:${sec}`;\n  const timeFormatted = `${hours}:${minutes}${noSeconds ? '' : seconds}`;\n  const utcSuffix = utc ? 'UTC' : '';\n  const meridiemSuffix = meridiem ? AmPm : '';\n  const suffix = `${meridiemSuffix} ${utcSuffix}`.trim();\n\n  return `${month} ${day}, ${year} ${timeFormatted} ${suffix}`.trim();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAUO,SAAS,2BAA2B;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AACb,GAAmC;AACjC,QAAM,UAAU,IAAI,KAAK,QAAQ,GAAI;AACrC,QAAM,CAAC,EAAE,IAAI,IAAI,QACd,eAAe,SAAS,EAAE,MAAM,WAAW,QAAQ,SAAS,CAAC,EAC7D,MAAM,GAAG;AACZ,QAAM,YAAY,QAAQ,YAAY;AACtC,QAAM,CAAC,EAAE,IAAI,IAAI,UAAU,MAAM,GAAG;AACpC,QAAM,CAAC,KAAK,OAAO,MAAM,IAAI,IAAI,KAAK,KAAK,EAAE,MAAM,GAAG;AACtD,QAAM,CAAC,OAAO,SAAS,GAAG,IAAI,KAAK,MAAM,GAAG;AAC5C,QAAM,UAAU,IAAI,GAAG;AACvB,QAAM,gBAAgB,GAAG,KAAK,IAAI,OAAO,GAAG,YAAY,KAAK,OAAO;AACpE,QAAM,YAAY,MAAM,QAAQ;AAChC,QAAM,iBAAiB,WAAW,OAAO;AACzC,QAAM,SAAS,GAAG,cAAc,IAAI,SAAS,GAAG,KAAK;AAErD,SAAO,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,aAAa,IAAI,MAAM,GAAG,KAAK;AACpE;",
  "names": []
}
