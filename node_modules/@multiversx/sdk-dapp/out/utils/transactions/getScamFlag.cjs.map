{
  "version": 3,
  "sources": ["../../../src/utils/transactions/getScamFlag.ts"],
  "sourcesContent": ["import * as linkify from 'linkifyjs';\nimport {\n  SuspiciousLinkType,\n  SuspiciousLinkPropsType,\n  TextWithLinksType\n} from 'types';\n\nexport const getTextWithLinks = (text: string): TextWithLinksType => {\n  const links = linkify.find(text);\n\n  // If no links are present in the text, return the text unmodified\n  if (!links.length) {\n    return {\n      textWithLinks: text,\n      hasLinks: false\n    };\n  }\n\n  let textWithLinks = text;\n\n  // Replace the previous links in text with normalized links\n  for (const link of links) {\n    const previousLink = text.substring(link.start, link.end);\n    textWithLinks = textWithLinks.replace(previousLink, link.value);\n  }\n\n  return {\n    textWithLinks,\n    hasLinks: true\n  };\n};\n\n/**\n * @description It checks if an asset contains suspicious info\n * If it contains text with links inside, it contains scam info, or it is marked as NSFW,\n * then it has suspicious info and may be a scam\n */\nexport const getScamFlag = ({\n  message,\n  scamInfo,\n  isNsfw,\n  verified,\n  messagePrefix = 'Message hidden due to suspicious content - '\n}: SuspiciousLinkPropsType): SuspiciousLinkType => {\n  if (verified) {\n    return {\n      message: '',\n      textWithLinks: '',\n      isSuspicious: false\n    };\n  }\n\n  const outputMessage = `${messagePrefix}${\n    scamInfo?.info ?? 'suspicious content'\n  }`;\n  const { textWithLinks, hasLinks } = getTextWithLinks(message);\n\n  if (hasLinks || isNsfw || scamInfo) {\n    return {\n      message: outputMessage,\n      textWithLinks,\n      isSuspicious: true\n    };\n  }\n\n  return {\n    message: '',\n    textWithLinks,\n    isSuspicious: false\n  };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAyB;AAOlB,MAAM,mBAAmB,CAAC,SAAoC;AACnE,QAAM,QAAQ,QAAQ,KAAK,IAAI;AAG/B,MAAI,CAAC,MAAM,QAAQ;AACjB,WAAO;AAAA,MACL,eAAe;AAAA,MACf,UAAU;AAAA,IACZ;AAAA,EACF;AAEA,MAAI,gBAAgB;AAGpB,aAAW,QAAQ,OAAO;AACxB,UAAM,eAAe,KAAK,UAAU,KAAK,OAAO,KAAK,GAAG;AACxD,oBAAgB,cAAc,QAAQ,cAAc,KAAK,KAAK;AAAA,EAChE;AAEA,SAAO;AAAA,IACL;AAAA,IACA,UAAU;AAAA,EACZ;AACF;AAOO,MAAM,cAAc,CAAC;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,gBAAgB;AAClB,MAAmD;AACjD,MAAI,UAAU;AACZ,WAAO;AAAA,MACL,SAAS;AAAA,MACT,eAAe;AAAA,MACf,cAAc;AAAA,IAChB;AAAA,EACF;AAEA,QAAM,gBAAgB,GAAG,aAAa,GACpC,UAAU,QAAQ,oBACpB;AACA,QAAM,EAAE,eAAe,SAAS,IAAI,iBAAiB,OAAO;AAE5D,MAAI,YAAY,UAAU,UAAU;AAClC,WAAO;AAAA,MACL,SAAS;AAAA,MACT;AAAA,MACA,cAAc;AAAA,IAChB;AAAA,EACF;AAEA,SAAO;AAAA,IACL,SAAS;AAAA,IACT;AAAA,IACA,cAAc;AAAA,EAChB;AACF;",
  "names": []
}
