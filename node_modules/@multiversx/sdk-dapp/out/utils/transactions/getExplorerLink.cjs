"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getExplorerLink_exports = {};
__export(getExplorerLink_exports, {
  getExplorerLink: () => getExplorerLink
});
module.exports = __toCommonJS(getExplorerLink_exports);
let errorMessageDisplayed = false;
function logError(error) {
  if (!errorMessageDisplayed) {
    console.error(error);
    errorMessageDisplayed = true;
  }
}
function getExplorerLink({
  explorerAddress,
  to
}) {
  try {
    const url = new URL(to);
    return url.href;
  } catch {
    if (!to.startsWith("/")) {
      logError(`Link not prepended by / : ${to}`);
      to = `/${to}`;
    }
    return explorerAddress ? `${explorerAddress}${to}` : to;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getExplorerLink
});
//# sourceMappingURL=getExplorerLink.cjs.map
