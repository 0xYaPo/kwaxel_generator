{
  "version": 3,
  "sources": ["../../../src/utils/window/sanitizeCallbackUrl.ts"],
  "sourcesContent": ["export const sanitizeCallbackUrl = (\n  targetURL: string,\n  vulnerableItems: string[] = ['address']\n) => {\n  const url = new URL(targetURL);\n  const params = new URLSearchParams(url.search);\n\n  vulnerableItems.forEach((vulnerableItem) => params.delete(vulnerableItem));\n\n  const questionMark = Array.from(params.values()).length > 0 ? '?' : '';\n\n  const pathname =\n    url.pathname === '/' && !targetURL.endsWith('/') ? '' : url.pathname;\n\n  if (url.protocol === 'vscode:') {\n    return targetURL;\n  }\n\n  return `${url.origin}${pathname}${questionMark}${params.toString()}${\n    url.hash\n  }`;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,sBAAsB,CACjC,WACA,kBAA4B,CAAC,SAAS,MACnC;AACH,QAAM,MAAM,IAAI,IAAI,SAAS;AAC7B,QAAM,SAAS,IAAI,gBAAgB,IAAI,MAAM;AAE7C,kBAAgB,QAAQ,CAAC,mBAAmB,OAAO,OAAO,cAAc,CAAC;AAEzE,QAAM,eAAe,MAAM,KAAK,OAAO,OAAO,CAAC,EAAE,SAAS,IAAI,MAAM;AAEpE,QAAM,WACJ,IAAI,aAAa,OAAO,CAAC,UAAU,SAAS,GAAG,IAAI,KAAK,IAAI;AAE9D,MAAI,IAAI,aAAa,WAAW;AAC9B,WAAO;AAAA,EACT;AAEA,SAAO,GAAG,IAAI,MAAM,GAAG,QAAQ,GAAG,YAAY,GAAG,OAAO,SAAS,CAAC,GAChE,IAAI,IACN;AACF;",
  "names": []
}
