"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var sanitizeCallbackUrl_exports = {};
__export(sanitizeCallbackUrl_exports, {
  sanitizeCallbackUrl: () => sanitizeCallbackUrl
});
module.exports = __toCommonJS(sanitizeCallbackUrl_exports);
const sanitizeCallbackUrl = (targetURL, vulnerableItems = ["address"]) => {
  const url = new URL(targetURL);
  const params = new URLSearchParams(url.search);
  vulnerableItems.forEach((vulnerableItem) => params.delete(vulnerableItem));
  const questionMark = Array.from(params.values()).length > 0 ? "?" : "";
  const pathname = url.pathname === "/" && !targetURL.endsWith("/") ? "" : url.pathname;
  if (url.protocol === "vscode:") {
    return targetURL;
  }
  return `${url.origin}${pathname}${questionMark}${params.toString()}${url.hash}`;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  sanitizeCallbackUrl
});
//# sourceMappingURL=sanitizeCallbackUrl.cjs.map
