"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var retryMultipleTimes_exports = {};
__export(retryMultipleTimes_exports, {
  retryMultipleTimes: () => retryMultipleTimes
});
module.exports = __toCommonJS(retryMultipleTimes_exports);
var import_asyncActions = require("./asyncActions");
const executeAsyncCall = async (cb, options, args, retries = 0) => {
  try {
    return await cb(...args);
  } catch (error) {
    if (retries < options.retries) {
      if (options?.delay != null) {
        await (0, import_asyncActions.sleep)(options.delay);
      }
      return await executeAsyncCall(cb, options, args, retries + 1);
    }
    return null;
  }
};
const retryMultipleTimes = (cb, options = { retries: 5, delay: 500 }) => async (...args) => {
  return await executeAsyncCall(cb, options, args);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  retryMultipleTimes
});
//# sourceMappingURL=retryMultipleTimes.cjs.map
