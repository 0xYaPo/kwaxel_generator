{
  "version": 3,
  "sources": ["../../src/types/enums.types.ts"],
  "sourcesContent": ["export enum EnvironmentsEnum {\n  testnet = 'testnet',\n  devnet = 'devnet',\n  mainnet = 'mainnet'\n}\n\nexport enum TransactionServerStatusesEnum {\n  pending = 'pending',\n  fail = 'fail',\n  invalid = 'invalid',\n  success = 'success',\n  executed = 'executed',\n  notExecuted = 'not executed',\n  rewardReverted = 'reward-reverted'\n}\n\nexport enum TransactionTypesEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTTransfer = 'ESDTTransfer',\n  ESDTNFTBurn = 'ESDTNFTBurn',\n  ESDTNFTTransfer = 'ESDTNFTTransfer',\n  esdtTransaction = 'esdtTransaction',\n  nftTransaction = 'nftTransaction',\n  scCall = 'scCall'\n}\n\nexport enum TransactionBatchStatusesEnum {\n  signed = 'signed',\n  cancelled = 'cancelled',\n  success = 'success',\n  sent = 'sent',\n  fail = 'fail',\n  timedOut = 'timedOut',\n  invalid = 'invalid'\n}\n\nexport enum TypesOfSmartContractCallsEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer'\n}\n\nexport enum ESDTTransferTypesEnum {\n  ESDTNFTTransfer = 'ESDTNFTTransfer',\n  ESDTNFTBurn = 'ESDTNFTBurn',\n  ESDTNFTAddQuantity = 'ESDTNFTAddQuantity',\n  ESDTNFTCreate = 'ESDTNFTCreate',\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTTransfer = 'ESDTTransfer',\n  ESDTBurn = 'ESDTBurn',\n  ESDTLocalMint = 'ESDTLocalMint',\n  ESDTLocalBurn = 'ESDTLocalBurn',\n  ESDTWipe = 'ESDTWipe',\n  ESDTFreeze = 'ESDTFreeze'\n}\n\nexport enum GuardianActionsEnum {\n  SetGuardian = 'SetGuardian',\n  GuardAccount = 'GuardAccount',\n  UnGuardAccount = 'UnGuardAccount'\n}\n\nexport enum SigningErrorsEnum {\n  notInitialized = 'Provider not initialized',\n  errorSigning = 'Error when signing',\n  errorSigningTx = 'Error signing transaction',\n  missingProviderMessage = 'You need a signer/valid signer to send a transaction, use either WalletProvider, LedgerProvider or WalletConnect',\n  defaultTransactionStatusMessage = 'Undefined transaction status',\n  secondLoginAttemptError = 'Action not allowed. User is logged in. Call logout() first',\n  senderDifferentThanLoggedInAddress = 'You cannot sign transactions from a different account'\n}\nexport enum SigningWarningsEnum {\n  cancelled = 'Signing canceled',\n  transactionCancelled = 'Transaction canceled'\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAK,mBAAL,kBAAKA,sBAAL;AACL,EAAAA,kBAAA,aAAU;AACV,EAAAA,kBAAA,YAAS;AACT,EAAAA,kBAAA,aAAU;AAHA,SAAAA;AAAA,GAAA;AAML,IAAK,gCAAL,kBAAKC,mCAAL;AACL,EAAAA,+BAAA,aAAU;AACV,EAAAA,+BAAA,UAAO;AACP,EAAAA,+BAAA,aAAU;AACV,EAAAA,+BAAA,aAAU;AACV,EAAAA,+BAAA,cAAW;AACX,EAAAA,+BAAA,iBAAc;AACd,EAAAA,+BAAA,oBAAiB;AAPP,SAAAA;AAAA,GAAA;AAUL,IAAK,uBAAL,kBAAKC,0BAAL;AACL,EAAAA,sBAAA,0BAAuB;AACvB,EAAAA,sBAAA,kBAAe;AACf,EAAAA,sBAAA,iBAAc;AACd,EAAAA,sBAAA,qBAAkB;AAClB,EAAAA,sBAAA,qBAAkB;AAClB,EAAAA,sBAAA,oBAAiB;AACjB,EAAAA,sBAAA,YAAS;AAPC,SAAAA;AAAA,GAAA;AAUL,IAAK,+BAAL,kBAAKC,kCAAL;AACL,EAAAA,8BAAA,YAAS;AACT,EAAAA,8BAAA,eAAY;AACZ,EAAAA,8BAAA,aAAU;AACV,EAAAA,8BAAA,UAAO;AACP,EAAAA,8BAAA,UAAO;AACP,EAAAA,8BAAA,cAAW;AACX,EAAAA,8BAAA,aAAU;AAPA,SAAAA;AAAA,GAAA;AAUL,IAAK,gCAAL,kBAAKC,mCAAL;AACL,EAAAA,+BAAA,0BAAuB;AACvB,EAAAA,+BAAA,qBAAkB;AAFR,SAAAA;AAAA,GAAA;AAKL,IAAK,wBAAL,kBAAKC,2BAAL;AACL,EAAAA,uBAAA,qBAAkB;AAClB,EAAAA,uBAAA,iBAAc;AACd,EAAAA,uBAAA,wBAAqB;AACrB,EAAAA,uBAAA,mBAAgB;AAChB,EAAAA,uBAAA,0BAAuB;AACvB,EAAAA,uBAAA,kBAAe;AACf,EAAAA,uBAAA,cAAW;AACX,EAAAA,uBAAA,mBAAgB;AAChB,EAAAA,uBAAA,mBAAgB;AAChB,EAAAA,uBAAA,cAAW;AACX,EAAAA,uBAAA,gBAAa;AAXH,SAAAA;AAAA,GAAA;AAcL,IAAK,sBAAL,kBAAKC,yBAAL;AACL,EAAAA,qBAAA,iBAAc;AACd,EAAAA,qBAAA,kBAAe;AACf,EAAAA,qBAAA,oBAAiB;AAHP,SAAAA;AAAA,GAAA;AAML,IAAK,oBAAL,kBAAKC,uBAAL;AACL,EAAAA,mBAAA,oBAAiB;AACjB,EAAAA,mBAAA,kBAAe;AACf,EAAAA,mBAAA,oBAAiB;AACjB,EAAAA,mBAAA,4BAAyB;AACzB,EAAAA,mBAAA,qCAAkC;AAClC,EAAAA,mBAAA,6BAA0B;AAC1B,EAAAA,mBAAA,wCAAqC;AAP3B,SAAAA;AAAA,GAAA;AASL,IAAK,sBAAL,kBAAKC,yBAAL;AACL,EAAAA,qBAAA,eAAY;AACZ,EAAAA,qBAAA,0BAAuB;AAFb,SAAAA;AAAA,GAAA;",
  "names": ["EnvironmentsEnum", "TransactionServerStatusesEnum", "TransactionTypesEnum", "TransactionBatchStatusesEnum", "TypesOfSmartContractCallsEnum", "ESDTTransferTypesEnum", "GuardianActionsEnum", "SigningErrorsEnum", "SigningWarningsEnum"]
}
