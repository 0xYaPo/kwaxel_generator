{
  "version": 3,
  "sources": ["../../src/types/transaction-list-item.types.ts"],
  "sourcesContent": ["import type { SessionTransactionType } from 'types/transactions.types';\n\nexport enum TransactionIconTypeEnum {\n  FAILED = 'failed',\n  MULTIPLE_ASSETS = 'multiple_assets',\n  ASSET = 'asset',\n  NFT = 'nft',\n  SFT = 'sft',\n  CONTRACT = 'contract',\n  SYMBOL = 'symbol'\n}\nexport interface IBaseTransactionParams {\n  address: string;\n  explorerAddress: string;\n  egldLabel: string;\n}\n\nexport interface IGetHistoricalTransactionsParams\n  extends IBaseTransactionParams {\n  transactionsSessions: Record<string, SessionTransactionType>;\n}\n\nexport enum TransactionActionMethodTypeEnum {\n  transfer = 'Transfer',\n  delegate = 'Delegate',\n  stake = 'Stake',\n  unDelegate = 'Undelegate',\n  stakeClaimRewards = 'Stake Claim Rewards',\n  reDelegateRewards = 'Redelegate Rewards',\n  withdraw = 'Withdraw',\n  claimLockedAssets = 'Claim Locked Assets',\n  swapTokensFixedInput = 'Swap',\n  swapTokensFixedOutput = 'Swap',\n  swap = 'Swap',\n  multiPairSwap = 'Multiple Pair Swap',\n  aggregateEgld = 'Aggregate EGLD',\n  addLiquidity = 'Add Liquidity',\n  addLiquidityProxy = 'Add Liquidity Proxy',\n  removeLiquidity = 'Remove Liquidity',\n  removeLiquidityProxy = 'Remove Liquidity Proxy',\n  enterFarm = 'Enter Farm',\n  enterFarmProxy = 'Enter Farm Proxy',\n  enterFarmAndLockRewards = 'Enter Farm & Lock Rewards',\n  enterFarmAndLockRewardsProxy = 'Enter Farm & Lock Rewards Proxy',\n  exitFarm = 'Exit Farm',\n  exitFarmProxy = 'Exit Farm Proxy',\n  claimRewards = 'Claim Rewards',\n  claimRewardsProxy = 'Claim Rewards Proxy',\n  compoundRewards = 'Reinvest Rewards',\n  compoundRewardsProxy = 'Reinvest Rewards Proxy',\n  createNftMinter = 'Create NFT Minter',\n  scDeploy = 'Smart Contract Deploy',\n  wrapEgld = 'Wrap EGLD',\n  unwrapEgld = 'Unwrap EGLD',\n  lockAssets = 'Lock Assets',\n  unlockAssets = 'Unlock Assets',\n  mergeLockedAssetTokens = 'Merge Locked Tokens',\n  stakeFarm = 'Stake Farm',\n  stakeFarmProxy = 'Stake Farm Proxy',\n  stakeFarmTokens = 'Stake Farm Tokens',\n  stakeFarmTokensProxy = 'Stake Farm Tokens Proxy',\n  unstakeFarm = 'Unstake Farm',\n  unstakeFarmProxy = 'Unstake Farm Proxy Proxy',\n  unstakeFarmTokens = 'Unstake Farm Tokens',\n  unstakeFarmTokensProxy = 'Unstake Farm Proxy',\n  claimDualYield = 'Claim Dual Yield',\n  claimDualYieldProxy = 'Claim Dual Yield Proxy',\n  unbondFarm = 'Unbond Farm',\n  ClaimDeveloperRewards = 'Claim Developer Rewards',\n  ChangeOwnerAddress = 'Change Owner Address',\n  SetUserName = 'Set Username',\n  SaveKeyValue = 'Save Key Value',\n  ESDTTransfer = 'Transfer ESDT',\n  ESDTBurn = 'Burn ESDT',\n  ESDTFreeze = 'Freeze ESDT',\n  ESDTUnFreeze = 'Unfreeze ESDT',\n  ESDTWipe = 'Wipe ESDT',\n  ESDTPause = 'Pause ESDT',\n  ESDTUnPause = 'Unpause ESDTBurn',\n  ESDTSetRole = 'Set ESDT Role',\n  ESDTUnSetRole = 'Unset ESDT Role',\n  ESDTSetLimitedTransfer = 'Set ESDT Limited Transfer',\n  ESDTUnSetLimitedTransfer = 'Unset ESDT Limited Transfer',\n  ESDTLocalBurn = 'Local ESDT Burn',\n  ESDTLocalMint = 'Local ESDT Mint',\n  ESDTNFTTransfer = 'Transfer ESDT/NFT',\n  ESDTNFTCreate = 'Create ESDT/NFT',\n  ESDTNFTAddQuantity = 'Add ESDT/NFT Quantity',\n  ESDTNFTBurn = 'Burn ESDT/NFT',\n  ESDTNFTAddURI = 'Add ESDT/NFT URI',\n  ESDTNFTUpdateAttributes = 'Update ESDT/NFT Attributes',\n  MultiESDTNFTTransfer = 'Multiple ESDT/NFT Transfer',\n  SetGuardian = 'Register Guardian',\n  GuardAccount = 'Activate Guardian',\n  UnGuardAccount = 'Deactivate Guardian'\n}\n"],
  "mappings": "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",
  "names": ["TransactionIconTypeEnum", "TransactionActionMethodTypeEnum"]
}
