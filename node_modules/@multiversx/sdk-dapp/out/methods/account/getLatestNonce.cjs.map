{
  "version": 3,
  "sources": ["../../../src/methods/account/getLatestNonce.ts"],
  "sourcesContent": ["import { accountNonceSelector } from '../../store/selectors/accountSelectors';\nimport { transactionsSliceSelector } from '../../store/selectors/transactionsSelector';\nimport { getState } from '../../store/store';\nimport { AccountType } from '../../types/account.types';\n\nexport function getLatestNonce(apiAccount: AccountType | null) {\n  const state = getState();\n  const transactionsSessions = transactionsSliceSelector(state);\n  const currentAccountNonce = accountNonceSelector(state);\n\n  // Get the max transactions nonce\n  let lastTransactionNonce = Object.keys(transactionsSessions)\n    .map(Number) // Convert keys to numbers (timestamps)\n    .reduce((maxNonce, timestamp) => {\n      const transactions = transactionsSessions[timestamp]?.transactions || [];\n      return Math.max(maxNonce, ...transactions.map((tx) => tx.nonce), 0);\n    }, 0);\n\n  if (lastTransactionNonce > 0) {\n    lastTransactionNonce += 1; // Increment only if there's at least one pending transaction\n  }\n\n  if (apiAccount == null) {\n    const currentStoreNonce = Math.max(\n      lastTransactionNonce,\n      currentAccountNonce\n    );\n    return currentStoreNonce;\n  }\n\n  const currentNonce = Math.max(\n    lastTransactionNonce,\n    apiAccount.nonce,\n    currentAccountNonce\n  );\n\n  return currentNonce;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAqC;AACrC,kCAA0C;AAC1C,mBAAyB;AAGlB,SAAS,eAAe,YAAgC;AAC7D,QAAM,YAAQ,uBAAS;AACvB,QAAM,2BAAuB,uDAA0B,KAAK;AAC5D,QAAM,0BAAsB,8CAAqB,KAAK;AAGtD,MAAI,uBAAuB,OAAO,KAAK,oBAAoB,EACxD,IAAI,MAAM,EACV,OAAO,CAAC,UAAU,cAAc;AAC/B,UAAM,eAAe,qBAAqB,SAAS,GAAG,gBAAgB,CAAC;AACvE,WAAO,KAAK,IAAI,UAAU,GAAG,aAAa,IAAI,CAAC,OAAO,GAAG,KAAK,GAAG,CAAC;AAAA,EACpE,GAAG,CAAC;AAEN,MAAI,uBAAuB,GAAG;AAC5B,4BAAwB;AAAA,EAC1B;AAEA,MAAI,cAAc,MAAM;AACtB,UAAM,oBAAoB,KAAK;AAAA,MAC7B;AAAA,MACA;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAEA,QAAM,eAAe,KAAK;AAAA,IACxB;AAAA,IACA,WAAW;AAAA,IACX;AAAA,EACF;AAEA,SAAO;AACT;",
  "names": []
}
