"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var setGasStationMetadata_exports = {};
__export(setGasStationMetadata_exports, {
  setGasStationMetadata: () => setGasStationMetadata
});
module.exports = __toCommonJS(setGasStationMetadata_exports);
var import_getGasStationMetadata = require("../../../apiCalls/configuration/getGasStationMetadata");
var import_networkActions = require("../../../store/actions/network/networkActions");
var import_networkSelectors = require("../../../store/selectors/networkSelectors");
var import_store = require("../../../store/store");
async function setGasStationMetadata({
  shard,
  apiAddress
}) {
  if (shard == null) {
    return;
  }
  try {
    const fetchedGasMetadata = await (0, import_getGasStationMetadata.getGasStationMetadataFromApi)(
      shard,
      apiAddress
    );
    if (!fetchedGasMetadata?.[shard]?.lastBlock) {
      return;
    }
    const network = (0, import_networkSelectors.networkSelector)((0, import_store.getState)());
    const hasDifferentGasStationMetadata = !network.gasStationMetadata || !network.gasStationMetadata[shard] || network.gasStationMetadata[shard].lastBlock !== fetchedGasMetadata[shard].lastBlock;
    if (hasDifferentGasStationMetadata) {
      (0, import_networkActions.initializeNetworkConfig)({
        ...network,
        gasStationMetadata: {
          ...network.gasStationMetadata,
          ...fetchedGasMetadata
        }
      });
    }
  } catch (err) {
    console.error("Error fetching gas station metadata:", err);
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  setGasStationMetadata
});
//# sourceMappingURL=setGasStationMetadata.cjs.map
