export interface IEventBus {
    subscribe(event: string, callback: Function): () => void;
    publish(event: string, data?: any): void;
    unsubscribe(event: string, callback: Function): void;
}
export declare class EventBus implements IEventBus {
    private subscribers;
    constructor();
    subscribe(event: string, callback: Function): () => void;
    publish(event: string, data?: any): void;
    unsubscribe(event: string, callback: Function): void;
}
