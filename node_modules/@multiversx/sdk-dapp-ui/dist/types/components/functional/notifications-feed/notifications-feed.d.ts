import type { IEventBus } from "../../../utils/EventBus";
import type { ITransactionListItem } from '../../visual/transaction-list-item/transaction-list-item.types';
import type { ITransactionToast } from '../toasts-list/components/transaction-toast/transaction-toast.type';
export declare class NotificationsFeed {
    private readonly eventBus;
    private readonly connectionMonitor;
    private closeEventTimeout;
    private unsubscribeFunctions;
    isOpen: boolean;
    pendingTransactions: ITransactionToast[];
    transactionsHistory: ITransactionListItem[];
    closeWithAnimation(): Promise<unknown>;
    getEventBus(): Promise<IEventBus>;
    disconnectedCallback(): void;
    componentDidLoad(): void;
    private readonly handleClose;
    private readonly handleClear;
    private readonly handleViewAll;
    private clearTimeouts;
    private readonly pendingTransactionsUpdate;
    private readonly transactionsHistoryUpdate;
    render(): any;
}
