import type { IProviderBase } from "../../../types/provider.types";
import type { IEventBus } from "../../../utils/EventBus";
import type { IUnlockPanelManagerData } from './unlock-panel.types';
export declare class UnlockPanel {
    hostElement: HTMLElement;
    private readonly eventBus;
    private unsubscribeFunctions;
    private anchor;
    private readonly connectionMonitor;
    isOpen: boolean;
    walletAddress: IUnlockPanelManagerData['walletAddress'];
    allowedProviders: IUnlockPanelManagerData['providers'];
    isLoggingIn: boolean;
    isIntroScreenVisible: boolean;
    selectedMethod: IProviderBase | null;
    getEventBus(): Promise<IEventBus>;
    closeWithAnimation(): Promise<unknown>;
    componentDidLoad(): void;
    disconnectedCallback(): Promise<void>;
    private isExtensionInstalled;
    private isMetaMaskInstalled;
    private isCustomProvider;
    private setAnchor;
    private readonly unlockPanelUpdate;
    private handleLogin;
    private readonly handleResetLoginState;
    private readonly handleClose;
    private readonly handleAccess;
    render(): any;
}
