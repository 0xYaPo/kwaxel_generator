import { p as proxyCustomElement, H, h } from './p-CX8jKKkc.js';
import { c as classNames } from './p-DMLRPGid.js';
import { d as defineCustomElement$1 } from './p-CrqSzchw.js';

const TransactionIcon = /*@__PURE__*/ proxyCustomElement(class TransactionIcon extends H {
    constructor() {
        super();
        this.__registerHost();
    }
    render() {
        if (!this.iconInfo) {
            return null;
        }
        return (h("mvx-fa-icon", { class: classNames({
                'mvx:text-error': this.iconInfo.icon === 'faTimes',
                'mvx:text-pending': this.iconInfo.icon === 'faHourglass',
            }, this.class, 'transaction-icon'), icon: this.iconInfo.icon, description: this.iconInfo.tooltip }));
    }
}, [256, "mvx-transaction-icon", {
        "class": [1],
        "iconInfo": [16, "icon-info"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["mvx-transaction-icon", "mvx-fa-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "mvx-transaction-icon":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, TransactionIcon);
            }
            break;
        case "mvx-fa-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { TransactionIcon as T, defineCustomElement as d };
