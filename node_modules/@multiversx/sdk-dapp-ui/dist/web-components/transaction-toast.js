import { p as proxyCustomElement, H, d as createEvent, h } from './index2.js';
import { d as defineCustomElement$f } from './arrow-up-right-from-square-icon.js';
import { d as defineCustomElement$e } from './check-icon.js';
import { d as defineCustomElement$d } from './copy-button.js';
import { d as defineCustomElement$c } from './copy-icon.js';
import { d as defineCustomElement$b } from './default-transaction-icon-large.js';
import { d as defineCustomElement$a } from './default-transaction-icon-small.js';
import { d as defineCustomElement$9 } from './explorer-link.js';
import { d as defineCustomElement$8 } from './fa-icon.js';
import { d as defineCustomElement$7 } from './format-amount.js';
import { d as defineCustomElement$6 } from './transaction-asset-icon.js';
import { d as defineCustomElement$5 } from './transaction-toast-content.js';
import { d as defineCustomElement$4 } from './transaction-toast-details.js';
import { d as defineCustomElement$3 } from './transaction-toast-details-body.js';
import { d as defineCustomElement$2 } from './transaction-toast-progress.js';
import { d as defineCustomElement$1 } from './trim.js';

const transactionToastCss = "/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono);--mvx-color-primary:var(--mvx-text-color-primary)}}@layer base{*,::backdrop,:after,:before{border:0 solid;box-sizing:border-box;margin:0;padding:0}::file-selector-button{appearance:button;background-color:#0000;border:0 solid;border-radius:0;box-sizing:border-box;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;margin:0;margin-inline-end:4px;opacity:1;padding:0}:host,html{-webkit-text-size-adjust:100%;font-family:var(--mvx-default-font-family,ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:var(--mvx-default-font-feature-settings,normal);font-variation-settings:var(--mvx-default-font-variation-settings,normal);line-height:1.5;tab-size:4;-webkit-tap-highlight-color:transparent}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:var(--mvx-default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-feature-settings:var(--mvx-default-mono-font-feature-settings,normal);font-size:1em;font-variation-settings:var(--mvx-default-mono-font-variation-settings,normal)}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}menu,ol,ul{list-style:none}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}button,input,optgroup,select,textarea{background-color:#0000;border-radius:0;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;opacity:1}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::placeholder{opacity:1}@supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px){::placeholder{color:currentColor}@supports (color:color-mix(in lab,red,red)){::placeholder{color:color-mix(in oklab,currentColor 50%,transparent)}}}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex;padding-block:0}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){appearance:button}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono);--mvx-color-primary:var(--mvx-text-color-primary)}}@layer base{}@layer base{}@layer base{}@layer components;@layer utilities{.mvx\\:fill-primary\\!{fill:var(--mvx-color-primary)!important}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components;.transaction-toast{position:relative}";

const TransactionToast = /*@__PURE__*/ proxyCustomElement(class TransactionToast extends H {
    constructor() {
        super();
        this.__registerHost();
        this.deleteToast = createEvent(this, "deleteToast", 7);
        this.toastId = '';
        this.processedTransactionsStatus = '';
        this.transactions = [];
    }
    handleDeleteToast() {
        this.deleteToast.emit();
    }
    render() {
        var _a, _b;
        const isStatusPending = this.transactions.every(tx => tx.status === 'pending');
        return (h("div", { key: '0094b41b9598141c472db9ddb2deb5175917a101', class: "transaction-toast" }, h("mvx-transaction-toast-progress", { key: this.toastId, startTime: (_a = this.transactionProgressState) === null || _a === void 0 ? void 0 : _a.startTime, endTime: (_b = this.transactionProgressState) === null || _b === void 0 ? void 0 : _b.endTime, isStatusPending: isStatusPending }, h("mvx-transaction-toast-content", { key: 'f7abd5ac8fd8f44986e2500ee341ec190cf776e0', fullWidth: this.fullWidth, toastDataState: this.toastDataState, transactions: this.transactions, processedTransactionsStatus: this.processedTransactionsStatus, onDeleteToast: this.handleDeleteToast.bind(this) }))));
    }
    static get style() { return transactionToastCss; }
}, [256, "mvx-transaction-toast", {
        "toastId": [1, "toast-id"],
        "wrapperClass": [1, "wrapper-class"],
        "fullWidth": [4, "full-width"],
        "processedTransactionsStatus": [1, "processed-transactions-status"],
        "transactions": [16],
        "toastDataState": [16, "toast-data-state"],
        "transactionProgressState": [16, "transaction-progress-state"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["mvx-transaction-toast", "mvx-arrow-up-right-from-square-icon", "mvx-check-icon", "mvx-copy-button", "mvx-copy-icon", "mvx-default-transaction-icon-large", "mvx-default-transaction-icon-small", "mvx-explorer-link", "mvx-fa-icon", "mvx-format-amount", "mvx-transaction-asset-icon", "mvx-transaction-toast-content", "mvx-transaction-toast-details", "mvx-transaction-toast-details-body", "mvx-transaction-toast-progress", "mvx-trim"];
    components.forEach(tagName => { switch (tagName) {
        case "mvx-transaction-toast":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, TransactionToast);
            }
            break;
        case "mvx-arrow-up-right-from-square-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$f();
            }
            break;
        case "mvx-check-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$e();
            }
            break;
        case "mvx-copy-button":
            if (!customElements.get(tagName)) {
                defineCustomElement$d();
            }
            break;
        case "mvx-copy-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$c();
            }
            break;
        case "mvx-default-transaction-icon-large":
            if (!customElements.get(tagName)) {
                defineCustomElement$b();
            }
            break;
        case "mvx-default-transaction-icon-small":
            if (!customElements.get(tagName)) {
                defineCustomElement$a();
            }
            break;
        case "mvx-explorer-link":
            if (!customElements.get(tagName)) {
                defineCustomElement$9();
            }
            break;
        case "mvx-fa-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$8();
            }
            break;
        case "mvx-format-amount":
            if (!customElements.get(tagName)) {
                defineCustomElement$7();
            }
            break;
        case "mvx-transaction-asset-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$6();
            }
            break;
        case "mvx-transaction-toast-content":
            if (!customElements.get(tagName)) {
                defineCustomElement$5();
            }
            break;
        case "mvx-transaction-toast-details":
            if (!customElements.get(tagName)) {
                defineCustomElement$4();
            }
            break;
        case "mvx-transaction-toast-details-body":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "mvx-transaction-toast-progress":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "mvx-trim":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { TransactionToast as T, defineCustomElement as d };
