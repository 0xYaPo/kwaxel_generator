import { p as proxyCustomElement, H, d as createEvent, h } from './index2.js';

const sidePanelSwiperCss = "/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-color-primary:var(--mvx-text-color-primary);--mvx-text-base:1rem;--mvx-text-base--line-height:1.5;--mvx-color-link:var(--mvx-link-color);--mvx-color-accent:var(--mvx-text-accent-color);--mvx-radius-lg:.5rem;--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-spacing:.25rem;--mvx-radius-3xl:1.5rem;--mvx-ease-in-out:cubic-bezier(.4,0,.2,1);--mvx-default-transition-duration:.15s;--mvx-default-transition-timing-function:cubic-bezier(.4,0,.2,1);--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono)}}@layer base{*,::backdrop,:after,:before{border:0 solid;box-sizing:border-box;margin:0;padding:0}::file-selector-button{appearance:button;background-color:#0000;border:0 solid;border-radius:0;box-sizing:border-box;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;margin:0;margin-inline-end:4px;opacity:1;padding:0}:host,html{-webkit-text-size-adjust:100%;font-family:var(--mvx-default-font-family,ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:var(--mvx-default-font-feature-settings,normal);font-variation-settings:var(--mvx-default-font-variation-settings,normal);line-height:1.5;tab-size:4;-webkit-tap-highlight-color:transparent}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:var(--mvx-default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-feature-settings:var(--mvx-default-mono-font-feature-settings,normal);font-size:1em;font-variation-settings:var(--mvx-default-mono-font-variation-settings,normal)}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}menu,ol,ul{list-style:none}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}button,input,optgroup,select,textarea{background-color:#0000;border-radius:0;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;opacity:1}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::placeholder{opacity:1}@supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px){::placeholder{color:currentColor}@supports (color:color-mix(in lab,red,red)){::placeholder{color:color-mix(in oklab,currentColor 50%,transparent)}}}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex;padding-block:0}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){appearance:button}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-color-primary:var(--mvx-text-color-primary);--mvx-spacing:.25rem;--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono)}}@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components;@layer utilities{.mvx\\:fill-primary\\!{fill:var(--mvx-color-primary)!important}.mvx\\:h-auto{height:auto}.mvx\\:w-48{width:calc(var(--mvx-spacing)*48)}.mvx\\:w-50{width:calc(var(--mvx-spacing)*50)}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,::backdrop,:after,:before{--tw-duration:initial;--tw-ease:initial;--tw-translate-x:0;--tw-translate-y:0;--tw-translate-z:0;--tw-pan-x:initial;--tw-pan-y:initial;--tw-pinch-zoom:initial}}}@layer base{}@layer components;@layer utilities{.mvx\\:absolute{position:absolute}.mvx\\:relative{position:relative}.mvx\\:top-0{top:calc(var(--mvx-spacing)*0)}.mvx\\:right-0{right:calc(var(--mvx-spacing)*0)}.mvx\\:left-0{left:calc(var(--mvx-spacing)*0)}.mvx\\:h-3\\!{height:calc(var(--mvx-spacing)*3)!important}.mvx\\:h-5\\!{height:calc(var(--mvx-spacing)*5)!important}.mvx\\:h-12{height:calc(var(--mvx-spacing)*12)}.mvx\\:w-auto\\!{width:auto!important}.mvx\\:w-full{width:100%}.mvx\\:rotate-90{rotate:90deg}.mvx\\:fill-link\\!{fill:var(--mvx-color-link)!important}.mvx\\:text-base\\!{font-size:var(--mvx-text-base)!important;line-height:var(--tw-leading,var(--mvx-text-base--line-height))!important}.mvx\\:transition-all{transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function))}.mvx\\:duration-200{--tw-duration:.2s;transition-duration:.2s}.mvx\\:ease-in-out{--tw-ease:var(--mvx-ease-in-out);transition-timing-function:var(--mvx-ease-in-out)}.mvx\\:mt-auto{margin-top:auto}.mvx\\:ml-auto{margin-left:auto}.mvx\\:hidden{display:none}.mvx\\:h-auto\\!{height:auto!important}.mvx\\:w-4\\!{width:calc(var(--mvx-spacing)*4)!important}.mvx\\:overflow-hidden{overflow:hidden}.mvx\\:rounded-br-lg{border-bottom-right-radius:var(--mvx-radius-lg)}.mvx\\:rounded-bl-lg{border-bottom-left-radius:var(--mvx-radius-lg)}.mvx\\:fill-accent\\!{fill:var(--mvx-color-accent)!important}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components,utilities;:host{display:flex}:host .side-panel-swiper-wrapper{bottom:calc(var(--mvx-spacing)*0);left:calc(var(--mvx-spacing)*0);position:fixed;right:calc(var(--mvx-spacing)*0);top:calc(var(--mvx-spacing)*0);z-index:50}:host .side-panel-swiper-wrapper:before{bottom:calc(var(--mvx-spacing)*0);left:calc(var(--mvx-spacing)*0);opacity:.9;right:calc(var(--mvx-spacing)*0);top:calc(var(--mvx-spacing)*0);transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));--tw-duration:.2s;pointer-events:none;--tw-ease:var(--mvx-ease-in-out);background:var(--mvx-neutral-900);content:\"\";position:absolute;transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out)}@supports ((-webkit-backdrop-filter:none) or (backdrop-filter:none)){:host .side-panel-swiper-wrapper:before{-webkit-backdrop-filter:blur(.375rem);backdrop-filter:blur(.375rem);background:var(--mvx-neutral-900);opacity:.5}}:host .side-panel-swiper-wrapper.visible{display:block}:host .side-panel-swiper-wrapper.hidden{display:none}:host .side-panel-swiper-wrapper.hidden .side-panel-swiper{--tw-translate-y:100%;translate:var(--tw-translate-x)var(--tw-translate-y)}:host .side-panel-swiper-wrapper .side-panel-swiper{bottom:calc(var(--mvx-spacing)*0);left:calc(var(--mvx-spacing)*0);right:calc(var(--mvx-spacing)*0);--tw-pan-y:pan-y;backface-visibility:hidden;border-top-left-radius:var(--mvx-radius-3xl);border-top-right-radius:var(--mvx-radius-3xl);display:flex;flex-direction:column;height:auto;justify-content:flex-end;min-height:100dvh;position:absolute;touch-action:var(--tw-pan-x,)var(--tw-pan-y,)var(--tw-pinch-zoom,);transition-property:none;will-change:transform}:host .side-panel-swiper-wrapper .side-panel-swiper .side-panel-swiper-handle-wrapper{height:calc(var(--mvx-spacing)*8);position:relative;top:calc(var(--mvx-spacing)*8);width:100%;z-index:12}:host .side-panel-swiper-wrapper .side-panel-swiper .side-panel-swiper-handle-wrapper .side-panel-swiper-handle-container{bottom:calc(var(--mvx-spacing)*0);cursor:grab;display:flex;justify-content:center;left:calc(var(--mvx-spacing)*0);position:absolute;right:calc(var(--mvx-spacing)*0);top:calc(var(--mvx-spacing)*0);touch-action:none;-webkit-user-select:none;user-select:none}:host .side-panel-swiper-wrapper .side-panel-swiper .side-panel-swiper-handle-wrapper .side-panel-swiper-handle-container:active{cursor:grabbing}:host .side-panel-swiper-wrapper .side-panel-swiper .side-panel-swiper-handle-wrapper .side-panel-swiper-handle-container .side-panel-swiper-handle{background-color:var(--mvx-text-color-primary);border-radius:.25rem;height:calc(var(--mvx-spacing)*1);margin-top:calc(var(--mvx-spacing)*3);width:calc(var(--mvx-spacing)*32)}:host .side-panel-swiper-wrapper .side-panel-swiper .side-panel-swiper-content{max-height:calc(100dvh - 4rem);overflow-y:auto}@property --tw-duration{syntax:\"*\";inherits:false}@property --tw-ease{syntax:\"*\";inherits:false}@property --tw-translate-x{syntax:\"*\";inherits:false;initial-value:0}@property --tw-translate-y{syntax:\"*\";inherits:false;initial-value:0}@property --tw-translate-z{syntax:\"*\";inherits:false;initial-value:0}@property --tw-pan-x{syntax:\"*\";inherits:false}@property --tw-pan-y{syntax:\"*\";inherits:false}@property --tw-pinch-zoom{syntax:\"*\";inherits:false}@media (min-width:30rem){.mvx\\:xs\\:mt-5{margin-top:calc(var(--mvx-spacing)*5)}.mvx\\:xs\\:h-85{height:calc(var(--mvx-spacing)*85)}.mvx\\:xs\\:w-100{width:calc(var(--mvx-spacing)*100)}.mvx\\:xs\\:flex{display:flex}}@media (min-width:40rem){.mvx\\:sm\\:block{display:block}.mvx\\:sm\\:flex{display:flex}.mvx\\:sm\\:hidden{display:none}}@media (min-width:480px){:host{flex-direction:column;height:100%}:host .side-panel-swiper-wrapper{height:100%;position:static}:host .side-panel-swiper-wrapper:before{content:none}:host .side-panel-swiper-wrapper.hidden{display:block}:host .side-panel-swiper-wrapper .side-panel-swiper{border-radius:0;height:100%;justify-content:unset;min-height:auto;position:static;transform:none}:host .side-panel-swiper-wrapper .side-panel-swiper .side-panel-swiper-handle-wrapper{display:none}:host .side-panel-swiper-wrapper .side-panel-swiper .side-panel-swiper-content{height:100%;max-height:none}}";

const SidePanelSwiper = /*@__PURE__*/ proxyCustomElement(class SidePanelSwiper extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.sheetDismiss = createEvent(this, "sheetDismiss", 7);
        this.sheetSnapChange = createEvent(this, "sheetSnapChange", 7);
        this.open = false;
        this.sidePanelIdentifier = '';
        this.isVisible = false;
        this.isDragging = false;
        this.currentSnapIndex = 1;
        this.snapPointsArray = ['100%'];
        this.dragState = {
            startY: 0,
            currentY: 0,
            startTransform: 100,
            isAnimating: false,
        };
        this.handleDragStart = (e) => {
            if (this.dragState.isAnimating) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            this.isDragging = true;
            const clientY = 'touches' in e ? e.touches[0].clientY : e.clientY;
            this.dragState.startY = clientY;
            this.dragState.currentY = clientY;
            // Get current transform
            const transform = this.getCurrentTransform();
            this.dragState.startTransform = transform;
            // Add global event listeners
            document.addEventListener('mousemove', this.handleDragMove, {
                passive: false,
            });
            document.addEventListener('touchmove', this.handleDragMove, {
                passive: false,
            });
            document.addEventListener('mouseup', this.handleDragEnd);
            document.addEventListener('touchend', this.handleDragEnd);
        };
        this.handleDragMove = (e) => {
            if (!this.isDragging || !this.sheetElement || this.dragState.isAnimating) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            const clientY = 'touches' in e ? e.touches[0].clientY : e.clientY;
            this.dragState.currentY = clientY;
            const deltaY = this.dragState.currentY - this.dragState.startY;
            const viewportHeight = window.innerHeight;
            const deltaPercent = (deltaY / viewportHeight) * 100;
            const newTransform = Math.min(100, Math.max(0, this.dragState.startTransform + deltaPercent));
            this.sheetElement.style.transform = `translateY(${newTransform}%)`;
        };
        this.handleDragEnd = () => {
            if (!this.isDragging || this.dragState.isAnimating) {
                return;
            }
            this.isDragging = false;
            // Remove global event listeners
            document.removeEventListener('mousemove', this.handleDragMove);
            document.removeEventListener('touchmove', this.handleDragMove);
            document.removeEventListener('mouseup', this.handleDragEnd);
            document.removeEventListener('touchend', this.handleDragEnd);
            const currentTransform = this.getCurrentTransform();
            const velocity = this.dragState.currentY - this.dragState.startY;
            // Close if dragged down significantly or fast downward velocity
            if (currentTransform > 70 || velocity > 150) {
                this.close();
                return;
            }
            // Find closest snap point
            const snapPercentages = this.snapPointsArray.map(point => parseFloat(point));
            let closestIndex = 0;
            let closestDistance = Math.abs(100 - currentTransform - snapPercentages[0]);
            for (let i = 1; i < snapPercentages.length; i++) {
                const distance = Math.abs(100 - currentTransform - snapPercentages[i]);
                if (distance < closestDistance) {
                    closestDistance = distance;
                    closestIndex = i;
                }
            }
            this.currentSnapIndex = closestIndex;
            this.animateToPosition(closestIndex, true);
        };
    }
    componentDidLoad() {
        this.isVisible = this.open;
        if (this.sheetElement && window.innerWidth <= 480) {
            this.sheetElement.style.transform = 'translateY(100%)';
        }
        if (this.open) {
            this.openToSnapPoint(this.currentSnapIndex);
        }
    }
    openChanged(newValue) {
        if (newValue && !this.isVisible) {
            this.openToSnapPoint(this.currentSnapIndex);
        }
        else if (!newValue && this.isVisible) {
            this.close();
        }
    }
    async openToSnapPoint(snapIndex = 1) {
        if (this.dragState.isAnimating) {
            return;
        }
        this.currentSnapIndex = Math.max(0, Math.min(snapIndex, this.snapPointsArray.length - 1));
        this.isVisible = true;
        await new Promise(resolve => setTimeout(resolve, 50));
        if (this.sheetElement && this.isVisible) {
            this.animateToPosition(this.currentSnapIndex, false);
        }
    }
    async close() {
        if (this.dragState.isAnimating || !this.isVisible) {
            return;
        }
        this.animateToClose();
    }
    animateToPosition(snapIndex, emitEvent = true) {
        if (!this.sheetElement || this.dragState.isAnimating) {
            return;
        }
        const snapPercent = parseFloat(this.snapPointsArray[snapIndex] || '50');
        const targetY = 100 - snapPercent;
        this.dragState.isAnimating = true;
        this.dragState.startTransform = targetY;
        this.sheetElement.style.transition = 'transform 350ms cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        this.sheetElement.style.transform = `translateY(${targetY}%)`;
        setTimeout(() => {
            this.dragState.isAnimating = false;
            if (emitEvent && this.isVisible) {
                this.sheetSnapChange.emit({
                    index: snapIndex,
                    snapPoint: this.snapPointsArray[snapIndex],
                });
            }
            this.sheetElement.style.transition = '';
        }, 350);
    }
    animateToClose() {
        if (!this.sheetElement || this.dragState.isAnimating) {
            return;
        }
        this.dragState.isAnimating = true;
        this.sheetElement.style.transition = 'transform 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        this.sheetElement.style.transform = 'translateY(100%)';
        setTimeout(() => {
            this.dragState.isAnimating = false;
            this.isVisible = false;
            this.sheetDismiss.emit();
            this.sheetElement.style.transition = '';
        }, 300);
    }
    getCurrentTransform() {
        if (!this.sheetElement) {
            return 100;
        }
        const transform = this.sheetElement.style.transform;
        if (transform && transform.includes('translateY')) {
            const match = transform.match(/translateY\(([^)]+)%?\)/);
            if (match) {
                return parseFloat(match[1].replace('%', ''));
            }
        }
        return 100;
    }
    render() {
        return (h("div", { key: 'bbe793fea37aed431de9e5e240597c3b56bac453', class: { 'side-panel-swiper-wrapper': true, 'visible': this.isVisible, 'hidden': !this.isVisible } }, h("div", { key: '7053e6a9e4b96ac55e773572ace8235de35cafac', class: "side-panel-swiper", ref: el => (this.sheetElement = el), onClick: (event) => event.stopPropagation() }, h("div", { key: 'c7f8d64e93ce40f11b34fa1a71e69b958bcaed2f', class: "side-panel-swiper-handle-wrapper" }, h("div", { key: 'f13d916617e4f78d3ac88a758569e2e80527816f', class: "side-panel-swiper-handle-container", onMouseDown: this.handleDragStart, onTouchStart: this.handleDragStart }, h("div", { key: 'b714e8fd40633960a8e50fe635cd3eea5bd7fc92', class: "side-panel-swiper-handle" }))), h("div", { key: '435d79e6a475d58e29e1970205faf3cd4bc810e4', class: "side-panel-swiper-content" }, h("slot", { key: 'd82c1e3c0a69438e59daf1bfc70755366da96a50' })))));
    }
    get sidePanelSwipeElement() { return this; }
    static get watchers() { return {
        "open": ["openChanged"]
    }; }
    static get style() { return sidePanelSwiperCss; }
}, [257, "mvx-side-panel-swiper", {
        "open": [4],
        "sidePanelIdentifier": [1, "side-panel-identifier"],
        "isVisible": [32],
        "isDragging": [32],
        "currentSnapIndex": [32],
        "openToSnapPoint": [64],
        "close": [64]
    }, undefined, {
        "open": ["openChanged"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["mvx-side-panel-swiper"];
    components.forEach(tagName => { switch (tagName) {
        case "mvx-side-panel-swiper":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, SidePanelSwiper);
            }
            break;
    } });
}

export { SidePanelSwiper as S, defineCustomElement as d };
