import { p as proxyCustomElement, H, h } from './index2.js';
import { E as EventBus, C as ConnectionMonitor } from './EventBus.js';
import { d as defineCustomElement$o } from './arrow-up-right-from-square-icon.js';
import { d as defineCustomElement$n } from './back-arrow-icon.js';
import { d as defineCustomElement$m } from './check-icon.js';
import { d as defineCustomElement$l } from './circle-exclamation-icon.js';
import { d as defineCustomElement$k } from './close-icon.js';
import { d as defineCustomElement$j } from './copy-button.js';
import { d as defineCustomElement$i } from './copy-icon.js';
import { d as defineCustomElement$h } from './default-transaction-icon-large.js';
import { d as defineCustomElement$g } from './default-transaction-icon-small.js';
import { d as defineCustomElement$f } from './explorer-link.js';
import { d as defineCustomElement$e } from './fa-icon.js';
import { d as defineCustomElement$d } from './format-amount.js';
import { d as defineCustomElement$c } from './side-panel.js';
import { d as defineCustomElement$b } from './side-panel-header.js';
import { d as defineCustomElement$a } from './side-panel-swiper.js';
import { d as defineCustomElement$9 } from './transaction-asset-icon.js';
import { d as defineCustomElement$8 } from './transaction-list-item.js';
import { d as defineCustomElement$7 } from './transaction-toast.js';
import { d as defineCustomElement$6 } from './transaction-toast-content.js';
import { d as defineCustomElement$5 } from './transaction-toast-details.js';
import { d as defineCustomElement$4 } from './transaction-toast-details-body.js';
import { d as defineCustomElement$3 } from './transaction-toast-progress.js';
import { d as defineCustomElement$2 } from './trim.js';

var NotificationsFeedEventsEnum;
(function (NotificationsFeedEventsEnum) {
    NotificationsFeedEventsEnum["CLOSE"] = "CLOSE_NOTIFICATIONS_FEED";
    NotificationsFeedEventsEnum["CLEAR"] = "CLEAR_NOTIFICATIONS_FEED_HISTORY";
    NotificationsFeedEventsEnum["OPEN"] = "OPEN_NOTIFICATIONS_FEED";
    // Event to update the pending transactions list
    NotificationsFeedEventsEnum["PENDING_TRANSACTIONS_UPDATE"] = "PENDING_TRANSACTIONS_UPDATE";
    // Event to update the transactions history list
    NotificationsFeedEventsEnum["TRANSACTIONS_HISTORY_UPDATE"] = "TRANSACTIONS_HISTORY_UPDATE";
})(NotificationsFeedEventsEnum || (NotificationsFeedEventsEnum = {}));

const notificationsFeedCss = "/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-color-primary:var(--mvx-text-color-primary);--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-spacing:.25rem;--mvx-text-xs:.75rem;--mvx-text-xs--line-height:1.33333;--mvx-text-base:1rem;--mvx-text-base--line-height:1.5;--mvx-font-weight-normal:400;--mvx-tracking-tight:-.025em;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono)}}@layer base{*,::backdrop,:after,:before{border:0 solid;box-sizing:border-box;margin:0;padding:0}::file-selector-button{appearance:button;background-color:#0000;border:0 solid;border-radius:0;box-sizing:border-box;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;margin:0;margin-inline-end:4px;opacity:1;padding:0}:host,html{-webkit-text-size-adjust:100%;font-family:var(--mvx-default-font-family,ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:var(--mvx-default-font-feature-settings,normal);font-variation-settings:var(--mvx-default-font-variation-settings,normal);line-height:1.5;tab-size:4;-webkit-tap-highlight-color:transparent}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:var(--mvx-default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-feature-settings:var(--mvx-default-mono-font-feature-settings,normal);font-size:1em;font-variation-settings:var(--mvx-default-mono-font-variation-settings,normal)}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}menu,ol,ul{list-style:none}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}button,input,optgroup,select,textarea{background-color:#0000;border-radius:0;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;opacity:1}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::placeholder{opacity:1}@supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px){::placeholder{color:currentColor}@supports (color:color-mix(in lab,red,red)){::placeholder{color:color-mix(in oklab,currentColor 50%,transparent)}}}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex;padding-block:0}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){appearance:button}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono);--mvx-color-primary:var(--mvx-text-color-primary)}}@layer base{}@layer base{}@layer base{}@layer components;@layer utilities{.mvx\\:fill-primary\\!{fill:var(--mvx-color-primary)!important}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,::backdrop,:after,:before{--tw-leading:initial;--tw-font-weight:initial;--tw-tracking:initial}}}@layer base{}@layer components,utilities;:root{--mvx-white:#fff;--mvx-black:#000;--mvx-neutral-225:#e8e8e8;--mvx-neutral-250:#ddd;--mvx-neutral-300:#d4d4d4;--mvx-neutral-400:#a3a3a3;--mvx-neutral-450:#868686;--mvx-neutral-500:#737373;--mvx-neutral-700:#404040;--mvx-neutral-750:#353535;--mvx-neutral-800:#262626;--mvx-neutral-825:#202020;--mvx-neutral-850:#191919;--mvx-neutral-900:#171717;--mvx-neutral-925:#0e0e0e;--mvx-neutral-950:#0a0a0a;--mvx-gray-50:#f9fafb;--mvx-gray-150:#f8f9fa;--mvx-gray-200:#e5e7eb;--mvx-gray-250:#dae0e5;--mvx-gray-350:#c7c7c7;--mvx-gray-500:#6b7280;--mvx-gray-650:#5e5e5e;--mvx-gray-725:#343a40;--mvx-gray-750:#3a3a3a;--mvx-gray-925:#212529;--mvx-stone-75:#faf9f8;--mvx-stone-125:#f3efed;--mvx-stone-150:#e2dedc;--mvx-stone-350:#b6b3af;--mvx-stone-450:#88817a;--mvx-stone-950:#1b1b1b;--mvx-slate-550:#545b62;--mvx-green-400:#4ade80;--mvx-green-650:#14aa3e;--mvx-green-850:#1d6030;--mvx-yellow-400:#facc15;--mvx-yellow-650:#d39e00;--mvx-amber-650:#d68700;--mvx-brown-900:#453412;--mvx-red-400:#f87171;--mvx-red-600:#dc2626;--mvx-red-750:#bd2130;--mvx-red-925:#582424;--mvx-teal-150:#a5fcf0;--mvx-teal-350:#23f7dd;--mvx-teal-925:#143736;--mvx-blue-600:#2563eb;--mvx-blue-650:#007bff;--mvx-blue-750:#0062cc;--mvx-cyan-550:#17a2b8}:root,:root[data-mvx-theme=mvx\\:dark-theme],[data-mvx-theme=mvx\\:dark-theme]{--mvx-text-color-primary:var(--mvx-white);--mvx-text-color-secondary:var(--mvx-stone-350);--mvx-text-color-tertiary:var(--mvx-neutral-225);--mvx-text-accent-color:var(--mvx-teal-350);--mvx-label-color:var(--mvx-neutral-400);--mvx-bg-color-primary:var(--mvx-neutral-900);--mvx-bg-color-secondary:var(--mvx-neutral-825);--mvx-bg-color-tertiary:var(--mvx-neutral-850);--mvx-bg-accent-color:var(--mvx-neutral-950);--mvx-bg-accent-variant-color:var(--mvx-neutral-950);--mvx-hover-color-primary:var(--mvx-neutral-800);--mvx-hover-bg-primary:var(--mvx-white);--mvx-border-color-primary:var(--mvx-neutral-800);--mvx-border-color-secondary:var(--mvx-neutral-750);--mvx-button-bg-primary:var(--mvx-teal-350);--mvx-button-text-primary:var(--mvx-black);--mvx-button-bg-secondary:var(--mvx-neutral-800);--mvx-button-text-secondary:var(--mvx-neutral-225);--mvx-button-bg-hover-secondary:var(--mvx-teal-350);--mvx-button-bg-variant:var(--mvx-stone-950);--mvx-select-bg:var(--mvx-neutral-800);--mvx-select-color:var(--mvx-gray-200);--mvx-select-option-color:var(--mvx-teal-150);--mvx-select-option-bg:var(--mvx-black);--mvx-select-option-bg-mobile:var(--mvx-neutral-800);--mvx-success-color:var(--mvx-green-400);--mvx-success-bg-color:var(--mvx-green-850);--mvx-pending-color:var(--mvx-yellow-400);--mvx-pending-bg-color:var(--mvx-brown-900);--mvx-error-color:var(--mvx-red-400);--mvx-error-bg-color:var(--mvx-red-925);--mvx-pagination-item-bg:var(--mvx-neutral-700);--mvx-pagination-item-bg-hover:var(--mvx-teal-925);--mvx-preloader-bg:var(--mvx-neutral-800);--mvx-preloader-item-bg:var(--mvx-neutral-700);--mvx-warning-text:var(--mvx-yellow-400);--mvx-link-color:var(--mvx-stone-350);--mvx-progress-color:var(--mvx-gray-650);--mvx-progress-accent-color:var(--mvx-teal-350);--mvx-icon-bg:var(--mvx-gray-750);--mvx-scrollbar-thumb:var(--mvx-neutral-750);--mvx-transaction-method:var(--mvx-green-400)}:root[data-mvx-theme=mvx\\:light-theme],[data-mvx-theme=mvx\\:light-theme]{--mvx-text-color-primary:var(--mvx-black);--mvx-text-color-secondary:var(--mvx-stone-450);--mvx-text-color-tertiary:var(--mvx-neutral-800);--mvx-text-accent-color:var(--mvx-black);--mvx-label-color:var(--mvx-neutral-450);--mvx-bg-color-primary:var(--mvx-stone-125);--mvx-bg-color-secondary:var(--mvx-white);--mvx-bg-color-tertiary:var(--mvx-white);--mvx-bg-accent-color:var(--mvx-white);--mvx-bg-accent-variant-color:var(--mvx-stone-150);--mvx-hover-color-primary:var(--mvx-neutral-225);--mvx-hover-bg-primary:var(--mvx-black);--mvx-border-color-primary:var(--mvx-neutral-225);--mvx-border-color-secondary:var(--mvx-neutral-300);--mvx-button-bg-primary:var(--mvx-black);--mvx-button-text-primary:var(--mvx-white);--mvx-button-bg-secondary:var(--mvx-white);--mvx-button-text-secondary:var(--mvx-neutral-800);--mvx-button-bg-hover-secondary:var(--mvx-black);--mvx-button-bg-variant:var(--mvx-stone-75);--mvx-select-bg:var(--mvx-white);--mvx-select-color:var(--mvx-neutral-700);--mvx-select-option-color:var(--mvx-black);--mvx-select-option-bg:var(--mvx-neutral-400);--mvx-select-option-bg-mobile:var(--mvx-neutral-400);--mvx-success-color:var(--mvx-white);--mvx-success-bg-color:var(--mvx-green-650);--mvx-pending-color:var(--mvx-yellow-400);--mvx-pending-bg-color:var(--mvx-brown-900);--mvx-error-color:var(--mvx-red-400);--mvx-error-bg-color:var(--mvx-red-925);--mvx-pagination-item-bg:var(--mvx-neutral-225);--mvx-pagination-item-bg-hover:var(--mvx-neutral-400);--mvx-preloader-bg:var(--mvx-neutral-400);--mvx-preloader-item-bg:var(--mvx-neutral-225);--mvx-warning-text:var(--mvx-amber-650);--mvx-link-color:var(--mvx-neutral-700);--mvx-progress-color:var(--mvx-gray-350);--mvx-progress-accent-color:var(--mvx-black);--mvx-icon-bg:var(--mvx-neutral-250);--mvx-scrollbar-thumb:var(--mvx-neutral-400);--mvx-transaction-method:var(--mvx-green-650)}.feed-content{display:flex;flex-direction:column;gap:calc(var(--mvx-spacing)*5);height:100%;overflow:hidden scroll;padding-top:calc(var(--mvx-spacing)*6);position:relative;width:100%}.feed-content .transaction-toast-content-wrapper{background:var(--mvx-bg-color-secondary);border-color:var(--mvx-bg-color-secondary);width:100%}.feed-content::-webkit-scrollbar{width:calc(var(--mvx-spacing)*1.5)}.feed-content::-webkit-scrollbar-track,.feed-content::-webkit-scrollbar-track:hover{background-clip:padding-box;border:4px solid #0000;border-radius:9999px}.feed-content::-webkit-scrollbar-thumb,.feed-content::-webkit-scrollbar-thumb:hover{background-clip:padding-box;background:var(--mvx-scrollbar-thumb)!important;border:4px solid #0000;border-radius:9999px}.feed-content::-webkit-scrollbar-button{display:none}.feed-content::-webkit-resizer{background-color:#0000}.notifications-info{align-items:flex-start;font-size:var(--mvx-text-xs);gap:calc(var(--mvx-spacing)*2.5);line-height:var(--tw-leading,var(--mvx-text-xs--line-height));--tw-leading:calc(var(--mvx-spacing)*4);line-height:calc(var(--mvx-spacing)*4);--tw-font-weight:var(--mvx-font-weight-normal);color:var(--mvx-warning-text);display:flex;font-weight:var(--mvx-font-weight-normal)}.notifications-info .info-icon{font-size:var(--mvx-text-base);height:calc(var(--mvx-spacing)*5);line-height:var(--tw-leading,var(--mvx-text-base--line-height));text-align:center;width:calc(var(--mvx-spacing)*5);--tw-leading:1;--tw-font-weight:var(--mvx-font-weight-normal);color:var(--mvx-warning-text)!important;font-weight:var(--mvx-font-weight-normal);line-height:1}.notifications-container{display:flex;flex-direction:column;gap:calc(var(--mvx-spacing)*3)}.notifications-container .processing-status{font-size:var(--mvx-text-base);line-height:var(--tw-leading,var(--mvx-text-base--line-height));--tw-leading:calc(var(--mvx-spacing)*6);line-height:calc(var(--mvx-spacing)*6);--tw-font-weight:var(--mvx-font-weight-normal);font-weight:var(--mvx-font-weight-normal);--tw-tracking:var(--mvx-tracking-tight);color:var(--mvx-text-color-secondary);letter-spacing:var(--mvx-tracking-tight)}.activity-section{display:flex;flex-direction:column;gap:calc(var(--mvx-spacing)*3)}.activity-header{align-items:center;display:flex;gap:calc(var(--mvx-spacing)*2.5);justify-content:space-between;padding-top:calc(var(--mvx-spacing)*3)}.activity-header .activity-title{font-size:var(--mvx-text-base);line-height:var(--tw-leading,var(--mvx-text-base--line-height));margin:calc(var(--mvx-spacing)*0);--tw-leading:calc(var(--mvx-spacing)*6);line-height:calc(var(--mvx-spacing)*6);--tw-font-weight:var(--mvx-font-weight-normal);font-weight:var(--mvx-font-weight-normal);--tw-tracking:var(--mvx-tracking-tight);color:var(--mvx-text-color-secondary);letter-spacing:var(--mvx-tracking-tight)}.activity-header .clear-button{cursor:pointer;font-size:var(--mvx-text-xs);line-height:var(--tw-leading,var(--mvx-text-xs--line-height));--tw-leading:calc(var(--mvx-spacing)*4);line-height:calc(var(--mvx-spacing)*4);--tw-font-weight:var(--mvx-font-weight-normal);color:var(--mvx-text-color-primary);font-weight:var(--mvx-font-weight-normal);text-decoration-line:underline;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none;text-underline-position:from-font}.activity-list{display:flex;flex:1;flex-direction:column;gap:calc(var(--mvx-spacing)*1);min-height:calc(var(--mvx-spacing)*0);overflow:hidden auto}.activity-list .no-activity{color:var(--mvx-neutral-500);padding:calc(var(--mvx-spacing)*4);text-align:center}.activity-list>*{box-sizing:border-box;max-width:100%;width:100%}@property --tw-leading{syntax:\"*\";inherits:false}@property --tw-font-weight{syntax:\"*\";inherits:false}@property --tw-tracking{syntax:\"*\";inherits:false}@media (min-width:375px){.feed-content{max-width:calc(var(--mvx-spacing)*110)}}";

const NotificationsFeed = /*@__PURE__*/ proxyCustomElement(class NotificationsFeed extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.eventBus = new EventBus();
        this.connectionMonitor = new ConnectionMonitor();
        this.closeEventTimeout = null;
        this.unsubscribeFunctions = [];
        this.isOpen = false;
        this.pendingTransactions = [];
        this.transactionsHistory = [];
        this.handleClose = () => {
            this.isOpen = false;
            this.eventBus.publish(NotificationsFeedEventsEnum.CLOSE);
        };
        this.handleClear = () => {
            this.eventBus.publish(NotificationsFeedEventsEnum.CLEAR);
        };
        this.handleViewAll = () => {
            this.isOpen = true;
        };
        this.pendingTransactionsUpdate = (payload) => {
            this.pendingTransactions = [...payload];
        };
        this.transactionsHistoryUpdate = (payload) => {
            this.transactionsHistory = [...payload];
        };
    }
    async closeWithAnimation() {
        this.isOpen = false;
        const animationDelay = await new Promise(resolve => setTimeout(resolve, 300));
        return animationDelay;
    }
    async getEventBus() {
        await this.connectionMonitor.waitForConnection();
        return this.eventBus;
    }
    disconnectedCallback() {
        this.clearTimeouts();
        this.unsubscribeFunctions.forEach(unsub => unsub());
        this.unsubscribeFunctions = [];
    }
    componentDidLoad() {
        const unsubPendingTransactions = this.eventBus.subscribe(NotificationsFeedEventsEnum.PENDING_TRANSACTIONS_UPDATE, this.pendingTransactionsUpdate);
        const unsubTransactionsHistory = this.eventBus.subscribe(NotificationsFeedEventsEnum.TRANSACTIONS_HISTORY_UPDATE, this.transactionsHistoryUpdate);
        const unsubOpen = this.eventBus.subscribe(NotificationsFeedEventsEnum.OPEN, this.handleViewAll);
        this.unsubscribeFunctions.push(unsubPendingTransactions, unsubTransactionsHistory, unsubOpen);
        this.connectionMonitor.connect();
    }
    clearTimeouts() {
        if (this.closeEventTimeout) {
            clearTimeout(this.closeEventTimeout);
            this.closeEventTimeout = null;
        }
    }
    render() {
        var _a, _b, _c;
        const hasActivity = ((_a = this.transactionsHistory) === null || _a === void 0 ? void 0 : _a.length) > 0;
        const hasPending = ((_b = this.pendingTransactions) === null || _b === void 0 ? void 0 : _b.length) > 0;
        return (h("mvx-side-panel", { key: 'd5a0b79618d0c60558355e8834fa81cb581c47c1', isOpen: this.isOpen, panelTitle: "Notifications Feed", onClose: this.handleClose, hasBackButton: false }, h("div", { key: '56104a6673d4a7b91579e2397d2abcd6772cbfda', class: "feed-content" }, h("div", { key: 'd660c6ff7a00d49144cf897647ac22fe2bcd68a5', class: "notifications-info" }, "This feed is stored in your browser and will be reset when a new session is started.", h("mvx-circle-exclamation-icon", { key: '4419f4ffa7608c784256b1b6b5e16ee5f4aeb698', class: "info-icon" })), hasPending && (h("div", { key: '0fead103ed4ac152c7b54cfe0296a18a734958a5', class: "notifications-container" }, h("div", { key: '9b04477acfd1a517dc904c107f10f195cdc11e5c', class: "processing-status" }, "Processing..."), (_c = this.pendingTransactions) === null || _c === void 0 ? void 0 :
            _c.map(toast => h("mvx-transaction-toast", Object.assign({ fullWidth: true }, toast))))), h("div", { key: 'f10ed2ce811f0d246dcd84bfa86487da42148c0a', class: "activity-section" }, h("div", { key: '3ad12faa4ba309a2cdc3be423767e910cb1688a6', class: "activity-header" }, h("h3", { key: '728419d413d73880065af51693a77c73887cb0f9', class: "activity-title" }, "Activity"), hasActivity && (h("button", { key: 'a72f8c2acb070c8858c13d980cd1b93b96c2eb1e', class: "clear-button", onClick: this.handleClear }, "Clear"))), h("div", { key: '18eceaaf49891afe83f838071026937b59d0c683', class: "activity-list" }, hasActivity ? (this.transactionsHistory.map(transaction => h("mvx-transaction-list-item", { transaction: transaction }))) : (h("div", { class: "no-activity" }, "No activity to show")))))));
    }
    static get style() { return notificationsFeedCss; }
}, [257, "mvx-notifications-feed", {
        "isOpen": [32],
        "pendingTransactions": [32],
        "transactionsHistory": [32],
        "closeWithAnimation": [64],
        "getEventBus": [64]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["mvx-notifications-feed", "mvx-arrow-up-right-from-square-icon", "mvx-back-arrow-icon", "mvx-check-icon", "mvx-circle-exclamation-icon", "mvx-close-icon", "mvx-copy-button", "mvx-copy-icon", "mvx-default-transaction-icon-large", "mvx-default-transaction-icon-small", "mvx-explorer-link", "mvx-fa-icon", "mvx-format-amount", "mvx-side-panel", "mvx-side-panel-header", "mvx-side-panel-swiper", "mvx-transaction-asset-icon", "mvx-transaction-list-item", "mvx-transaction-toast", "mvx-transaction-toast-content", "mvx-transaction-toast-details", "mvx-transaction-toast-details-body", "mvx-transaction-toast-progress", "mvx-trim"];
    components.forEach(tagName => { switch (tagName) {
        case "mvx-notifications-feed":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, NotificationsFeed);
            }
            break;
        case "mvx-arrow-up-right-from-square-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$o();
            }
            break;
        case "mvx-back-arrow-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$n();
            }
            break;
        case "mvx-check-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$m();
            }
            break;
        case "mvx-circle-exclamation-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$l();
            }
            break;
        case "mvx-close-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$k();
            }
            break;
        case "mvx-copy-button":
            if (!customElements.get(tagName)) {
                defineCustomElement$j();
            }
            break;
        case "mvx-copy-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$i();
            }
            break;
        case "mvx-default-transaction-icon-large":
            if (!customElements.get(tagName)) {
                defineCustomElement$h();
            }
            break;
        case "mvx-default-transaction-icon-small":
            if (!customElements.get(tagName)) {
                defineCustomElement$g();
            }
            break;
        case "mvx-explorer-link":
            if (!customElements.get(tagName)) {
                defineCustomElement$f();
            }
            break;
        case "mvx-fa-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$e();
            }
            break;
        case "mvx-format-amount":
            if (!customElements.get(tagName)) {
                defineCustomElement$d();
            }
            break;
        case "mvx-side-panel":
            if (!customElements.get(tagName)) {
                defineCustomElement$c();
            }
            break;
        case "mvx-side-panel-header":
            if (!customElements.get(tagName)) {
                defineCustomElement$b();
            }
            break;
        case "mvx-side-panel-swiper":
            if (!customElements.get(tagName)) {
                defineCustomElement$a();
            }
            break;
        case "mvx-transaction-asset-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$9();
            }
            break;
        case "mvx-transaction-list-item":
            if (!customElements.get(tagName)) {
                defineCustomElement$8();
            }
            break;
        case "mvx-transaction-toast":
            if (!customElements.get(tagName)) {
                defineCustomElement$7();
            }
            break;
        case "mvx-transaction-toast-content":
            if (!customElements.get(tagName)) {
                defineCustomElement$6();
            }
            break;
        case "mvx-transaction-toast-details":
            if (!customElements.get(tagName)) {
                defineCustomElement$5();
            }
            break;
        case "mvx-transaction-toast-details-body":
            if (!customElements.get(tagName)) {
                defineCustomElement$4();
            }
            break;
        case "mvx-transaction-toast-progress":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "mvx-trim":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
    } });
}

const MvxNotificationsFeed = NotificationsFeed;
const defineCustomElement = defineCustomElement$1;

export { MvxNotificationsFeed, defineCustomElement };
