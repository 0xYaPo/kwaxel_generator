import { p as proxyCustomElement, H, d as createEvent, h } from './index2.js';
import { D as DataTestIdsEnum } from './dataTestIds.enum.js';
import { E as ELLIPSIS } from './htmlStrings.js';
import { g as getDefaultExportFromCjs } from './_commonjsHelpers.js';
import { d as defineCustomElement$8 } from './angles-left-icon.js';
import { d as defineCustomElement$7 } from './angles-right-icon.js';
import { d as defineCustomElement$6 } from './magnifying-glass-icon.js';
import { d as defineCustomElement$5 } from './pagination-ellipsis.js';
import { d as defineCustomElement$4 } from './pagination-ellipsis-form.js';
import { d as defineCustomElement$3 } from './single-angle-left-icon.js';
import { d as defineCustomElement$2 } from './single-angle-right-icon.js';
import { d as defineCustomElement$1 } from './tooltip.js';

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

var lodash_inrange;
var hasRequiredLodash_inrange;

function requireLodash_inrange () {
	if (hasRequiredLodash_inrange) return lodash_inrange;
	hasRequiredLodash_inrange = 1;
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308,
	    NAN = 0 / 0;

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;

	/**
	 * The base implementation of `_.inRange` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {number} number The number to check.
	 * @param {number} start The start of the range.
	 * @param {number} end The end of the range.
	 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	 */
	function baseInRange(number, start, end) {
	  return number >= nativeMin(start, end) && number < nativeMax(start, end);
	}

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}

	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	/**
	 * Checks if `n` is between `start` and up to, but not including, `end`. If
	 * `end` is not specified, it's set to `start` with `start` then set to `0`.
	 * If `start` is greater than `end` the params are swapped to support
	 * negative ranges.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.3.0
	 * @category Number
	 * @param {number} number The number to check.
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	 * @see _.range, _.rangeRight
	 * @example
	 *
	 * _.inRange(3, 2, 4);
	 * // => true
	 *
	 * _.inRange(4, 8);
	 * // => true
	 *
	 * _.inRange(4, 2);
	 * // => false
	 *
	 * _.inRange(2, 2);
	 * // => false
	 *
	 * _.inRange(1.2, 2);
	 * // => true
	 *
	 * _.inRange(5.2, 4);
	 * // => false
	 *
	 * _.inRange(-3, -2, -6);
	 * // => true
	 */
	function inRange(number, start, end) {
	  start = toFinite(start);
	  if (end === undefined) {
	    end = start;
	    start = 0;
	  } else {
	    end = toFinite(end);
	  }
	  number = toNumber(number);
	  return baseInRange(number, start, end);
	}

	lodash_inrange = inRange;
	return lodash_inrange;
}

var lodash_inrangeExports = requireLodash_inrange();
var inRange = /*@__PURE__*/getDefaultExportFromCjs(lodash_inrangeExports);

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

var lodash_range;
var hasRequiredLodash_range;

function requireLodash_range () {
	if (hasRequiredLodash_range) return lodash_range;
	hasRequiredLodash_range = 1;
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_SAFE_INTEGER = 9007199254740991,
	    MAX_INTEGER = 1.7976931348623157e+308,
	    NAN = 0 / 0;

	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    symbolTag = '[object Symbol]';

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeCeil = Math.ceil,
	    nativeMax = Math.max;

	/**
	 * The base implementation of `_.range` and `_.rangeRight` which doesn't
	 * coerce arguments.
	 *
	 * @private
	 * @param {number} start The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} step The value to increment or decrement by.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Array} Returns the range of numbers.
	 */
	function baseRange(start, end, step, fromRight) {
	  var index = -1,
	      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	      result = Array(length);

	  while (length--) {
	    result[fromRight ? length : ++index] = start;
	    start += step;
	  }
	  return result;
	}

	/**
	 * Creates a `_.range` or `_.rangeRight` function.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new range function.
	 */
	function createRange(fromRight) {
	  return function(start, end, step) {
	    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	      end = step = undefined;
	    }
	    // Ensure the sign of `-0` is preserved.
	    start = toFinite(start);
	    if (end === undefined) {
	      end = start;
	      start = 0;
	    } else {
	      end = toFinite(end);
	    }
	    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	    return baseRange(start, end, step, fromRight);
	  };
	}

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}

	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	/**
	 * Creates an array of numbers (positive and/or negative) progressing from
	 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	 * `start` is specified without an `end` or `step`. If `end` is not specified,
	 * it's set to `start` with `start` then set to `0`.
	 *
	 * **Note:** JavaScript follows the IEEE-754 standard for resolving
	 * floating-point values which can produce unexpected results.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} [step=1] The value to increment or decrement by.
	 * @returns {Array} Returns the range of numbers.
	 * @see _.inRange, _.rangeRight
	 * @example
	 *
	 * _.range(4);
	 * // => [0, 1, 2, 3]
	 *
	 * _.range(-4);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 5);
	 * // => [1, 2, 3, 4]
	 *
	 * _.range(0, 20, 5);
	 * // => [0, 5, 10, 15]
	 *
	 * _.range(0, -4, -1);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 4, 0);
	 * // => [1, 1, 1]
	 *
	 * _.range(0);
	 * // => []
	 */
	var range = createRange();

	lodash_range = range;
	return lodash_range;
}

var lodash_rangeExports = requireLodash_range();
var range = /*@__PURE__*/getDefaultExportFromCjs(lodash_rangeExports);

const MAX_PAGINATION_SLOTS = 7;
const MIN_PAGINATION_BATCH_LENGTH = 3;
const MAX_PAGINATION_BATCH_LENGTH = 5;

const getPagination = ({ currentPage, totalPages }) => {
    const trimBatch = (batch, comparableBatch) => (batch.includes(currentPage) ? batch : batch.slice(0, MAX_PAGINATION_SLOTS - comparableBatch.length - 1));
    const previousPage = currentPage - 1;
    const nextPage = currentPage + 1;
    if (totalPages <= MAX_PAGINATION_SLOTS) {
        return range(1, totalPages + 1).map(paginationItem => String(paginationItem));
    }
    const isLeftBatchInRange = inRange(nextPage - 1, MIN_PAGINATION_BATCH_LENGTH, MAX_PAGINATION_BATCH_LENGTH);
    const isRightBatchInRange = inRange(previousPage + 1, totalPages - MIN_PAGINATION_BATCH_LENGTH, totalPages - 1);
    const leftBatch = isLeftBatchInRange ? range(1, nextPage + 1) : range(1, MAX_PAGINATION_BATCH_LENGTH - 1);
    const rightBatch = isRightBatchInRange ? range(previousPage, totalPages + 1) : range(totalPages - MIN_PAGINATION_BATCH_LENGTH + 1, totalPages + 1);
    const trimmedLeftBatch = trimBatch(leftBatch, rightBatch);
    const trimmedRightBatch = trimBatch(rightBatch.reverse(), leftBatch);
    const mergedEdgeBatches = trimmedLeftBatch.concat(trimmedRightBatch);
    const middleBatch = [ELLIPSIS, previousPage, currentPage, nextPage, ELLIPSIS];
    const [firstLeftBatchItem] = trimmedLeftBatch;
    const [firstRightBatchItem] = trimmedRightBatch;
    const paginationItems = mergedEdgeBatches.includes(currentPage)
        ? [...trimmedLeftBatch, ELLIPSIS, ...trimmedRightBatch.reverse()]
        : [firstLeftBatchItem, ...middleBatch, firstRightBatchItem];
    return paginationItems.map(paginationItem => String(paginationItem));
};

const paginationCss = "/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,::backdrop,:after,:before{--tw-border-style:solid;--tw-leading:initial;--tw-duration:initial;--tw-ease:initial;--tw-rotate-x:rotateX(0);--tw-rotate-y:rotateY(0);--tw-rotate-z:rotateZ(0);--tw-skew-x:skewX(0);--tw-skew-y:skewY(0);--tw-translate-x:0;--tw-translate-y:0;--tw-translate-z:0}}}@layer theme{:host,:root{--mvx-color-preloader:var(--mvx-preloader-item-bg);--mvx-radius-lg:.5rem;--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-color-teal-400:oklch(.777 .152 181.912);--mvx-spacing:.25rem;--mvx-text-xs:.75rem;--mvx-text-xs--line-height:1.33333;--mvx-text-base:1rem;--mvx-text-base--line-height:1.5;--mvx-ease-in-out:cubic-bezier(.4,0,.2,1);--mvx-default-transition-duration:.15s;--mvx-default-transition-timing-function:cubic-bezier(.4,0,.2,1);--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono)}}@layer base{*,::backdrop,:after,:before{border:0 solid;box-sizing:border-box;margin:0;padding:0}::file-selector-button{appearance:button;background-color:#0000;border:0 solid;border-radius:0;box-sizing:border-box;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;margin:0;margin-inline-end:4px;opacity:1;padding:0}:host,html{-webkit-text-size-adjust:100%;font-family:var(--mvx-default-font-family,ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:var(--mvx-default-font-feature-settings,normal);font-variation-settings:var(--mvx-default-font-variation-settings,normal);line-height:1.5;tab-size:4;-webkit-tap-highlight-color:transparent}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:var(--mvx-default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-feature-settings:var(--mvx-default-mono-font-feature-settings,normal);font-size:1em;font-variation-settings:var(--mvx-default-mono-font-variation-settings,normal)}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}menu,ol,ul{list-style:none}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}button,input,optgroup,select,textarea{background-color:#0000;border-radius:0;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;opacity:1}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::placeholder{opacity:1}@supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px){::placeholder{color:currentColor}@supports (color:color-mix(in lab,red,red)){::placeholder{color:color-mix(in oklab,currentColor 50%,transparent)}}}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex;padding-block:0}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){appearance:button}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components;@layer utilities{.mvx\\:absolute{position:absolute}.mvx\\:relative{position:relative}.mvx\\:top-0{top:calc(var(--mvx-spacing)*0)}.mvx\\:right-0{right:calc(var(--mvx-spacing)*0)}.mvx\\:left-0{left:calc(var(--mvx-spacing)*0)}.mvx\\:z-1{z-index:1}.mvx\\:mr-2{margin-right:calc(var(--mvx-spacing)*2)}.mvx\\:mr-auto{margin-right:auto}.mvx\\:ml-2{margin-left:calc(var(--mvx-spacing)*2)}.mvx\\:flex{display:flex}.mvx\\:h-4\\!{height:calc(var(--mvx-spacing)*4)!important}.mvx\\:h-12{height:calc(var(--mvx-spacing)*12)}.mvx\\:h-16\\!{height:calc(var(--mvx-spacing)*16)!important}.mvx\\:w-4\\!{width:calc(var(--mvx-spacing)*4)!important}.mvx\\:w-9\\!{width:calc(var(--mvx-spacing)*9)!important}.mvx\\:w-10\\!{width:calc(var(--mvx-spacing)*10)!important}.mvx\\:w-13\\!{width:calc(var(--mvx-spacing)*13)!important}.mvx\\:w-17\\!{width:calc(var(--mvx-spacing)*17)!important}.mvx\\:w-24\\!{width:calc(var(--mvx-spacing)*24)!important}.mvx\\:w-40\\!{width:calc(var(--mvx-spacing)*40)!important}.mvx\\:w-full{width:100%}.mvx\\:w-full\\!{width:100%!important}.mvx\\:min-w-4\\!{min-width:calc(var(--mvx-spacing)*4)!important}.mvx\\:items-center{align-items:center}.mvx\\:rounded-full\\!{border-radius:3.40282e+38px!important}.mvx\\:rounded-lg\\!{border-radius:var(--mvx-radius-lg)!important}.mvx\\:border{border-style:var(--tw-border-style);border-width:1px}.mvx\\:border-solid{--tw-border-style:solid;border-style:solid}.mvx\\:border-transparent{border-color:#0000}.mvx\\:bg-preloader\\!{background-color:var(--mvx-color-preloader)!important}.mvx\\:p-4{padding:calc(var(--mvx-spacing)*4)}.mvx\\:gap-4{gap:calc(var(--mvx-spacing)*4)}.mvx\\:justify-center{justify-content:center}.mvx\\:p-\\[10px\\]{padding:10px}.mvx\\:pt-24{padding-top:calc(var(--mvx-spacing)*24)}}@property --tw-border-style{syntax:\"*\";inherits:false;initial-value:solid} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-spacing:.25rem;--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-color-teal-400:oklch(.777 .152 181.912);--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono)}}@layer base{}@layer base{}@layer base{}@layer components;@layer utilities{.mvx\\:h-auto{height:auto}.mvx\\:w-48{width:calc(var(--mvx-spacing)*48)}.mvx\\:w-50{width:calc(var(--mvx-spacing)*50)}.mvx\\:whitespace-nowrap{white-space:nowrap}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components;.pagination{align-items:center;font-size:var(--mvx-text-base);gap:calc(var(--mvx-spacing)*2);justify-content:center;line-height:var(--tw-leading,var(--mvx-text-base--line-height));max-width:calc(var(--mvx-spacing)*120);--tw-leading:1;display:flex;line-height:1;-webkit-user-select:none;user-select:none}.pagination .pagination-angle{cursor:pointer;transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));--tw-duration:.2s;--tw-ease:var(--mvx-ease-in-out);color:var(--mvx-text-color-primary);display:none;transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out)}.pagination .pagination-angle.disabled,.pagination .pagination-angle.inactive{color:var(--mvx-text-color-secondary);pointer-events:none}.pagination .pagination-angle.disabled .pagination-angle-icon,.pagination .pagination-angle.inactive .pagination-angle-icon{fill:var(--mvx-text-color-secondary)}.pagination .pagination-angle.disabled{opacity:.5}.pagination .pagination-angle:hover{color:var(--mvx-text-accent-color)}.pagination .pagination-angle:hover .pagination-angle-icon{fill:var(--mvx-text-accent-color)}.pagination .pagination-angle .pagination-angle-icon{font-size:var(--mvx-text-xs);line-height:var(--tw-leading,var(--mvx-text-xs--line-height));fill:var(--mvx-text-color-primary)}.pagination .pagination-edge-button{align-items:center;cursor:pointer;gap:calc(var(--mvx-spacing)*2);transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));--tw-duration:.2s;--tw-ease:var(--mvx-ease-in-out);color:var(--mvx-text-color-primary);display:none;transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out)}.pagination .pagination-edge-button.disabled,.pagination .pagination-edge-button.inactive{color:var(--mvx-text-color-secondary);pointer-events:none}.pagination .pagination-edge-button.disabled .pagination-edge-button-icon,.pagination .pagination-edge-button.inactive .pagination-edge-button-icon{fill:var(--mvx-text-color-secondary)}.pagination .pagination-edge-button.disabled{opacity:.5}.pagination .pagination-edge-button:hover{color:var(--mvx-text-accent-color)}.pagination .pagination-edge-button:hover .pagination-edge-button-icon{fill:var(--mvx-text-accent-color)}.pagination .pagination-edge-button .pagination-edge-button-icon{font-size:var(--mvx-text-xs);line-height:var(--tw-leading,var(--mvx-text-xs--line-height));transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));--tw-duration:.2s;--tw-ease:var(--mvx-ease-in-out);transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out);fill:var(--mvx-text-color-primary)}.pagination .pagination-items{align-items:center;display:flex;gap:calc(var(--mvx-spacing)*2);margin-block:calc(var(--mvx-spacing)*0);margin-inline:calc(var(--mvx-spacing)*1)}.pagination .pagination-items .pagination-item-wrapper{cursor:pointer;height:calc(var(--mvx-spacing)*7);text-align:center;transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));width:calc(var(--mvx-spacing)*7);--tw-duration:.2s;--tw-ease:var(--mvx-ease-in-out);align-items:center;display:flex;justify-content:center;transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out)}.pagination .pagination-items .pagination-item-wrapper.disabled{cursor:default;opacity:.5;pointer-events:none}.pagination .pagination-items .pagination-item-wrapper .pagination-item{font-size:var(--mvx-text-xs);height:calc(var(--mvx-spacing)*7);line-height:var(--tw-leading,var(--mvx-text-xs--line-height));padding-block:calc(var(--mvx-spacing)*2);padding-inline:calc(var(--mvx-spacing)*0);text-align:center;transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));width:calc(var(--mvx-spacing)*7);--tw-duration:.2s;--tw-ease:var(--mvx-ease-in-out);align-items:center;border-radius:.25rem;color:var(--mvx-text-color-primary);display:flex;justify-content:center;position:relative;transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out)}.pagination .pagination-items .pagination-item-wrapper .pagination-item:before{pointer-events:none;transform:var(--tw-rotate-x)var(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y);transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));width:calc(var(--mvx-spacing)*7);--tw-duration:.2s;--tw-ease:var(--mvx-ease-in-out);height:calc(var(--mvx-spacing)*7);transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out);z-index:1;--tw-translate-x:-50%;--tw-translate-y:-50%;background-color:var(--mvx-pagination-item-bg);border-radius:3.40282e+38px;content:\"\";left:50%;opacity:.2;position:absolute;top:50%;translate:var(--tw-translate-x)var(--tw-translate-y)}.pagination .pagination-items .pagination-item-wrapper .pagination-item:hover{color:var(--mvx-text-accent-color)}.pagination .pagination-items .pagination-item-wrapper .pagination-item:hover:before{background-color:var(--mvx-pagination-item-bg-hover);opacity:1}.pagination .pagination-items .pagination-item-wrapper .pagination-item.hundreds{font-size:8px}.pagination .pagination-items .pagination-item-wrapper .pagination-item.active{color:var(--mvx-text-accent-color)}.pagination .pagination-items .pagination-item-wrapper .pagination-item.active:before{background-color:var(--mvx-pagination-item-bg-hover);opacity:1}.pagination .pagination-items .pagination-item-wrapper .pagination-item .pagination-item-text{position:relative;z-index:2}@property --tw-leading{syntax:\"*\";inherits:false}@property --tw-duration{syntax:\"*\";inherits:false}@property --tw-ease{syntax:\"*\";inherits:false}@property --tw-rotate-x{syntax:\"*\";inherits:false;initial-value:rotateX(0)}@property --tw-rotate-y{syntax:\"*\";inherits:false;initial-value:rotateY(0)}@property --tw-rotate-z{syntax:\"*\";inherits:false;initial-value:rotateZ(0)}@property --tw-skew-x{syntax:\"*\";inherits:false;initial-value:skewX(0)}@property --tw-skew-y{syntax:\"*\";inherits:false;initial-value:skewY(0)}@property --tw-translate-x{syntax:\"*\";inherits:false;initial-value:0}@property --tw-translate-y{syntax:\"*\";inherits:false;initial-value:0}@property --tw-translate-z{syntax:\"*\";inherits:false;initial-value:0}@media (hover:hover){.mvx\\:hover\\:\\!fill-teal-400:hover{fill:var(--mvx-color-teal-400)!important}}@media (min-width:30rem){.mvx\\:xs\\:mt-5{margin-top:calc(var(--mvx-spacing)*5)}.mvx\\:xs\\:h-85{height:calc(var(--mvx-spacing)*85)}.mvx\\:xs\\:w-100{width:calc(var(--mvx-spacing)*100)}}@media (min-width:576px){.pagination .pagination-angle{display:flex}.pagination .pagination-edge-button{display:flex;margin-block:calc(var(--mvx-spacing)*0);margin-inline:calc(var(--mvx-spacing)*1);padding:calc(var(--mvx-spacing)*0)}}@media (min-width:375px){.pagination .pagination-angle .pagination-angle-icon{font-size:var(--mvx-text-base);line-height:var(--tw-leading,var(--mvx-text-base--line-height));--tw-leading:1;line-height:1}.pagination .pagination-edge-button .pagination-edge-button-icon{font-size:var(--mvx-text-base);line-height:var(--tw-leading,var(--mvx-text-base--line-height))}}@media (min-width:768px){.pagination .pagination-items .pagination-item-wrapper{height:calc(var(--mvx-spacing)*8);width:calc(var(--mvx-spacing)*8)}.pagination .pagination-items .pagination-item-wrapper .pagination-item{font-size:var(--mvx-text-base);height:calc(var(--mvx-spacing)*8);line-height:var(--tw-leading,var(--mvx-text-base--line-height));width:calc(var(--mvx-spacing)*8)}.pagination .pagination-items .pagination-item-wrapper .pagination-item:before{height:calc(var(--mvx-spacing)*8);width:calc(var(--mvx-spacing)*8)}.pagination .pagination-items .pagination-item-wrapper .pagination-item.hundreds{font-size:10px}}";

const Pagination = /*@__PURE__*/ proxyCustomElement(class Pagination extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.pageChange = createEvent(this, "pageChange", 1);
        this.currentPage = 1;
        this.isDisabled = false;
        this.activeTooltipIndex = null;
        this.isTooltipOpen = false;
    }
    watchCurrentPage(newValue) {
        if (newValue !== this.currentPageIndex) {
            this.currentPageIndex = newValue;
        }
    }
    handleTooltipStatus(isOpen) {
        this.isTooltipOpen = isOpen;
    }
    handlePageClick(newPageIndex) {
        if (newPageIndex === this.currentPageIndex) {
            return;
        }
        this.currentPageIndex = newPageIndex;
        this.pageChange.emit(newPageIndex);
    }
    handleEdgePageClick(pageToNavigateTo) {
        return (event) => {
            event.preventDefault();
            this.handlePageClick(pageToNavigateTo);
        };
    }
    isCurrentPageActive(paginationItem) {
        return parseFloat(paginationItem) === this.currentPageIndex;
    }
    isInTheHundreds(paginationItem) {
        return parseFloat(paginationItem) && parseFloat(paginationItem) >= 100;
    }
    componentWillLoad() {
        this.currentPageIndex = this.currentPage;
    }
    render() {
        const isLeftToggleDisabled = this.currentPageIndex === 1;
        const isRightToggleDisabled = this.currentPageIndex === this.totalPages;
        const paginationItems = getPagination({ currentPage: this.currentPageIndex, totalPages: this.totalPages });
        return (h("div", { key: 'eb2c9697becba64d7c5817357f24a3a21da428c2', class: { pagination: true, [this.class]: Boolean(this.class) } }, h("span", { key: '5ae146e89459a4141226e0cd31b0a83e4f331cba', onClick: this.handleEdgePageClick(1), class: { 'pagination-angle': true, 'disabled': this.isDisabled, 'inactive': isLeftToggleDisabled }, "data-testid": DataTestIdsEnum.firstBtn }, h("mvx-angles-left-icon", { key: '5c05f8b80ed532b5ce412add6d1c296d15f7699a', class: "pagination-angle-icon" })), h("div", { key: '7979845585f0b692d19d3ae83fe267393255d16f', onClick: this.handleEdgePageClick(this.currentPageIndex - 1), class: { 'pagination-edge-button': true, 'disabled': this.isDisabled, 'inactive': isLeftToggleDisabled }, "data-testid": DataTestIdsEnum.prevBtn }, h("mvx-single-angle-left-icon", { key: 'cabe85c4820c39d87b5658810c969228d7f2a242', class: "pagination-edge-button-icon" })), h("div", { key: 'ccd5a7d0bb0b08a60ceb48472d83803a2d89d694', class: "pagination-items" }, paginationItems.map((paginationItem, paginationItemIndex) => (h("div", { class: { 'pagination-item-wrapper': true, 'disabled': this.isDisabled } }, parseFloat(paginationItem) ? (h("div", { onClick: () => this.handlePageClick(Number(paginationItem)), class: {
                'pagination-item': true,
                'active': this.isCurrentPageActive(paginationItem),
                'hundreds': this.isInTheHundreds(paginationItem),
            }, "data-testid": `${DataTestIdsEnum.paginationItem}-${paginationItem}` }, h("span", { class: "pagination-item-text" }, paginationItem))) : (h("mvx-tooltip", { triggerOnClick: true, trigger: h("mvx-pagination-ellipsis", { isActive: this.isTooltipOpen && this.activeTooltipIndex === paginationItemIndex }), onTriggerRender: (event) => {
                this.activeTooltipIndex = paginationItemIndex;
                this.handleTooltipStatus(event.detail);
            } }, !this.isDisabled && (h("mvx-pagination-ellipsis-form", { isVisible: this.isTooltipOpen, maxPageToSearchFor: this.totalPages, onSearch: (event) => this.handlePageClick(event.detail) })))))))), h("div", { key: '206c6e33818a248e427135b4bc42e0d95708440d', onClick: this.handleEdgePageClick(this.currentPageIndex + 1), class: { 'pagination-edge-button': true, 'disabled': this.isDisabled, 'inactive': isRightToggleDisabled }, "data-testid": DataTestIdsEnum.nextBtn }, h("mvx-single-angle-right-icon", { key: '3d7304ab87b4afea10126d6210276e331edb22a0', class: "pagination-edge-button-icon" })), h("span", { key: '08caaa7348a99267e7f3d4986b1b05991b7bbddd', onClick: this.handleEdgePageClick(this.totalPages), class: { 'pagination-angle': true, 'disabled': this.isDisabled, 'inactive': isRightToggleDisabled }, "data-testid": DataTestIdsEnum.lastBtn }, h("mvx-angles-right-icon", { key: '2278c162c28a007fe1a167bb471762c001872103', class: "pagination-angle-icon" }))));
    }
    static get watchers() { return {
        "currentPage": ["watchCurrentPage"]
    }; }
    static get style() { return paginationCss; }
}, [257, "mvx-pagination", {
        "currentPage": [2, "current-page"],
        "totalPages": [2, "total-pages"],
        "isDisabled": [4, "is-disabled"],
        "class": [1],
        "activeTooltipIndex": [32],
        "isTooltipOpen": [32],
        "currentPageIndex": [32]
    }, undefined, {
        "currentPage": ["watchCurrentPage"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["mvx-pagination", "mvx-angles-left-icon", "mvx-angles-right-icon", "mvx-magnifying-glass-icon", "mvx-pagination-ellipsis", "mvx-pagination-ellipsis-form", "mvx-single-angle-left-icon", "mvx-single-angle-right-icon", "mvx-tooltip"];
    components.forEach(tagName => { switch (tagName) {
        case "mvx-pagination":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, Pagination);
            }
            break;
        case "mvx-angles-left-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$8();
            }
            break;
        case "mvx-angles-right-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$7();
            }
            break;
        case "mvx-magnifying-glass-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$6();
            }
            break;
        case "mvx-pagination-ellipsis":
            if (!customElements.get(tagName)) {
                defineCustomElement$5();
            }
            break;
        case "mvx-pagination-ellipsis-form":
            if (!customElements.get(tagName)) {
                defineCustomElement$4();
            }
            break;
        case "mvx-single-angle-left-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "mvx-single-angle-right-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "mvx-tooltip":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { Pagination as P, defineCustomElement as d };
