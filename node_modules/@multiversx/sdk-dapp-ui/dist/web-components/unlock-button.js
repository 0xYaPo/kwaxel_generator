import { p as proxyCustomElement, H, h } from './index2.js';
import { c as classNames } from './index3.js';
import { g as getIsExtensionAvailable, a as getIsMetaMaskAvailable, c as getDetectedBrowser, B as BrowserEnum, s as safeWindow } from './index4.js';
import { P as ProviderTypeEnum } from './provider.types.js';
import { d as defineCustomElement$1 } from './arrow-up-right-icon.js';

const CHROME_EXTENSION_LINK = 'https://chrome.google.com/webstore/detail/multiversx-defi-wallet/dngmlblcodfobpdpecaadgfbcggfjfnm';
const FIREFOX_ADDON_LINK = 'https://addons.mozilla.org/en-US/firefox/addon/multiversx-defi-wallet';
const CHROME_METAMASK_EXTENSION_LINK = 'https://chromewebstore.google.com/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en';
const FIREFOX_METAMASK_ADDON_LINK = 'https://addons.mozilla.org/en-US/firefox/addon/ether-metamask';

const unlockButtonCss = "/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-radius-lg:.5rem;--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-spacing:.25rem;--mvx-text-xs:.75rem;--mvx-text-xs--line-height:1.33333;--mvx-text-base:1rem;--mvx-text-base--line-height:1.5;--mvx-font-weight-medium:500;--mvx-ease-in-out:cubic-bezier(.4,0,.2,1);--mvx-default-transition-duration:.15s;--mvx-default-transition-timing-function:cubic-bezier(.4,0,.2,1);--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono);--mvx-color-accent:var(--mvx-text-accent-color)}}@layer base{*,::backdrop,:after,:before{border:0 solid;box-sizing:border-box;margin:0;padding:0}::file-selector-button{appearance:button;background-color:#0000;border:0 solid;border-radius:0;box-sizing:border-box;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;margin:0;margin-inline-end:4px;opacity:1;padding:0}:host,html{-webkit-text-size-adjust:100%;font-family:var(--mvx-default-font-family,ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:var(--mvx-default-font-feature-settings,normal);font-variation-settings:var(--mvx-default-font-variation-settings,normal);line-height:1.5;tab-size:4;-webkit-tap-highlight-color:transparent}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:var(--mvx-default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-feature-settings:var(--mvx-default-mono-font-feature-settings,normal);font-size:1em;font-variation-settings:var(--mvx-default-mono-font-variation-settings,normal)}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}menu,ol,ul{list-style:none}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}button,input,optgroup,select,textarea{background-color:#0000;border-radius:0;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;opacity:1}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::placeholder{opacity:1}@supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px){::placeholder{color:currentColor}@supports (color:color-mix(in lab,red,red)){::placeholder{color:color-mix(in oklab,currentColor 50%,transparent)}}}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex;padding-block:0}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){appearance:button}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components;@layer utilities{.mvx\\:mt-auto{margin-top:auto}.mvx\\:ml-auto{margin-left:auto}.mvx\\:hidden{display:none}.mvx\\:h-auto\\!{height:auto!important}.mvx\\:w-4\\!{width:calc(var(--mvx-spacing)*4)!important}.mvx\\:w-full{width:100%}.mvx\\:overflow-hidden{overflow:hidden}.mvx\\:rounded-br-lg{border-bottom-right-radius:var(--mvx-radius-lg)}.mvx\\:rounded-bl-lg{border-bottom-left-radius:var(--mvx-radius-lg)}.mvx\\:fill-accent\\!{fill:var(--mvx-color-accent)!important}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-spacing:.25rem;--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono);--mvx-color-accent:var(--mvx-text-accent-color)}}@layer base{}@layer components;@layer utilities{.mvx\\:h-auto{height:auto}.mvx\\:w-48{width:calc(var(--mvx-spacing)*48)}.mvx\\:w-50{width:calc(var(--mvx-spacing)*50)}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,::backdrop,:after,:before{--tw-duration:initial;--tw-ease:initial;--tw-leading:initial;--tw-font-weight:initial}}}@layer base{}@layer components;.unlock-button{align-items:center;cursor:pointer;gap:calc(var(--mvx-spacing)*4);height:calc(var(--mvx-spacing)*15);padding-left:calc(var(--mvx-spacing)*3);padding-right:calc(var(--mvx-spacing)*4);transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));--tw-duration:.2s;--tw-ease:var(--mvx-ease-in-out);background:var(--mvx-bg-color-secondary);display:flex!important;transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out)}.unlock-button:hover{background:var(--mvx-hover-color-primary)}.unlock-button .unlock-button-icon{align-items:center;display:flex;height:calc(var(--mvx-spacing)*10);justify-content:center;order:-1;position:relative;width:calc(var(--mvx-spacing)*10);z-index:1}.unlock-button .unlock-button-icon.clipped{align-items:flex-end;justify-content:flex-start}.unlock-button .unlock-button-label{font-size:var(--mvx-text-base);line-height:var(--tw-leading,var(--mvx-text-base--line-height));z-index:1;--tw-leading:1;color:var(--mvx-text-color-primary);line-height:1;position:relative}.unlock-button .unlock-button-status{align-items:center;gap:calc(var(--mvx-spacing)*1);padding-block:calc(var(--mvx-spacing)*1);padding-inline:calc(var(--mvx-spacing)*2);z-index:1;--tw-leading:1;--tw-font-weight:var(--mvx-font-weight-medium);background:var(--mvx-bg-color-primary);border:1px solid var(--mvx-border-color-primary);border-radius:20px;display:flex;font-size:var(--mvx-text-xs);font-weight:var(--mvx-font-weight-medium);line-height:1;line-height:var(--tw-leading,var(--mvx-text-xs--line-height));margin-left:auto;position:relative}.unlock-button .unlock-button-status .unlock-button-status-text{color:var(--mvx-text-accent-color)}.unlock-button .unlock-button-status .unlock-button-status-icon{align-items:center;display:flex}.unlock-button .unlock-button-status .unlock-button-status-icon svg path{fill:var(--mvx-teal-350)}@property --tw-duration{syntax:\"*\";inherits:false}@property --tw-ease{syntax:\"*\";inherits:false}@property --tw-leading{syntax:\"*\";inherits:false}@property --tw-font-weight{syntax:\"*\";inherits:false}@media (min-width:30rem){.mvx\\:xs\\:flex{display:flex}.mvx\\:xs\\:mt-5{margin-top:calc(var(--mvx-spacing)*5)}.mvx\\:xs\\:h-85{height:calc(var(--mvx-spacing)*85)}.mvx\\:xs\\:w-100{width:calc(var(--mvx-spacing)*100)}}@media (min-width:40rem){.mvx\\:sm\\:block{display:block}.mvx\\:sm\\:flex{display:flex}.mvx\\:sm\\:hidden{display:none}}";

const unlockButtonClasses = {
    statusIcon: 'mvx:fill-accent!',
};
const UnlockButton = /*@__PURE__*/ proxyCustomElement(class UnlockButton extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
    }
    render() {
        const isExtensionProvider = this.type === ProviderTypeEnum.extension;
        const isMetaMaskProvider = this.type === ProviderTypeEnum.metamask;
        const isDetectableProvider = isExtensionProvider || isMetaMaskProvider;
        const isExtensionInstalled = isExtensionProvider && getIsExtensionAvailable();
        const isMetaMaskInstalled = isMetaMaskProvider && getIsMetaMaskAvailable();
        const shouldShowOpenLabel = isDetectableProvider && (isExtensionInstalled || isMetaMaskInstalled);
        const detectedBrowser = getDetectedBrowser();
        const isFirefox = detectedBrowser === BrowserEnum.Firefox;
        const handleInstallButtonClick = () => {
            if (shouldShowOpenLabel) {
                return;
            }
            if (isExtensionProvider) {
                safeWindow === null || safeWindow === void 0 ? void 0 : safeWindow.open(isFirefox ? FIREFOX_ADDON_LINK : CHROME_EXTENSION_LINK);
            }
            else if (isMetaMaskProvider) {
                safeWindow === null || safeWindow === void 0 ? void 0 : safeWindow.open(isFirefox ? FIREFOX_METAMASK_ADDON_LINK : CHROME_METAMASK_EXTENSION_LINK);
            }
        };
        return (h("div", { "data-testid": this.dataTestId, class: { 'unlock-button': true, [this.class]: Boolean(this.class) }, onClick: handleInstallButtonClick }, h("div", { class: "unlock-button-label" }, this.label), h("div", { class: {
                'unlock-button-icon': true,
                'clipped': isExtensionProvider,
            } }, this.icon ? this.icon : h("img", { src: this.iconUrl, alt: this.label })), isDetectableProvider && (h("div", { class: "unlock-button-status" }, h("div", { class: "unlock-button-status-text" }, shouldShowOpenLabel ? 'Open' : 'Install'), !shouldShowOpenLabel && (h("mvx-arrow-up-right-icon", { class: classNames('unlock-button-status-icon', {
                [unlockButtonClasses.statusIcon]: true,
            }) }))))));
    }
    static get style() { return unlockButtonCss; }
}, [257, "mvx-unlock-button", {
        "label": [1],
        "iconUrl": [1, "icon-url"],
        "icon": [16],
        "dataTestId": [1, "data-test-id"],
        "type": [8],
        "class": [1]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["mvx-unlock-button", "mvx-arrow-up-right-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "mvx-unlock-button":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, UnlockButton);
            }
            break;
        case "mvx-arrow-up-right-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { UnlockButton as U, defineCustomElement as d };
