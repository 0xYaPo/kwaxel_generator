import { p as proxyCustomElement, H, h, F as Fragment } from './index2.js';
import { c as classNames } from './index3.js';
import { D as DataTestIdsEnum } from './dataTestIds.enum.js';
import { s as state } from './signTransactionsPanelStore.js';
import { d as defineCustomElement$b } from './arrow-right-icon.js';
import { d as defineCustomElement$a } from './arrow-up-right-from-square-icon.js';
import { d as defineCustomElement$9 } from './button.js';
import { d as defineCustomElement$8 } from './check-icon.js';
import { d as defineCustomElement$7 } from './copy-button.js';
import { d as defineCustomElement$6 } from './copy-icon.js';
import { d as defineCustomElement$5 } from './explorer-link.js';
import { d as defineCustomElement$4 } from './pencil-icon.js';
import { d as defineCustomElement$3 } from './spinner-icon.js';
import { d as defineCustomElement$2 } from './tooltip.js';
import { d as defineCustomElement$1 } from './trim.js';

const signTransactionsFooterCss = "/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,::backdrop,:after,:before{--tw-duration:initial;--tw-ease:initial;--tw-leading:initial}}}@layer theme{:host,:root{--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-spacing:.25rem;--mvx-text-base:1rem;--mvx-text-base--line-height:1.5;--mvx-ease-in-out:cubic-bezier(.4,0,.2,1);--mvx-default-transition-duration:.15s;--mvx-default-transition-timing-function:cubic-bezier(.4,0,.2,1);--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono);--mvx-color-link:var(--mvx-link-color)}}@layer base{*,::backdrop,:after,:before{border:0 solid;box-sizing:border-box;margin:0;padding:0}::file-selector-button{appearance:button;background-color:#0000;border:0 solid;border-radius:0;box-sizing:border-box;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;margin:0;margin-inline-end:4px;opacity:1;padding:0}:host,html{-webkit-text-size-adjust:100%;font-family:var(--mvx-default-font-family,ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:var(--mvx-default-font-feature-settings,normal);font-variation-settings:var(--mvx-default-font-variation-settings,normal);line-height:1.5;tab-size:4;-webkit-tap-highlight-color:transparent}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:var(--mvx-default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-feature-settings:var(--mvx-default-mono-font-feature-settings,normal);font-size:1em;font-variation-settings:var(--mvx-default-mono-font-variation-settings,normal)}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}menu,ol,ul{list-style:none}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}button,input,optgroup,select,textarea{background-color:#0000;border-radius:0;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;opacity:1}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::placeholder{opacity:1}@supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px){::placeholder{color:currentColor}@supports (color:color-mix(in lab,red,red)){::placeholder{color:color-mix(in oklab,currentColor 50%,transparent)}}}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex;padding-block:0}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){appearance:button}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components;@layer utilities{.mvx\\:absolute{position:absolute}.mvx\\:relative{position:relative}.mvx\\:top-0{top:calc(var(--mvx-spacing)*0)}.mvx\\:right-0{right:calc(var(--mvx-spacing)*0)}.mvx\\:left-0{left:calc(var(--mvx-spacing)*0)}.mvx\\:h-3\\!{height:calc(var(--mvx-spacing)*3)!important}.mvx\\:h-5\\!{height:calc(var(--mvx-spacing)*5)!important}.mvx\\:h-12{height:calc(var(--mvx-spacing)*12)}.mvx\\:w-auto\\!{width:auto!important}.mvx\\:w-full{width:100%}.mvx\\:rotate-90{rotate:90deg}.mvx\\:fill-link\\!{fill:var(--mvx-color-link)!important}.mvx\\:text-base\\!{font-size:var(--mvx-text-base)!important;line-height:var(--tw-leading,var(--mvx-text-base--line-height))!important}.mvx\\:transition-all{transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function))}.mvx\\:duration-200{--tw-duration:.2s;transition-duration:.2s}.mvx\\:ease-in-out{--tw-ease:var(--mvx-ease-in-out);transition-timing-function:var(--mvx-ease-in-out)}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono)}}@layer base{}@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components;:host{display:flex;flex:1;flex-direction:column}:host .sign-transactions-footer{align-items:center;display:flex;flex-direction:column;gap:calc(var(--mvx-spacing)*5);margin-top:auto;padding-top:calc(var(--mvx-spacing)*5);text-align:center}:host .sign-transactions-footer .sign-transactions-footer-buttons{align-items:center;display:flex;gap:calc(var(--mvx-spacing)*3);width:100%}:host .sign-transactions-footer .sign-transactions-footer-buttons .sign-transactions-footer-button-wrapper{display:flex;flex:1;flex-direction:column;position:relative}:host .sign-transactions-footer .sign-transactions-footer-buttons .sign-transactions-footer-button-wrapper.cancel{max-width:calc(var(--mvx-spacing)*32);width:calc(var(--mvx-spacing)*32)}:host .sign-transactions-footer .sign-transactions-footer-buttons .sign-transactions-footer-button-wrapper .sign-transactions-footer-button-tooltip-wrapper{inset:calc(var(--mvx-spacing)*0);position:absolute}:host .sign-transactions-footer .sign-transactions-footer-buttons .sign-transactions-footer-button-wrapper .sign-transactions-footer-button{display:flex}:host .sign-transactions-footer .sign-transactions-footer-buttons .sign-transactions-footer-button-wrapper .sign-transactions-footer-button .sign-transactions-footer-button-icon{transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));--tw-duration:.2s;--tw-ease:var(--mvx-ease-in-out);display:flex;transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out)}:host .sign-transactions-footer .sign-transactions-footer-buttons .sign-transactions-footer-button-wrapper .sign-transactions-footer-button .sign-transactions-footer-button-icon.lighter{fill:var(--mvx-text-color-secondary)}:host .sign-transactions-footer .sign-transactions-footer-identity{align-items:center;display:flex;font-size:var(--mvx-text-base);gap:calc(var(--mvx-spacing)*2);line-height:var(--tw-leading,var(--mvx-text-base--line-height));max-width:calc(var(--mvx-spacing)*64)}:host .sign-transactions-footer .sign-transactions-footer-identity .sign-transactions-footer-identity-label{color:var(--mvx-text-color-secondary);white-space:nowrap}:host .sign-transactions-footer .sign-transactions-footer-identity .sign-transactions-footer-identity-address{color:var(--mvx-text-color-primary);max-width:none;min-width:calc(var(--mvx-spacing)*0);position:relative;top:.25px}:host .sign-transactions-footer .sign-transactions-footer-identity .sign-transactions-footer-identity-address .trim-wrapper{--tw-leading:1;align-items:flex-end;line-height:1}:host .sign-transactions-footer .sign-transactions-footer-identity .sign-transactions-footer-identity-username{align-items:center;color:var(--mvx-text-color-primary);display:flex;font-size:var(--mvx-text-base);line-height:var(--tw-leading,var(--mvx-text-base--line-height))}:host .sign-transactions-footer .sign-transactions-footer-identity .sign-transactions-footer-identity-username .sign-transactions-footer-identity-username-prefix{color:var(--mvx-text-accent-color)}:host .sign-transactions-footer .sign-transactions-footer-identity .sign-transactions-footer-identity-copy{display:flex}:host .sign-transactions-footer .sign-transactions-footer-identity .sign-transactions-footer-identity-copy .sign-transactions-footer-identity-copy-icon{height:calc(var(--mvx-spacing)*4);transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:all;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));width:calc(var(--mvx-spacing)*4);--tw-duration:.2s;--tw-ease:var(--mvx-ease-in-out);color:var(--mvx-link-color);display:flex;justify-content:center;transition-duration:.2s;transition-timing-function:var(--mvx-ease-in-out)}:host .sign-transactions-footer .sign-transactions-footer-identity .sign-transactions-footer-identity-copy .sign-transactions-footer-identity-copy-icon:hover{opacity:.8}@property --tw-duration{syntax:\"*\";inherits:false}@property --tw-ease{syntax:\"*\";inherits:false}@property --tw-leading{syntax:\"*\";inherits:false}";

const signTransactionsFooterClasses = {
    buttonTooltip: 'mvx:absolute mvx:top-0 mvx:h-12 mvx:left-0 mvx:right-0',
    actionButton: 'mvx:text-base! mvx:w-full',
    explorerLinkIcon: 'mvx:fill-link!',
};
const SignTransactionsFooter = /*@__PURE__*/ proxyCustomElement(class SignTransactionsFooter extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.awaitsExternalConfirmation = false;
        this.isWaitingForSignature = false;
        this.lastCommonData = Object.assign({}, state.commonData);
        this.handleSignClick = () => {
            if (state.onConfirm) {
                this.isWaitingForSignature = true;
                state.onConfirm();
            }
        };
    }
    componentWillLoad() {
        this.lastCommonData = Object.assign({}, state.commonData);
    }
    componentWillRender() {
        const currentCommonData = Object.assign({}, state.commonData);
        const hasChanged = JSON.stringify(currentCommonData) !== JSON.stringify(this.lastCommonData);
        if (hasChanged && this.isWaitingForSignature) {
            // Reset the waiting state when data changes
            this.isWaitingForSignature = false;
        }
        this.lastCommonData = currentCommonData;
    }
    render() {
        const { onCancel, onBack, onNext } = state;
        const { currentIndex, currentIndexToSign, needsSigning, username, address, explorerLink } = state.commonData;
        const isFirstTransaction = currentIndex === 0;
        const currentIndexNeedsSigning = currentIndex === currentIndexToSign;
        const currentIndexCannotBeSignedYet = currentIndex > currentIndexToSign;
        const showForwardAction = currentIndexNeedsSigning || currentIndexCannotBeSignedYet;
        return (h("div", { key: 'a96ecb3a49b05b6a80ae7c292454b621e749c8a3', class: "sign-transactions-footer", "data-testid": DataTestIdsEnum.signTransactionsFooter }, h("div", { key: '132fe1efe371207fcde7d50ac5780041d3bd90b8', class: "sign-transactions-footer-buttons", "data-testid": DataTestIdsEnum.signTransactionsFooterButtons }, h("div", { key: 'f46173daad1d200135352786640ad4bcd9bd69af', class: "sign-transactions-footer-button-wrapper cancel" }, h("mvx-button", { key: '8fce540a41f3ce22a042f0e4b0d1af3fd03d3dfc', size: "small", onButtonClick: isFirstTransaction ? onCancel : onBack, variant: currentIndexCannotBeSignedYet ? 'primary' : 'secondary', "data-testid": isFirstTransaction ? DataTestIdsEnum.signCancelBtn : DataTestIdsEnum.signBackBtn, class: classNames('sign-transactions-footer-button', signTransactionsFooterClasses.actionButton) }, isFirstTransaction ? 'Cancel' : 'Back')), h("div", { key: '4db65192e0e0871dfefb798cbad28716a69674c5', class: "sign-transactions-footer-button-wrapper confirm" }, currentIndexCannotBeSignedYet && (h("div", { key: '62298d6c087268c86de3aa6d9a7d1229febdd485', class: "sign-transactions-footer-button-tooltip-wrapper", onClick: (event) => event.stopPropagation() }, h("mvx-tooltip", { key: '66c0c531225543d861082f885ff377cf6979949b', trigger: h("div", { class: {
                    'sign-transactions-footer-button-tooltip': true,
                    [signTransactionsFooterClasses.buttonTooltip]: true,
                } }) }, needsSigning ? (h(Fragment, null, "You cannot sign this transaction yet, ", h("br", null), " please go back and sign consecutively.")) : (h(Fragment, null, "You cannot confirm this transaction yet, ", h("br", null), "please go back and confirm consecutively."))))), h("mvx-button", { key: '3f7577f515f19e583f6e60dccc3653b7b1da9d4a', size: "small", "data-testid": DataTestIdsEnum.signNextTransactionBtn, onClick: showForwardAction ? this.handleSignClick : onNext, disabled: currentIndexCannotBeSignedYet || this.isWaitingForSignature, class: classNames('sign-transactions-footer-button', signTransactionsFooterClasses.actionButton) }, showForwardAction ? (h("span", { class: "sign-transactions-footer-button-label-wrapper" }, this.isWaitingForSignature ? (h("span", { class: "sign-transactions-footer-button-label" }, "Check your device")) : (h("span", { class: "sign-transactions-footer-button-label" }, needsSigning ? 'Sign' : 'Confirm')))) : (h("span", { class: "sign-transactions-footer-button-label-wrapper" }, h("span", { class: "sign-transactions-footer-button-label" }, "Next"))), showForwardAction ? (h("span", { class: {
                'sign-transactions-footer-button-icon-wrapper': true,
                'lighter': currentIndexCannotBeSignedYet,
            } }, this.isWaitingForSignature ? (h("span", { class: "sign-transactions-footer-button-icon" }, h("mvx-spinner-icon", null))) : (h("span", { class: "sign-transactions-footer-button-icon" }, needsSigning ? h("mvx-pencil-icon", null) : h("mvx-check-icon", null))))) : (h("span", { class: "sign-transactions-footer-button-icon-wrapper" }, h("span", { class: "sign-transactions-footer-button-icon" }, h("mvx-arrow-right-icon", null))))))), h("div", { key: '84b20f00a23928f44cf0b52ae4e5376d6d84570f', class: "sign-transactions-footer-identity", "data-testid": DataTestIdsEnum.signTransactionsFooterIdentity }, h("div", { key: 'f8e579613acf71a8c4f6c4451bd2c9844a24dfcf', class: "sign-transactions-footer-identity-label" }, "Sign with"), username && (h("div", { key: '25282bed098cd29f611455d85e3bd8dce68acd89', class: "sign-transactions-footer-identity-username", "data-testid": DataTestIdsEnum.signTransactionsFooterIdentityUsername }, h("span", { key: 'ccedf91f8bf8de01e223d56dc4dd86ade41379c3', class: "sign-transactions-footer-identity-username-prefix" }, "@"), h("span", { key: 'b92000211cccc37c438c0c376c1d986c710d98b9', class: "sign-transactions-footer-identity-username-text" }, username))), !username && address && (h("mvx-trim", { key: '5087e87521f7037ba68aafa49f4b552cd847a02f', text: address, class: "sign-transactions-footer-identity-address", "data-testid": DataTestIdsEnum.signTransactionsFooterIdentityAddress })), h("mvx-copy-button", { key: 'f3bf5b2a86a90d1a01d462c5a169905c77ee1948', text: username !== null && username !== void 0 ? username : address, class: "sign-transactions-footer-identity-copy", iconClass: "sign-transactions-footer-identity-copy-icon" }), h("mvx-explorer-link", { key: '31e96843000174399bbc8c1c4f7d6cbb33f6fca6', link: explorerLink, iconClass: signTransactionsFooterClasses.explorerLinkIcon }))));
    }
    static get style() { return signTransactionsFooterCss; }
}, [257, "mvx-sign-transactions-footer", {
        "awaitsExternalConfirmation": [32],
        "isWaitingForSignature": [32],
        "lastCommonData": [32]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["mvx-sign-transactions-footer", "mvx-arrow-right-icon", "mvx-arrow-up-right-from-square-icon", "mvx-button", "mvx-check-icon", "mvx-copy-button", "mvx-copy-icon", "mvx-explorer-link", "mvx-pencil-icon", "mvx-spinner-icon", "mvx-tooltip", "mvx-trim"];
    components.forEach(tagName => { switch (tagName) {
        case "mvx-sign-transactions-footer":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, SignTransactionsFooter);
            }
            break;
        case "mvx-arrow-right-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$b();
            }
            break;
        case "mvx-arrow-up-right-from-square-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$a();
            }
            break;
        case "mvx-button":
            if (!customElements.get(tagName)) {
                defineCustomElement$9();
            }
            break;
        case "mvx-check-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$8();
            }
            break;
        case "mvx-copy-button":
            if (!customElements.get(tagName)) {
                defineCustomElement$7();
            }
            break;
        case "mvx-copy-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$6();
            }
            break;
        case "mvx-explorer-link":
            if (!customElements.get(tagName)) {
                defineCustomElement$5();
            }
            break;
        case "mvx-pencil-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$4();
            }
            break;
        case "mvx-spinner-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "mvx-tooltip":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "mvx-trim":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { SignTransactionsFooter as S, defineCustomElement as d };
