import { p as proxyCustomElement, H, c as createEvent, h, F as Fragment } from './p-CX8jKKkc.js';
import { g as getProviderButtonIcon } from './p-BUi-J6Pu.js';
import { P as ProviderTypeEnum } from './p-Fv1Aq01M.js';
import { d as defineCustomElement$7 } from './p-S3jWSzuo.js';
import { d as defineCustomElement$6 } from './p-PbOm6law.js';
import { d as defineCustomElement$5 } from './p-CB6KWD-c.js';
import { d as defineCustomElement$4 } from './p-CQoTAERR.js';
import { d as defineCustomElement$3 } from './p-BZ9Xh4x3.js';
import { d as defineCustomElement$2 } from './p-Dt8VIrFm.js';
import { d as defineCustomElement$1 } from './p-B06pow55.js';

const providerIdleScreenCss = "/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-radius-lg:.5rem;--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-spacing:.25rem;--mvx-text-base:1rem;--mvx-text-base--line-height:1.5;--mvx-text-xl:1.25rem;--mvx-text-xl--line-height:1.4;--mvx-font-weight-medium:500;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono)}}@layer base{*,::backdrop,:after,:before{border:0 solid;box-sizing:border-box;margin:0;padding:0}::file-selector-button{appearance:button;background-color:#0000;border:0 solid;border-radius:0;box-sizing:border-box;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;margin:0;margin-inline-end:4px;opacity:1;padding:0}:host,html{-webkit-text-size-adjust:100%;font-family:var(--mvx-default-font-family,ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:var(--mvx-default-font-feature-settings,normal);font-variation-settings:var(--mvx-default-font-variation-settings,normal);line-height:1.5;tab-size:4;-webkit-tap-highlight-color:transparent}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:var(--mvx-default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-feature-settings:var(--mvx-default-mono-font-feature-settings,normal);font-size:1em;font-variation-settings:var(--mvx-default-mono-font-variation-settings,normal)}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}menu,ol,ul{list-style:none}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}button,input,optgroup,select,textarea{background-color:#0000;border-radius:0;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;opacity:1}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::placeholder{opacity:1}@supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px){::placeholder{color:currentColor}@supports (color:color-mix(in lab,red,red)){::placeholder{color:color-mix(in oklab,currentColor 50%,transparent)}}}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex;padding-block:0}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){appearance:button}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-radius-lg:.5rem;--mvx-color-accent:var(--mvx-text-accent-color);--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-spacing:.25rem;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono)}}@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components;@layer utilities{.mvx\\:h-auto{height:auto}.mvx\\:w-48{width:calc(var(--mvx-spacing)*48)}.mvx\\:w-50{width:calc(var(--mvx-spacing)*50)}.mvx\\:mt-auto{margin-top:auto}.mvx\\:ml-auto{margin-left:auto}.mvx\\:hidden{display:none}.mvx\\:h-auto\\!{height:auto!important}.mvx\\:w-4\\!{width:calc(var(--mvx-spacing)*4)!important}.mvx\\:w-full{width:100%}.mvx\\:overflow-hidden{overflow:hidden}.mvx\\:rounded-br-lg{border-bottom-right-radius:var(--mvx-radius-lg)}.mvx\\:rounded-bl-lg{border-bottom-left-radius:var(--mvx-radius-lg)}.mvx\\:fill-accent\\!{fill:var(--mvx-color-accent)!important}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,::backdrop,:after,:before{--tw-leading:initial;--tw-font-weight:initial}}}@layer base{}@layer components,utilities;:host{display:flex;flex:1;flex-direction:column;overflow:hidden}:host .unlock-provider-intro{align-items:center;color:var(--mvx-text-color-primary);display:flex;flex:1;flex-direction:column;gap:calc(var(--mvx-spacing)*4);justify-content:center;padding:calc(var(--mvx-spacing)*12);text-align:center}:host .unlock-provider-intro .unlock-provider-intro-icon{align-items:flex-end;display:flex;height:calc(var(--mvx-spacing)*37.5);justify-content:flex-start;margin-bottom:calc(var(--mvx-spacing)*6);width:calc(var(--mvx-spacing)*37.5)}:host .unlock-provider-intro .unlock-provider-intro-title{font-size:var(--mvx-text-xl);line-height:var(--tw-leading,var(--mvx-text-xl--line-height));--tw-leading:1;--tw-font-weight:var(--mvx-font-weight-medium);font-weight:var(--mvx-font-weight-medium);line-height:1}:host .unlock-provider-intro .unlock-provider-intro-text{font-size:var(--mvx-text-base);line-height:var(--tw-leading,var(--mvx-text-base--line-height));--tw-leading:calc(var(--mvx-spacing)*5);line-height:calc(var(--mvx-spacing)*5);--tw-font-weight:var(--mvx-font-weight-medium);color:var(--mvx-text-color-secondary);font-weight:var(--mvx-font-weight-medium)}@property --tw-leading{syntax:\"*\";inherits:false}@property --tw-font-weight{syntax:\"*\";inherits:false}@media (min-width:30rem){.mvx\\:xs\\:mt-5{margin-top:calc(var(--mvx-spacing)*5)}.mvx\\:xs\\:h-85{height:calc(var(--mvx-spacing)*85)}.mvx\\:xs\\:w-100{width:calc(var(--mvx-spacing)*100)}.mvx\\:xs\\:flex{display:flex}}@media (min-width:40rem){.mvx\\:sm\\:block{display:block}.mvx\\:sm\\:flex{display:flex}.mvx\\:sm\\:hidden{display:none}}";

const getProviderIntroText = (providerType) => {
    switch (providerType) {
        case ProviderTypeEnum.extension:
            return 'Open the MultiversX Browser Extension to sign the transaction.';
        case ProviderTypeEnum.metamask:
            return 'Open the Metamask Browser Extension to sign the transaction.';
        case ProviderTypeEnum.passkey:
            return 'Use your predefined passkey to sign the transaction.';
        case ProviderTypeEnum.walletConnect:
            return 'Open Xportal to sign the transaction.';
        case ProviderTypeEnum.crossWindow:
            return 'Go to MultiversX Web Wallet to sign the transaction.';
        default:
            return 'Go to your connected provider to sign the transaction.';
    }
};
const ProviderIdleScreen = /*@__PURE__*/ proxyCustomElement(class ProviderIdleScreen extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.close = createEvent(this, "close", 1);
        this.access = createEvent(this, "access", 1);
        this.provider = null;
        this.introTitle = 'Requesting Connection';
        this.introText = '';
    }
    render() {
        if (!this.provider) {
            return null;
        }
        const providerType = this.provider.type;
        const isExtensionProvider = providerType === ProviderTypeEnum.extension;
        const extensionProviderIconBaseSize = 150;
        const extensionProviderIconWidth = extensionProviderIconBaseSize + (15 / 100) * extensionProviderIconBaseSize;
        const extensionProviderIconHeight = extensionProviderIconBaseSize + (10 / 100) * extensionProviderIconBaseSize;
        const providerIntroIcon = isExtensionProvider
            ? getProviderButtonIcon({ providerType, extensionProviderIconWidth, extensionProviderIconHeight })
            : getProviderButtonIcon({ providerType });
        const providerIntroText = this.introText || getProviderIntroText(providerType);
        if (this.provider.type === ProviderTypeEnum.ledger) {
            return (h(Fragment, null, h("mvx-side-panel-header", { hasLeftButton: false, panelTitle: this.provider.name, onRightButtonClick: this.close.emit }), h("mvx-ledger-intro", { onConnect: this.access.emit })));
        }
        return (h(Fragment, null, h("mvx-side-panel-header", { hasLeftButton: false, panelTitle: this.provider.name, onRightButtonClick: this.close.emit }), h("div", { class: "unlock-provider-intro" }, h("div", { class: "unlock-provider-intro-icon" }, providerIntroIcon), h("div", { class: "unlock-provider-intro-title" }, this.introTitle), providerIntroText && h("div", { class: "unlock-provider-intro-text" }, providerIntroText), h("slot", { name: "close-button" }))));
    }
    static get style() { return providerIdleScreenCss; }
}, [257, "mvx-provider-idle-screen", {
        "provider": [16],
        "introTitle": [1, "intro-title"],
        "introText": [1, "intro-text"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["mvx-provider-idle-screen", "mvx-back-arrow-icon", "mvx-button", "mvx-close-icon", "mvx-ledger-icon", "mvx-ledger-intro", "mvx-side-panel-header", "mvx-spinner-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "mvx-provider-idle-screen":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ProviderIdleScreen);
            }
            break;
        case "mvx-back-arrow-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$7();
            }
            break;
        case "mvx-button":
            if (!customElements.get(tagName)) {
                defineCustomElement$6();
            }
            break;
        case "mvx-close-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$5();
            }
            break;
        case "mvx-ledger-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$4();
            }
            break;
        case "mvx-ledger-intro":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "mvx-side-panel-header":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "mvx-spinner-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { ProviderIdleScreen as P, defineCustomElement as d };
