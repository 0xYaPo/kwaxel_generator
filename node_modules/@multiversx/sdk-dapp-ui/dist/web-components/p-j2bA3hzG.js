import { p as proxyCustomElement, H, h, F as Fragment } from './p-CX8jKKkc.js';
import { c as classNames } from './p-DMLRPGid.js';

const transactionToastProgressCss = "/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-color-primary:var(--mvx-text-color-primary);--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-spacing:.25rem;--mvx-ease-in:cubic-bezier(.4,0,1,1);--mvx-default-transition-duration:.15s;--mvx-default-transition-timing-function:cubic-bezier(.4,0,.2,1);--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono)}}@layer base{*,::backdrop,:after,:before{border:0 solid;box-sizing:border-box;margin:0;padding:0}::file-selector-button{appearance:button;background-color:#0000;border:0 solid;border-radius:0;box-sizing:border-box;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;margin:0;margin-inline-end:4px;opacity:1;padding:0}:host,html{-webkit-text-size-adjust:100%;font-family:var(--mvx-default-font-family,ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:var(--mvx-default-font-feature-settings,normal);font-variation-settings:var(--mvx-default-font-variation-settings,normal);line-height:1.5;tab-size:4;-webkit-tap-highlight-color:transparent}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:var(--mvx-default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-feature-settings:var(--mvx-default-mono-font-feature-settings,normal);font-size:1em;font-variation-settings:var(--mvx-default-mono-font-variation-settings,normal)}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}menu,ol,ul{list-style:none}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}button,input,optgroup,select,textarea{background-color:#0000;border-radius:0;color:inherit;font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;opacity:1}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::placeholder{opacity:1}@supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px){::placeholder{color:currentColor}@supports (color:color-mix(in lab,red,red)){::placeholder{color:color-mix(in oklab,currentColor 50%,transparent)}}}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex;padding-block:0}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){appearance:button}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer theme{:host,:root{--mvx-font-sans:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--mvx-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mvx-default-font-family:var(--mvx-font-sans);--mvx-default-mono-font-family:var(--mvx-font-mono);--mvx-color-primary:var(--mvx-text-color-primary)}}@layer base{}@layer base{}@layer base{}@layer base{}@layer components;@layer utilities{.mvx\\:h-full{height:100%}.mvx\\:w-auto{width:auto}.mvx\\:fill-current{fill:currentColor}.mvx\\:text-primary{color:var(--mvx-color-primary)}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,::backdrop,:after,:before{--tw-scale-x:1;--tw-scale-y:1;--tw-scale-z:1;--tw-duration:initial;--tw-ease:initial}}}@layer base{}@layer components;@layer utilities{.mvx\\:origin-center{transform-origin:50%}.mvx\\:scale-125{--tw-scale-x:125%;--tw-scale-y:125%;--tw-scale-z:125%;scale:var(--tw-scale-x)var(--tw-scale-y)}.mvx\\:fill-primary\\!{fill:var(--mvx-color-primary)!important}} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer components;@layer utilities{} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components;@property --tw-scale-x{syntax:\"*\";inherits:false;initial-value:1}@property --tw-scale-y{syntax:\"*\";inherits:false;initial-value:1}@property --tw-scale-z{syntax:\"*\";inherits:false;initial-value:1} /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer base{}@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components; /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer base{}@layer components,utilities /*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */@layer properties{}@layer base{}@layer components,utilities;@keyframes progressiveFixedWidthExpansion{0%{width:min(var(--start-width,0%),80%)}to{width:80%}}@keyframes progressiveInfiniteWidthExpansion{0%{width:min(var(--start-width,0%),100%)}to{width:100%}}@keyframes quickWidthExpansion{0%{width:0}to{width:100%}}.transaction-toast-progress{display:block;height:100%;position:relative;width:100%}.transaction-toast-bar-wrapper{height:calc(var(--mvx-spacing)*1);left:calc(var(--mvx-spacing)*1);margin:calc(var(--mvx-spacing)*0);opacity:1;pointer-events:none;right:calc(var(--mvx-spacing)*1);transition-duration:var(--tw-duration,var(--mvx-default-transition-duration));transition-property:opacity;transition-timing-function:var(--tw-ease,var(--mvx-default-transition-timing-function));--tw-duration:.3s;--tw-ease:var(--mvx-ease-in);background:var(--mvx-progress-color);border-radius:20px;bottom:5px;display:flex;overflow:hidden;position:absolute;transition-duration:.3s;transition-timing-function:var(--mvx-ease-in);z-index:9999}.transaction-toast-bar{border-radius:20px;bottom:calc(var(--mvx-spacing)*0);height:100%;left:calc(var(--mvx-spacing)*0);position:absolute;top:calc(var(--mvx-spacing)*0)}.transaction-toast-bar.infinite{background:var(--mvx-progress-accent-color);display:flex;width:20%}.transaction-toast-bar.infinite .transaction-toast-bar-line{animation:progressiveInfiniteWidthExpansion var(--animation-duration,60s)cubic-bezier(.1,.95,.25,.75)forwards;animation-delay:var(--animation-delay,6s);height:100%;position:relative}.transaction-toast-bar.fill,.transaction-toast-bar.infinite .transaction-toast-bar-line{background:var(--mvx-progress-accent-color);border-radius:20px;width:calc(var(--mvx-spacing)*0)}.transaction-toast-bar.fill{position:absolute}.transaction-toast-bar.fill.animate{animation:quickWidthExpansion .25s linear forwards}.transaction-toast-bar-fixed{background:var(--mvx-progress-accent-color);transition:width 1s linear;width:var(--start-width,0)}.transaction-toast-bar-content{padding-bottom:calc(var(--mvx-spacing)*1);position:relative;z-index:10}@property --tw-duration{syntax:\"*\";inherits:false}@property --tw-ease{syntax:\"*\";inherits:false}";

const DEFAULT_INFINITE_ANIMATION_DURATION = 30;
const ToastProgress = /*@__PURE__*/ proxyCustomElement(class ToastProgress extends H {
    constructor() {
        super();
        this.__registerHost();
        this.currentTimestamp = Date.now() / 1000;
        this.hasTimeElapsed = false;
        this.expectedTransactionDuration = 0;
        this.secondsPassedSinceStart = 0;
        this.shouldShowProgressBar = false;
        this.percentagePassedSinceStart = 0;
        this.shouldQuickFill = false;
        this.infiniteProgressDelay = 0;
        this.infinitePercentagePassedSinceStart = 0;
        this.infinitePercentageAnimationDuration = DEFAULT_INFINITE_ANIMATION_DURATION;
    }
    componentWillLoad() {
        this.updateProgress();
    }
    componentDidLoad() {
        this.intervalId = setInterval(() => {
            this.updateProgress();
        }, 1000);
    }
    disconnectedCallback() {
        if (this.timeElapsedTimeoutReference) {
            clearTimeout(this.timeElapsedTimeoutReference);
        }
        if (this.intervalId) {
            clearInterval(this.intervalId);
        }
    }
    handleTimeChange() {
        this.updateProgress();
    }
    updateProgress() {
        const hasValidTimestamps = typeof this.startTime === 'number' && typeof this.endTime === 'number';
        if (!hasValidTimestamps || this.startTime >= this.endTime) {
            this.shouldShowProgressBar = false;
            this.shouldQuickFill = true;
            clearTimeout(this.timeElapsedTimeoutReference);
            this.timeElapsedTimeoutReference = setTimeout(() => {
                this.hasTimeElapsed = true;
            }, 500);
            return;
        }
        this.shouldShowProgressBar = true;
        this.currentTimestamp = Date.now() / 1000;
        this.expectedTransactionDuration = this.endTime - this.startTime;
        this.secondsPassedSinceStart = this.currentTimestamp - this.startTime;
        this.percentagePassedSinceStart =
            this.expectedTransactionDuration > 0
                ? Math.min((this.secondsPassedSinceStart / this.expectedTransactionDuration) * 100, 100)
                : 0;
        this.infinitePercentageAnimationDuration =
            DEFAULT_INFINITE_ANIMATION_DURATION + this.expectedTransactionDuration * 2;
        this.infiniteProgressDelay = Math.max(0, this.expectedTransactionDuration - this.secondsPassedSinceStart);
        this.infinitePercentagePassedSinceStart =
            (this.secondsPassedSinceStart / (this.expectedTransactionDuration + this.infinitePercentageAnimationDuration)) *
                100;
        if (this.expectedTransactionDuration > 0 && !this.isStatusPending) {
            clearTimeout(this.timeElapsedTimeoutReference);
            this.timeElapsedTimeoutReference = setTimeout(() => {
                this.hasTimeElapsed = true;
            }, this.expectedTransactionDuration * 1000 + 2000);
        }
    }
    render() {
        return (h(Fragment, { key: 'acf6dc4783486e5080dc4857e31ce4d3ee89cc65' }, h("div", { key: '33802954bdbdcbe1bed962dc62c44fa765749154', class: "transaction-toast-bar-wrapper", style: { opacity: this.hasTimeElapsed ? '0' : '1' } }, h("div", { key: 'da20a34fa83f5d736d2fd6d1c7aa6d289c20bae2', class: "transaction-toast-bar-fixed", style: {
                '--start-width': `${this.percentagePassedSinceStart}%`,
            } }), h("div", { key: 'b2447a1f7d2984ff6ec3387b611c5d547258d0fc', class: "transaction-toast-bar infinite" }, h("div", { key: '7e4398bfb7db241fb6ed94e9e9d1fdea3fc3a9c5', class: "transaction-toast-bar-line", style: {
                '--start-width': `${this.infinitePercentagePassedSinceStart}%`,
                '--animation-duration': `${this.infinitePercentageAnimationDuration}s`,
                '--animation-delay': `${this.infiniteProgressDelay}s`,
            } })), h("div", { key: '74da615dfb1dc583756e15f7008961d736019594', class: classNames('transaction-toast-bar fill', {
                animate: this.shouldQuickFill,
            }) })), h("div", { key: '829896d806415b8fb4760a146968b106e09b46ac', class: "transaction-toast-bar-content" }, h("slot", { key: '9a344cd3950b416aeb8552d402eed9c36b746e93' }))));
    }
    static get watchers() { return {
        "startTime": ["handleTimeChange"],
        "endTime": ["handleTimeChange"],
        "isStatusPending": ["handleTimeChange"]
    }; }
    static get style() { return transactionToastProgressCss; }
}, [260, "mvx-transaction-toast-progress", {
        "startTime": [2, "start-time"],
        "endTime": [2, "end-time"],
        "isStatusPending": [4, "is-status-pending"],
        "currentTimestamp": [32],
        "hasTimeElapsed": [32],
        "expectedTransactionDuration": [32],
        "secondsPassedSinceStart": [32],
        "shouldShowProgressBar": [32],
        "percentagePassedSinceStart": [32],
        "shouldQuickFill": [32],
        "infiniteProgressDelay": [32],
        "infinitePercentagePassedSinceStart": [32],
        "infinitePercentageAnimationDuration": [32]
    }, undefined, {
        "startTime": ["handleTimeChange"],
        "endTime": ["handleTimeChange"],
        "isStatusPending": ["handleTimeChange"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["mvx-transaction-toast-progress"];
    components.forEach(tagName => { switch (tagName) {
        case "mvx-transaction-toast-progress":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ToastProgress);
            }
            break;
    } });
}

export { ToastProgress as T, defineCustomElement as d };
