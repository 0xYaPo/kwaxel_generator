import { JSX, VNode } from "@stencil/core";
import { AnnotatedStoryFn, Args, ComponentAnnotations, DecoratorFunction, LoaderFunction, ProjectAnnotations, StoryAnnotations, StoryContext, StorybookConfig, StrictArgs, WebRenderer } from "storybook/internal/types";
import { StorybookConfigVite } from "@storybook/builder-vite";

//#region src/types.d.ts
interface DevJSX {
  fileName: string;
  lineNumber: number;
  columnNumber: number;
  stack?: string;
}
type JSXChildren = string | number | boolean | null | undefined | Function | RegExp | JSXChildren[] | Promise<JSXChildren> | VNode;
type ComponentChildren<PROPS> = PROPS extends {
  children: any;
} ? never : {
  children?: JSXChildren;
};
type PublicProps<PROPS> = (PROPS extends Record<any, any> ? Omit<PROPS, `${string}$`> : unknown extends PROPS ? {} : PROPS) & ComponentChildren<PROPS>;
type FunctionComponent<P = unknown> = {
  renderFn(props: P, key: string | null, flags: number, dev?: DevJSX): VNode;
}['renderFn'];
type Component<PROPS = unknown> = FunctionComponent<PublicProps<PROPS>>;
interface StencilRenderer<T> extends WebRenderer {
  component: Component<T> | any;
  storyResult: ReturnType<Component<T>>;
  args: T;
}
type Preview = ProjectAnnotations<StencilRenderer<unknown>>;
/**
 * Metadata to configure the stories for a component.
 *
 * @see [Default export](https://storybook.js.org/docs/formats/component-story-format/#default-export)
 */
type Meta<TArgs = Args> = ComponentAnnotations<StencilRenderer<TArgs>, TArgs>;
/**
 * Story function that represents a CSFv2 component example.
 *
 * @see [Named Story exports](https://storybook.js.org/docs/formats/component-story-format/#named-story-exports)
 */
type StoryFn<TArgs = Args> = AnnotatedStoryFn<StencilRenderer<TArgs>, TArgs>;
/**
 * Story function that represents a CSFv3 component example.
 *
 * @see [Named Story exports](https://storybook.js.org/docs/formats/component-story-format/#named-story-exports)
 */
type StoryObj<TArgs = Args> = StoryAnnotations<StencilRenderer<TArgs>, TArgs>;
type Decorator<TArgs = StrictArgs> = DecoratorFunction<StencilRenderer<TArgs>, TArgs>;
type Loader<TArgs = StrictArgs> = LoaderFunction<StencilRenderer<TArgs>, TArgs>;
type StoryContext$1<TArgs = StrictArgs> = StoryContext<StencilRenderer<TArgs>, TArgs>;
type StorybookConfig$1 = Omit<StorybookConfig, 'framework'> & {
  framework: '@stencil/storybook-plugin' | {
    name: '@stencil/storybook-plugin';
  };
} & StorybookConfigVite;
/**
 * Extend the JSX namespace to include StencilJSX.IntrinsicElements, StencilJSX.Element, and StencilJSX.ElementClass.
 * This is necessary to allow the use of Stencil components in Storybook.
 * Without we get are getting type errors.
 */
type StencilIntrinsic = JSX.IntrinsicElements;
type StencilElement = JSX.Element;
declare global {
  namespace JSX {
    interface IntrinsicElements extends StencilIntrinsic {}
    interface Element extends StencilElement {}
    interface ElementClass {}
  }
}
//#endregion
export { Decorator, Loader, Meta, Preview, StencilRenderer, StoryContext$1 as StoryContext, StoryFn, StoryObj, StorybookConfig$1 as StorybookConfig };
//# sourceMappingURL=types-BZP9npQ9.d.cts.map