const require_chunk = require('./chunk-CsX-DzYB.cjs');
const storybook_internal_docs_tools = require_chunk.__toESM(require("storybook/internal/docs-tools"));
const storybook_internal_preview_api = require_chunk.__toESM(require("storybook/internal/preview-api"));

//#region src/docs/render-html.ts
function vnodeToHtml(node, indentLevel = 0) {
	const indent = "  ".repeat(indentLevel);
	if (node.$text$ !== null) return indent + node.$text$;
	if (node.$tag$ === null) return "";
	const tag = node.$tag$;
	const attrs = node.$attrs$ ? Object.entries(node.$attrs$).filter(([_, value]) => value !== void 0).map(([key, value]) => {
		if (typeof value === "boolean") return value ? ` ${key}` : "";
		return ` ${key}="${value}"`;
	}).join("") : "";
	const children = node.$children$ ?? [];
	if (children.length === 0) return `${indent}<${tag}${attrs}></${tag}>`;
	const childrenHtml = children.map((child) => vnodeToHtml(child, indentLevel + 1)).join("\n");
	return `${indent}<${tag}${attrs}>\n${childrenHtml}\n${indent}</${tag}>`;
}
const renderHTML = (vnode) => {
	return vnodeToHtml(vnode);
};

//#endregion
//#region src/docs/source-decorator.ts
const skip = (context) => {
	const sourceParams = context?.parameters.docs?.source;
	const isArgsStory = context?.parameters.__isArgsStory;
	if (sourceParams.type === storybook_internal_docs_tools.SourceType.DYNAMIC) return false;
	return !isArgsStory || sourceParams?.code || sourceParams?.type === storybook_internal_docs_tools.SourceType.CODE;
};
const sourceDecorator = (storyFn, context) => {
	const story = storyFn();
	(0, storybook_internal_preview_api.useEffect)(() => {
		const renderedForSource = context?.parameters.docs?.source?.excludeDecorators ? context.originalStoryFn(context.args, context) : story;
		if (skip(context)) return;
		switch (context.parameters.docs.source.language) {
			case "html": (0, storybook_internal_preview_api.emitTransformCode)(renderHTML(renderedForSource), context);
		}
	});
	return story;
};

//#endregion
Object.defineProperty(exports, 'renderHTML', {
  enumerable: true,
  get: function () {
    return renderHTML;
  }
});
Object.defineProperty(exports, 'sourceDecorator', {
  enumerable: true,
  get: function () {
    return sourceDecorator;
  }
});
//# sourceMappingURL=docs-DJjy-dqq.cjs.map