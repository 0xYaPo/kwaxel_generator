import { createRequire } from "module";
import { dirname, join } from "path";
import stencil from "unplugin-stencil/vite";
import { fileURLToPath } from "url";
import { mergeConfig } from "vite";

//#region src/preset.ts
const require = createRequire(import.meta.url);
const getAbsolutePath = (input) => dirname(require.resolve(join(input, "package.json")));
const __dirname = dirname(fileURLToPath(import.meta.url));
const renderer = join(__dirname, "entry-preview.js");
const core = {
	builder: getAbsolutePath("@storybook/builder-vite"),
	renderer
};
const viteFinal = async (defaultConfig, { configType }) => {
	const config = mergeConfig(defaultConfig, {
		build: { target: "es2020" },
		plugins: [stencil({ rootPath: defaultConfig.root })]
	});
	if (configType === "DEVELOPMENT") return mergeConfig(config, { build: { rollupOptions: { external: ["@stencil/core"] } } });
	return config;
};
const previewAnnotations = async (input = [], options) => {
	const docsEnabled = Object.keys(await options.presets.apply("docs", {}, options)).length > 0;
	const result = [];
	return result.concat(input).concat([renderer]).concat(docsEnabled ? [join(__dirname, "entry-preview-docs.js")] : []);
};

//#endregion
export { core, previewAnnotations, viteFinal };
//# sourceMappingURL=preset.js.map